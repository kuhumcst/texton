AAA=
"alltables.bra";
CC=
  ( Attribution Kreditering
  . "https://creativecommons.org/licenses/by/4.0/"
  . 
  )
  ( Attribution-NonCommercial Kreditering-IkkeKommerciel
  . "https://creativecommons.org/licenses/by-nc/4.0/"
  . 
  )
  (   Attribution-NonCommercial-NoDerivatives
      Kreditering-IkkeKommerciel-IngenBearbejdelse
  . "https://creativecommons.org/licenses/by-nc-nd/4.0/"
  . 
  )
  (   Attribution-NonCommercial-ShareAlike
      Kreditering-IkkeKommerciel-DelPåSammeVilkår
  . "https://creativecommons.org/licenses/by-nc-sa/4.0/"
  . 
  )
  ( Attribution-NoDerivatives Kreditering-IngenBearbejdelse
  . "https://creativecommons.org/licenses/by-nd/4.0/"
  . 
  )
  ( Attribution-ShareAlike Kreditering-DelPåSammeVilkår
  . "https://creativecommons.org/licenses/by-sa/4.0/"
  . 
  );
CTBs=
;
DK-CLARIN-metadata=
  ( id
  . "Text in UI" "Tekst i grænsefladen"
  . "Required r / optional o / automatic a / zeroOrMore / oneOrMore"
  . "line / lines / box / empty"
  . "Placering i header"
  . Noter
  . "Help text" Hjælpetekst
  . pattern
  . URL
  )
  ( "Source text:" "Kildetekst:"
  ,   ( fsbat
      . "Work title" Værktitel
      . r
      . line
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          biblStruct
          analytic
          title
      . 
      .   "Title of the physical work. If the work exists only in a digital version, the title of the digital work must be stated here"
          "Værkets titel. Hvis værket kun findes i en digital version, skal værkets digitale titel skrives her"
      . 
      . 
      )
      ( fsbmt
      .   "Title of larger work (if work to be stored is part of this larger work)"
          "Titel på større værk (hvis værk er en del af dette større værk)"
      . r
      . line
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          biblStruct
          monogr
          (title."xml:lang")
      . 
      .   "If the work described in this record is part of a larger work then the title of the larger work is given here. Otherwise just state the Work title here."
          "Hvis værket er en del af et større værk, angives titlen på det større værk her, ellers angives blot Værktitel"
      . 
      . 
      )
      ( fsbaan
      . Author Forfatter
      . oneOrMore
      . lines
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          biblStruct
          analytic
          author
          name
      . 
      .   "Author name(s), personal or corporate, of a work; can be in bibliographic format"
          "forfatternavn(e) (personnavn eller institutionssnavn), kan være i bibliografisk format"
      . 
      . 
      )
      ( fsbmip
      . Publisher Udgiver
      . o
      . line
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          biblStruct
          monogr
          imprint
          publisher
      . 
      .   "Name of the organization responsible for the publication or distribution of a bibliographic item"
          "Navn på institution ansvarlig for publicering eller distribution af en bibliografisk enhed"
      . 
      . 
      )
      ( fsbmidw
      . "Publishing date" Udgivelsesdato
      . o
      . line
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          biblStruct
          monogr
          imprint
          (date.when)
      . 
      .   "Publication date in format yyyy-mm-dd or yyyy"
          "Udgivelsesdato i formatet yyyy-mm-dd eller yyyy"
      . DATE
      . 
      )
      ( pcdw
      . "Date of work creation" "Dato for værkets tilblivelse"
      . o
      . line
      . TEI teiHeader profileDesc creation (date.when)
      . "If the date of text creation is not known, it can be set to the same value as \"Udgivelsesdato\", or left empty"
      .   "Work creation date in format yyyy-mm-dd or yyyy"
          "Dato for værkets tilblivelse i formatet yyyy-mm-dd eller yyyy"
      . DATE
      . 
      )
      ( pll
      . Language Sprog
      . a
      . line
      . TEI teiHeader profileDesc langUsage language
      . 
      .   "A single language or sublanguage used within the work e.g., da, en, de, la, no (ISO 639-1 2-character codes)"
          "Et enkelt sprog eller subsprog anvendt i værket; fx da, en, de, la, no (ISO 639-1 2-bogstavskoder)"
      . ISO639
      . 
      )
      ( ptd
      . Subject Domæne
      . o
      . line
      .   TEI
          teiHeader
          profileDesc
          textDesc
          domain
          (type.specific)
      . "subject, eksempler gives i hjælpetekst"
      .   "Topic of the ressource. Typically, the subject will be represented using keywords, key phrases, or classification codes. Recommended best practice is to use a classification system, e.g.  \"kommunikation (DK5-19.5)\", \"kristendom (DK5-20)\""
          "Resursens emne. Domænet bør repræsenteres af et nøgleord eller en klassifikationskode. Best practice er at anvende et etableret klassifikationssystem fx: kommunikation (DK5-19.5), kristendom (DK5-20)"
      . 
      .   "info.clarin.dk/en/the-clarin-dk-infrastructure/use-clarin-dk/domains-in-clarin.dk/"
          "info.clarin.dk/clarin-dk-infrastrukturen/brug-clarindk/emner/"
      )
  )
  ( "Digital version of the resource" "Elektroniske version:"
  ,   ( ftt
      . "Digital work title" "Titel på digitalt værk"
      . r
      . line
      . TEI teiHeader fileDesc titleStmt title
      . 
      .   "Title of the digital work can be equal to \"Title for this work\" if the work is created as a digital resource"
          "Titel på det digitale værk evt. = værktitel hvis resursen er skabt elektronisk"
      . 
      . 
      )
      ( ftrnn
      .   "The responsible party for creation of the digital version"
          "Den ansvarlige for skabelsen af den digitale version"
      . oneOrMore
      . lines
      .   TEI
          teiHeader
          fileDesc
          titleStmt
          respStmt
          name
          name
      . "teiHeader.fileDesc.titleStmt.respStmt.name skal kunne gentages (dvs både inderste <name> (fra indtastning) og <note> (genereret))"
      .   "The responsible person or organisation is the author if the resource is originally created as an electronic work or the person who created the electronic version or the person who created the conversion"
          "Den ansvarlige person eller organisation er forfatteren hvis resursen er skabt elektronisk, eller den person der har skabt den elektroniske version, eller den der foretager denne konvertering"
      . 
      . 
      )
      ( fpd
      .   "The responsible party  for distribution of the digital version"
          "Den ansvarlige for distribution af den digitale version"
      . oneOrMore
      . lines
      . TEI teiHeader fileDesc publicationStmt distributor
      . 
      .   "The name of the person or the organization responsible for the distribution of the digital work"
          "Navn på person eller organisation ansvarlig for distribution af digitalt værk"
      . 
      . 
      )
      ( fts
      . Sponsor Sponsor
      . zeroOrMore
      . lines
      . TEI teiHeader fileDesc titleStmt sponsor
      . "Skal kunne indeholde flere navne"
      .   "Name(s) of sponsoring organization(s)/institution(s), project or grant"
          "Navn(e) på sponsorerende organisation(er)/institution(er), projekt eller bevilling"
      . 
      . 
      )
      ( ftrndw
      . "Conversion date" Konverteringsdato
      . a
      . 
      .   TEI
          teiHeader
          fileDesc
          titleStmt
          respStmt
          name
          (date.when)
      . 
      .   "Date when digital version of work is created in format yyyy-mm-dd or yyyy"
          "Dato for digital version af værket  i formatet yyyy-mm-dd eller yyyy"
      . DATE
      . 
      )
      ( fnn
      . Description Beskrivelse
      . r
      . box
      . TEI teiHeader fileDesc notesStmt note
      . "Feltet skal lægge op til en lidt længere beskrivelse"
      .   "An account of the resource -.contents of this field may include but are not limited to: an abstract, a table of contents, or a free-text account of the resource"
          "En beskrivelse af resursen som kan inkludere et sammendrag, en indholdsfortegnelse eller en tekstbeskrivelse af resursen"
      . 
      . 
      )
      ( EXTENTw
      . Size Størrelse
      . a
      . line
      . TEI teiHeader fileDesc extent (num.type.words)
      . "Automatisk optælling, vi skal nok tale om den"
      .   "Size of a work specified in any convenient units."
          "værkets størrelse; størrelsen angives i passende enheder"
      . 
      . 
      )
      ( fpi
      . Identifier Id
      . a o
      . line
      . TEI teiHeader fileDesc publicationStmt idno
      . "Genereres automatisk hvis bruger ikke skriver noget"
      .   "An identifier the object already has, such as a bibliographic id"
          "Objektets id; kan fx være et bibliografisk id"
      . 
      . 
      )
      ( fpa
      . Availability Tilgængelighed
      . a
      . line
      .   TEI
          teiHeader
          fileDesc
          publicationStmt
          (availability.status.free)
      . "Genereres automatisk"
      . 
      . 
      . 
      )
      ( fpaab
      . "Type of Availability" "Type af tilgængelighed"
      . a
      . line
      .   TEI
          teiHeader
          fileDesc
          publicationStmt
          (availability.status.free)
          (ab.type.public)
      . "Genereres automatisk"
      . 
      . 
      . 
      )
      ( eaa
      . 
      . a
      . 
      . TEI teiHeader encodingDesc appInfo application
      . 
      . 
      . 
      . 
      )
      ( pcdc
      . 
      . a
      . 
      . TEI teiHeader profileDesc creation (date.cert)
      . "default til værdi=\"high\""
      . 
      . 
      . 
      )
  );
HTTP-status-codes=
  ( 100
  . Continue
  . "This means that the server has received the request headers, and that the client should proceed to send the request body (in the case of a request for which a body needs to be sent; for example, a POST request). If the request body is large, sending it to a server when a request has already been rejected based upon inappropriate headers is inefficient. To have a server check if the request could be accepted based on the request's headers alone, a client must send Expect: 100-continue as a header in its initial request and check if a 100 Continue status code is received in response before continuing (or receive 417 Expectation Failed and not continue)."
  )
  ( 101
  . "Switching Protocols"
  . "This means the requester has asked the server to switch protocols and the server is acknowledging that it will do so."
  )
  ( 102
  . "Processing (WebDAV) (RFC 2518)"
  . "As a WebDAV request may contain many sub-requests involving file operations, it may take a long time to complete the request. This code indicates that the server has received and is processing the request, but no response is available yet. This prevents the client from timing out and assuming the request was lost."
  )
  ( 200
  . OK
  . "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
  )
  ( 201
  . Created
  . "The request has been fulfilled and resulted in a new resource being created."
  )
  ( 202
  . Accepted
  . "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
  )
  ( 203
  . "Non-Authoritative Information (since HTTP/1.1)"
  . "The server successfully processed the request, but is returning information that may be from another source."
  )
  ( 204
  . "No Content"
  . "The server successfully processed the request, but is not returning any content."
  )
  ( 205
  . "Reset Content"
  . "The server successfully processed the request, but is not returning any content. Unlike a 204 response, this response requires that the requester reset the document view."
  )
  ( 206
  . "Partial Content"
  . "The server is delivering only part of the resource due to a range header sent by the client. The range header is used by tools like wget to enable resuming of interrupted downloads, or split a download into multiple simultaneous streams."
  )
  ( 207
  . "Multi-Status (WebDAV) (RFC 4918)"
  . "The message body that follows is an XML message and can contain a number of separate response codes, depending on how many sub-requests were made."
  )
  ( 300
  . "Multiple Choices"
  . "Indicates multiple options for the resource that the client may follow. It, for instance, could be used to present different format options for video, list files with different extensions, or word sense disambiguation."
  )
  ( 301
  . "Moved Permanently"
  . "This and all future requests should be directed to the given URI."
  )
  ( 302
  . Found
  . "This is the most popular redirect code, but also an example of industrial practice contradicting the standard. HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302 with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307 to distinguish between the two behaviours. However, the majority of Web applications and frameworks still use the 302 status code as if it were the 303."
  )
  ( 303
  . "See Other (since HTTP/1.1)"
  . "The response to the request can be found under another URI using a GET method. When received in response to a PUT, it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
  )
  ( 304
  . "Not Modified"
  . "Indicates the resource has not been modified since last requested. Typically, the HTTP client provides a header like the If-Modified-Since header to provide a time against which to compare. Using this saves bandwidth and reprocessing on both the server and client, as only the header data must be sent and received in comparison to the entirety of the page being re-processed by the server, then sent again using more bandwidth of the server and client."
  )
  ( 305
  . "Use Proxy (since HTTP/1.1)"
  . "Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons."
  )
  (306."Switch Proxy"."No longer used.")
  ( 307
  . "Temporary Redirect (since HTTP/1.1)"
  . "In this occasion, the request should be repeated with another URI, but future requests can still use the original URI. In contrast to 303, the request method should not be changed when reissuing the original request. For instance, a POST request must be repeated using another POST request."
  )
  (400."Bad Request"."The request cannot be fulfilled due to bad syntax.")
  ( 401
  . Unauthorized
  . "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource. See Basic access authentication and Digest access authentication."
  )
  ( 402
  . "Payment Required"
  . "Reserved for future use. The original intention was that this code might be used as part of some form of digital cash or micropayment scheme, but that has not happened, and this code is not usually used. As an example of its use, however, Apple's MobileMe service generates a 402 error (\"httpStatusCode:402\" in the Mac OS X Console log) if the MobileMe account is delinquent."
  )
  ( 403
  . Forbidden
  . "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
  )
  ( 404
  . "Not Found"
  . "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
  )
  ( 405
  . "Method Not Allowed"
  . "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
  )
  ( 406
  . "Not Acceptable"
  . "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
  )
  (407."Proxy Authentication Required".)
  ( 408
  . "Request Timeout"
  . "The server timed out waiting for the request. According to W3 HTTP specifications: \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\""
  )
  ( 409
  . Conflict
  . "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
  )
  ( 410
  . Gone
  . "Indicates that the resource requested is no longer available and will not be available again. This should be used when a resource has been intentionally removed; however, it is not necessary to return this code and a 404 Not Found can be issued instead. However, despite the most common status code for such a page being 404 Not Found, 410 Gone is still used by some servers. Upon receiving a 410 status code, the client should not request the resource again in the future. Clients such as search engines should remove the resource from their indices."
  )
  ( 411
  . "Length Required"
  . "The request did not specify the length of its content, which is required by the requested resource."
  )
  ( 412
  . "Precondition Failed"
  . "The server does not meet one of the preconditions that the requester put on the request."
  )
  ( 413
  . "Request Entity Too Large"
  . "The request is larger than the server is willing or able to process."
  )
  ( 414
  . "Request-URI Too Long"
  . "The URI provided was too long for the server to process."
  )
  ( 415
  . "Unsupported Media Type"
  . "The request entity has a media type which the server or resource does not support. For example the client uploads an image as image/svg+xml, but the server requires that images use a different format."
  )
  ( 416
  . "Requested Range Not Satisfiable"
  . "The client has asked for a portion of the file, but the server cannot supply that portion. For example, if the client asked for a part of the file that lies beyond the end of the file."
  )
  ( 417
  . "Expectation Failed"
  . "The server cannot meet the requirements of the Expect request-header field."
  )
  ( 418
  . "I'm a teapot"
  . "This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol, and is not expected to be implemented by actual HTTP servers."
  )
  ( 422
  . "Unprocessable Entity (WebDAV) (RFC 4918)"
  . "The request was well-formed but was unable to be followed due to semantic errors."
  )
  ( 423
  . "Locked (WebDAV) (RFC 4918)"
  . "The resource that is being accessed is locked"
  )
  ( 424
  . "Failed Dependency (WebDAV) (RFC 4918)"
  . "The request failed due to failure of a previous request (e.g. a PROPPATCH)."
  )
  ( 425
  . "Unordered Collection (RFC 3648)"
  . "Defined in drafts of \"WebDAV Advanced Collections Protocol\", but not present in \"Web Distributed Authoring and Versioning (WebDAV) Ordered Collections Protocol\"."
  )
  ( 426
  . "Upgrade Required (RFC 2817)"
  . "The client should switch to a different protocol such as TLS/1.0."
  )
  ( 449
  . "Retry With"
  . "A Microsoft extension. The request should be retried after performing the appropriate action."
  )
  ( 450
  . "Blocked by Windows Parental Controls"
  . "A Microsoft extension. This error is given when Windows Parental Controls are turned on and are blocking access to the given webpage."
  )
  ( 500
  . "Internal Server Error"
  . "A generic error message, given when no more specific message is suitable."
  )
  ( 501
  . "Not Implemented"
  . "The server either does not recognise the request method, or it lacks the ability to fulfill the request."
  )
  ( 502
  . "Bad Gateway"
  . "The server was acting as a gateway or proxy and received an invalid response from the upstream server."
  )
  ( 503
  . "Service Unavailable"
  . "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state."
  )
  ( 504
  . "Gateway Timeout"
  . "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server."
  )
  ( 505
  . "HTTP Version Not Supported"
  . "The server does not support the HTTP protocol version used in the request."
  )
  ( 506
  . "Variant Also Negotiates (RFC 2295)"
  . "Transparent content negotiation for the request results in a circular reference."
  )
  (507."Insufficient Storage (WebDAV) (RFC 4918)".)
  ( 509
  . "Bandwidth Limit Exceeded (Apache bw/limited extension)"
  . "This status code, while used by many servers, is not specified in any RFCs."
  )
  (510."Not Extended (RFC 2774)".);
ISO-639=
  aa
  aar
  ab
  abk
  ace
  ach
  ada
  ady
  ae
  af
  afa
  afh
  afr
  ain
  ak
  aka
  akk
  alb
  ale
  alg
  alt
  am
  amh
  an
  ang
  anp
  apa
  ar
  ara
  arc
  arg
  arm
  arn
  arp
  art
  arw
  as
  asm
  ast
  ath
  aus
  av
  ava
  ave
  awa
  ay
  aym
  az
  aze
  ba
  bad
  bai
  bak
  bal
  bam
  ban
  baq
  bas
  bat
  be
  bej
  bel
  bem
  ben
  ber
  bg
  bh
  bho
  bi
  bih
  bik
  bin
  bis
  bla
  bm
  bn
  bnt
  bo
  bod
  bos
  br
  bra
  bre
  bs
  btk
  bua
  bug
  bul
  bur
  byn
  ca
  cad
  cai
  car
  cat
  cau
  ce
  ceb
  cel
  ces
  ch
  cha
  chb
  che
  chg
  chi
  chk
  chm
  chn
  cho
  chp
  chr
  chu
  chv
  chy
  cmc
  co
  cop
  cor
  cos
  cpe
  cpf
  cpp
  cr
  cre
  crh
  crp
  cs
  csb
  cu
  cus
  cv
  cy
  cym
  cze
  da
  dak
  dan
  dar
  day
  de
  del
  den
  deu
  dgr
  din
  div
  doi
  dra
  dsb
  dua
  dum
  dut
  dv
  dyu
  dz
  dzo
  ee
  efi
  egy
  eka
  el
  ell
  elx
  en
  eng
  enm
  eo
  epo
  es
  est
  et
  eu
  eus
  ewe
  ewo
  fa
  fan
  fao
  fas
  fat
  ff
  fi
  fij
  fil
  fin
  fiu
  fj
  fo
  fon
  fr
  fra
  fre
  frm
  fro
  frr
  frs
  fry
  ful
  fur
  fy
  ga
  gaa
  gay
  gba
  gd
  gem
  geo
  ger
  gez
  gil
  gl
  gla
  gle
  glg
  glv
  gmh
  gn
  goh
  gon
  gor
  got
  grb
  grc
  gre
  grn
  gsw
  gu
  guj
  gv
  gwi
  ha
  hai
  hat
  hau
  haw
  he
  heb
  her
  hi
  hil
  him
  hin
  hit
  hmn
  hmo
  ho
  hr
  hrv
  hsb
  ht
  hu
  hun
  hup
  hy
  hye
  hyw
  hz
  ia
  iba
  ibo
  ice
  id
  ido
  ie
  ig
  ii
  iii
  ijo
  ik
  iku
  ile
  ilo
  ina
  inc
  ind
  ine
  inh
  io
  ipk
  ira
  iro
  is
  isl
  it
  ita
  iu
  ja
  jav
  jbo
  jpn
  jpr
  jrb
  jv
  ka
  kaa
  kab
  kac
  kal
  kam
  kan
  kar
  kas
  kat
  kau
  kaw
  kaz
  kbd
  kg
  kha
  khi
  khm
  kho
  ki
  kik
  kin
  kir
  kj
  kk
  kl
  km
  kmb
  kn
  ko
  kok
  kom
  kon
  kor
  kos
  kpe
  kr
  krc
  krl
  kro
  kru
  ks
  ku
  kua
  kum
  kur
  kut
  kv
  kw
  ky
  la
  lad
  lah
  lam
  lao
  lat
  lav
  lb
  lez
  lg
  li
  lim
  lin
  lit
  ln
  lo
  lol
  loz
  lt
  ltz
  lu
  lua
  lub
  lug
  lui
  lun
  luo
  lus
  lv
  mac
  mad
  mag
  mah
  mai
  mak
  mal
  man
  mao
  map
  mar
  mas
  may
  mdf
  mdr
  men
  mg
  mga
  mh
  mi
  mic
  min
  mis
  mk
  mkd
  mkh
  ml
  mlg
  mlt
  mn
  mnc
  mni
  mno
  moh
  mon
  mos
  mr
  mri
  ms
  msa
  mt
  mul
  mun
  mus
  mwl
  mwr
  my
  mya
  myn
  myv
  na
  nah
  nai
  nap
  nau
  nav
  nb
  nbl
  nd
  nde
  ndo
  nds
  ne
  nep
  new
  ng
  nia
  nic
  niu
  nl
  nld
  nn
  nno
  no
  nob
  nog
  non
  nor
  nqo
  nr
  nso
  nub
  nv
  nwc
  ny
  nya
  nym
  nyn
  nyo
  nzi
  oc
  oci
  oj
  oji
  om
  or
  ori
  orm
  os
  osa
  oss
  ota
  oto
  pa
  paa
  pag
  pal
  pam
  pan
  pap
  pau
  pcm
  peo
  per
  phi
  phn
  pi
  pl
  pli
  pol
  pon
  por
  pra
  pro
  ps
  pt
  pus
  qaa
  qtz
  qu
  que
  raj
  rap
  rar
  rm
  rn
  ro
  roa
  roh
  rom
  ron
  ru
  rum
  run
  rup
  rus
  rw
  sa
  sad
  sag
  sah
  sai
  sal
  sam
  san
  sas
  sat
  sc
  scn
  sco
  sd
  se
  sel
  sem
  sg
  sga
  sgn
  shn
  si
  sid
  sin
  sio
  sit
  sk
  sl
  sla
  slk
  slo
  slv
  sm
  sma
  sme
  smi
  smj
  smn
  smo
  sms
  sn
  sna
  snd
  snk
  so
  sog
  som
  son
  sot
  spa
  sq
  sqi
  sr
  srd
  srn
  srp
  srr
  ss
  ssa
  ssw
  st
  su
  suk
  sun
  sus
  sux
  sv
  sw
  swa
  swe
  syc
  syr
  ta
  tah
  tai
  tam
  tat
  te
  tel
  tem
  ter
  tet
  tg
  tgk
  tgl
  th
  tha
  ti
  tib
  tig
  tir
  tiv
  tk
  tkl
  tl
  tlh
  tli
  tmh
  tn
  to
  tog
  ton
  tpi
  tr
  ts
  tsi
  tsn
  tso
  tt
  tuk
  tum
  tup
  tur
  tut
  tvl
  tw
  twi
  ty
  tyv
  udm
  ug
  uga
  uig
  uk
  ukr
  umb
  und
  ur
  urd
  uz
  uzb
  vai
  ve
  ven
  vi
  vie
  vo
  vol
  vot
  wa
  wak
  wal
  war
  was
  wel
  wen
  wln
  wo
  wol
  xal
  xh
  xho
  yao
  yap
  yi
  yid
  yo
  yor
  ypk
  za
  zap
  zbl
  zen
  zgh
  zh
  zha
  zho
  znd
  zu
  zul
  zun
  zxx
  zza;
ItemGroupsCache=
;
ParlaMintMetadata=
  ( id
  . "Text in UI" "Tekst i grænsefladen"
  . "Required r / optional o / automatic a / zeroOrMore / oneOrMore"
  . "line / lines / box / empty"
  . "Placering i header"
  . Noter
  . "Help text" Hjælpetekst
  . pattern
  . URL
  )
  ( "Parlamint metadata" ParlaMint-metadata
  ,   ( Ttftt
      . "/TEI/teiHeader/fileDesc/titleStmt/title"
      . oneOrMore
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          titleStmt
          (title.(type.main) "xml:lang")
      . "The Danish parliamentary corpus ParlaMint-DK, Session 20211, Sitting M62 [ParlaMint]"
      .   "For example: The Danish parliamentary corpus ParlaMint-DK, Session 20211, Sitting M62 [ParlaMint]"
          "Fx: Det danske korpus ParlaMint-DK, folketingsåret 20211, møde M62 [ParlaMint]"
      . 
      . 
      )
      ( TtfttSu
      . "/TEI/teiHeader/fileDesc/titleStmt/title (subtitle)"
      . zeroOrMore
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          titleStmt
          (title.(type.sub) "xml:lang")
      . "The Danish parliamentary corpus ParlaMint-DK, Session 20211, Sitting M62 [ParlaMint]"
      .   "For example: The Danish parliamentary corpus ParlaMint-DK, Session 20211, Sitting M62 [ParlaMint]"
          "Fx: Det danske korpus ParlaMint-DK, folketingsåret 20211, møde M62 [ParlaMint]"
      . 
      . 
      )
      ( Ttftm
      . "/TEI/teiHeader/fileDesc/titleStmt/meeting"
      . zeroOrMore
      . box
      .   TEI
          teiHeader
          fileDesc
          titleStmt
          (meeting.n corresp ana)
      . Session
      . "For example: Session" "Fx: Møde"
      . 
      . 
      )
      ( Ttftrp
      . "/TEI/teiHeader/fileDesc/titleStmt/+respStmt/persName"
      . oneOrMore
      . box
      .   TEI
          teiHeader
          fileDesc
          titleStmt
          (,respStmt)
          (persName.ref)
      . "John Bull"
      . "For example: John Bull" "Fx: John Bull"
      . 
      . 
      )
      ( Ttftrr
      . "/TEI/teiHeader/fileDesc/titleStmt/+respStmt/resp"
      . oneOrMore
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          titleStmt
          (,respStmt)
          (resp."xml:lang")
      . "TEI corpus encoding"
      . "For example: TEI corpus encoding" "Fx: TEI corpus encoding"
      . 
      . 
      )
      ( Ttftfo
      . "/TEI/teiHeader/fileDesc/titleStmt/+funder/orgName"
      . oneOrMore
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          titleStmt
          (,funder)
          (orgName."xml:lang")
      . "CLARIN forskningsinfrastruktur"
      .   "For example: CLARIN Research Infrastructure"
          "Fx: CLARIN forskningsinfrastruktur"
      . 
      . 
      )
      ( Ttfee
      . "/TEI/teiHeader/fileDesc/editionStmt/edition"
      . r
      . line
      . TEI teiHeader fileDesc editionStmt edition
      . "4.1"
      . "For example: 4.1" "Fx: 4.1"
      . 
      . 
      )
      ( EXTENTw
      . "/TEI/teiHeader/fileDesc/extent/measure (whole words <w>, bilingual)"
      . a o
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          extent
          (measure.(unit.words) quantity "xml:lang")
      . "230 speeches"
      .   "Name of unit in English and in, for example, Danish. Default: words"
          "Enhedens navn på engelsk og på fx dansk. Default: words"
      . 
      . 
      )
      ( EXTENTs
      . "/TEI/teiHeader/fileDesc/extent/measure (segments <s>, bilingual)"
      . a o
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          extent
          (measure.(unit.segments) quantity "xml:lang")
      . "230 segments"
      .   "Name of unit in English and in, for example, Danish. Default: segments"
          "Enhedens navn på engelsk og på fx dansk. Default: segments"
      . 
      . 
      )
      ( EXTENTu
      . "/TEI/teiHeader/fileDesc/extent/measure (speeches <u>, bilingual)"
      . a o
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          extent
          (measure.(unit.speeches) quantity "xml:lang")
      . "230 speeches"
      .   "Name of unit in English and in, for example, Danish. Default: speeches"
          "Enhedens navn på engelsk og på fx dansk. Default: speeches"
      . 
      . 
      )
      ( Ttfppo
      . "/TEI/teiHeader/fileDesc/publicationStmt/publisher/orgName"
      . r
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          publicationStmt
          publisher
          (orgName."xml:lang")
      . "CLARIN Research Infrastructure"
      .   "For example: CLARIN Research Infrastructure"
          "Fx: CLARIN forskningsinfrastruktur"
      . 
      . 
      )
      ( Ttfppr
      . "/TEI/teiHeader/fileDesc/publicationStmt/publisher/ref"
      . r
      . line
      .   TEI
          teiHeader
          fileDesc
          publicationStmt
          publisher
          (ref.target)
      . "www.clarin.eu"
      . "For example: www.clarin.eu" "Fx: www.clarin.eu"
      . 
      . 
      )
      ( Ttfpi
      . "/TEI/teiHeader/fileDesc/publicationStmt/idno"
      . a o
      . line
      .   TEI
          teiHeader
          fileDesc
          publicationStmt
          (idno.type subtype)
      . "http://hdl.handle.net/12345/6789"
      .   "For example: http://hdl.handle.net/12345/6789"
          "Fx: http://hdl.handle.net/12345/6789"
      . 
      . 
      )
      ( Ttfpal
      . "/TEI/teiHeader/fileDesc/publicationStmt/availability/licence"
      . r
      . select CC
      .   TEI
          teiHeader
          fileDesc
          publicationStmt
          (availability.status)
          licence
      . "http://creativecommons.org/licenses/by/4.0/"
      . 
      . 
      . 
      )
      ( Ttfpap
      . "/TEI/teiHeader/fileDesc/publicationStmt/availability/p"
      . r
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          publicationStmt
          (availability.status)
          (p."xml:lang")
      .   " This work is licensed under the "
          ( ref
          .   (target."http://creativecommons.org/licenses/by/4.0/")
            , "Creative Commons Attribution 4.0 International License"
          )
          ". "
      .   "For example:  This work is licensed under the Creative Commons Attribution 4.0 International License. "
          "Fx:  This work is licensed under the Creative Commons Attribution 4.0 International License. "
      . 
      . 
      )
      ( Ttfpd
      . "/TEI/teiHeader/fileDesc/publicationStmt/date"
      . r
      . date
      . TEI teiHeader fileDesc publicationStmt (date.when)
      . 2024-07-02
      . "For example: 2024-07-02" "Fx: 2024-07-02"
      . 
      . 
      )
      ( Ttfsbt
      . "/TEI/teiHeader/fileDesc/sourceDesc/bibl/title (bilingual, main)"
      . r
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          bibl
          (title.(type.main) "xml:lang")
      . "Hansards of the Danish Parliament"
      .   "For example: The Danish parliamentary corpus ParlaMint-DK"
          "Fx: Det danske korpus ParlaMint-DK"
      . 
      . 
      )
      ( TtfsbtS
      . "/TEI/teiHeader/fileDesc/sourceDesc/bibl/title (bilingual, sub)"
      . o
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          bibl
          (title.(type.sub) "xml:lang")
      . "Hansards of the Danish Parliament"
      .   "For example: Hansard of the Danish Parliament"
          "Fx: Referat fra folketingssalen"
      . 
      . 
      )
      ( Ttfsbe
      . "/TEI/teiHeader/fileDesc/sourceDesc/bibl/edition"
      . o
      . box XML-LANG
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          bibl
          (edition."xml:lang")
      . "Unverified session record"
      . "For example: Unverified session record" "Fx: Ikke-verifieret referat"
      . 
      . 
      )
      ( Ttfsbi
      . "/TEI/teiHeader/fileDesc/sourceDesc/bibl/idno"
      . r
      . line
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          bibl
          (idno.type subtype)
      . "https://www.ft.dk/"
      . "For example: https://www.ft.dk/" "Fx: https://www.ft.dk/"
      . 
      . 
      )
      ( Ttfsbd
      . "/TEI/teiHeader/fileDesc/sourceDesc/bibl/date"
      . r
      . date
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          bibl
          (date.when)
      . "6. 4. 2022"
      . 
      . 
      . 
      )
      ( Ttepp
      . "/TEI/teiHeader/encodingDesc/projectDesc/p"
      . r
      . box XML-LANG
      .   TEI
          teiHeader
          encodingDesc
          projectDesc
          (p."xml:lang")
      . " (ref.(target.https://www.clarin.eu/parlamint),ParlaMint) is a project that aims to (1) create a multilingual set of comparable corpora of parliamentary proceedings uniformly encoded according to the (ref.(target.https://clarin-eric.github.io/ParlaMint/),ParlaMint encoding guidelines), covering the period from 2015 to mid-2022; (2) add linguistic annotations to the corpora and machine-translate them to English; (3) make the corpora available through concordancers; and (4) build use cases in Political Sciences and Digital Humanities based on the corpus data. "
      .   "For example:  ParlaMint is a project that aims to (1) create a multilingual set of comparable corpora of parliamentary proceedings uniformly encoded according to the (ref.(target.https://clarin-eric.github.io/ParlaMint/),ParlaMint encoding guidelines), covering the period from 2015 to mid-2022; (2) add linguistic annotations to the corpora and machine-translate them to English; (3) make the corpora available through concordancers; and (4) build use cases in Political Sciences and Digital Humanities based on the corpus data. "
          "Fx: ParlaMint is a project that aims to (1) create a multilingual set of comparable corpora of parliamentary proceedings uniformly encoded according to the (ref.(target.https://clarin-eric.github.io/ParlaMint/),ParlaMint encoding guidelines), covering the period from 2015 to mid-2022; (2) add linguistic annotations to the corpora and machine-translate them to English; (3) make the corpora available through concordancers; and (4) build use cases in Political Sciences and Digital Humanities based on the corpus data. "
      . 
      . 
      )
      ( Ttetnt
      . "/TEI/teiHeader/encodingDesc/tagsDecl/namespace/tagUsage"
      . a
      . box
      .   TEI
          teiHeader
          encodingDesc
          tagsDecl
          (namespace.name."http://www.tei-c.org/ns/1.0")
          (tagUsage.gi occurs)
      . 
      . 
      . 
      . 
      )
      ( Ttpssna
      . "/TEI/teiHeader/profileDesc/settingDesc/setting/name (address)"
      . o
      . line
      .   TEI
          teiHeader
          profileDesc
          settingDesc
          setting
          (name.type.address)
      . Copenhagen
      . "For example: Njalsgade 80" "Fx: Njalsgade 80"
      . 
      . 
      )
      ( Ttpssnci
      . "/TEI/teiHeader/profileDesc/settingDesc/setting/name (city)"
      . o
      . line
      .   TEI
          teiHeader
          profileDesc
          settingDesc
          setting
          (name.type.city)
      . Copenhagen
      . "For example: Copenhagen" "Fx: København"
      . 
      . 
      )
      ( Ttpssnco
      . "/TEI/teiHeader/profileDesc/settingDesc/setting/name@key (country)"
      . r
      . line
      .   TEI
          teiHeader
          profileDesc
          settingDesc
          setting
          (name.(type.country) key)
      . Copenhagen
      . "For example: Danmark@DA" "Fx: Denmark@DA"
      . 
      . 
      )
      ( Ttpssd
      . "/TEI/teiHeader/profileDesc/settingDesc/setting/date"
      . r
      . date
      .   TEI
          teiHeader
          profileDesc
          settingDesc
          setting
          (date.when ana)
      . "6. 4. 2022"
      . 
      . 
      . 
      )
  );
SuperSets=
  facet
.   ( pos
    .   cls*pos*seg
        pos*seg*tok
        lem*mrf*pos*tok
        lem*mrf*ner*pos*tok
        lem*pos*seg*tok
        cls*lem*pos*seg*tok
        pos*seg*stx*tok
    )
    (ner.ner*seg*tok)
    ( lem
    .   lem*seg
        lem*tok
        lem*mrf*pos*tok
        lem*mrf*ner*pos*tok
        lem*seg*tok
        lem*pos*seg*tok
        cls*lem*pos*seg*tok
    )
    (cls.cls*lem*pos*seg*tok)
    ( stx
    .   pos*seg*stx*tok
        pls
        lem*mrf*pos*stx
        lem*pos*seg*stx*tok
        lem*mrf*pos*seg*stx*tok
        lem*mrf*ner*pos*seg*stx*tok
    )
    (tok.seg*tok ner*seg*tok)
    (seg.seg*tok)
    ( mrf
    .   lem*mrf*pos*stx
        lem*mrf*pos*seg*stx*tok
        lem*mrf*pos*tok
        lem*mrf*ner*pos*tok
    )
    ( par
    .   par*seg*tok
        par*seg
        lem*par*seg
        lem*par*seg*tok
        par*pos*seg*tok
        lem*par*pos*seg*tok
        lem*ner*par*pos*seg*tok
    );
Typeface=
sans-serif;
UIlanguage=
da en;
Uploads=
;
ambiguity=
  (unambiguous utvetydig.una.)
  (ambiguous tvetydig.amb.)
  (pruned beskåret.pru.);
annotationStyles=
  ("id: not disclosed".one.)
  ("id: i#.# (sentence.token)".two.);
changelog=
  ( 20240722
  . infrastructure
  .   "Use /texton/dialog for all dialogues leading up to workflow. Advantage: HTTP parameters are memoized by browser."
      "Bruger /texton/dialog til alle dialoger som fører til arbejdsgang. Fordel: HTTP parametre bliver husket i browseren."
  )
  ( 20240719
  . Lemmatiser
  .   "Added Middle Low German. Disambiguation by means of trigram frequencies."
      "Tilføjet middelnedertysk. Disambiguering ved hjælp af trigramfrekvenser."
  )
  ( 20240306
  . "Pos tag translator"
  .   "Improved translation from UD-pipe tag set to (enriched) CST tag set, taking word and morphology into account."
      "Forbedret oversættelse fra UD-pipe-tags til CST tags (plus lidt mere info); kigger på morfologi og ordform."
  )
  ( 20240301
  . "plain to TEI, Token extractor"
  .   "Fixed tokenisation issue: tokens containing non-alphabetic characters where split."
      "Rettet fejl: token med ikke-alfabetiske tegn blev delt op i mindre bider."
  )
  ( 20240205
  . "Repetitiveness checker/file comparison"
  .   "The Repetitiveness checker tool can now take multiple inputs. In that case it shows phrases that occur in multiple files."
      "'Repetitiveness checker'- værktøjet kan nu tage flere inputfiler af samme type. I så fald viser det ordsekvenser der forekommer i flere filer."
  )
  ( 20240205
  . infrastructure
  .   "Can now register tools that can take multiple inputs of the same type, e.g. file comparison tools."
      "Nu kan man registrere værktøjer der kan tage flere inputfiler af samme type, fx sammenligningsværktøjer."
  )
  ( 20231205
  . "TEI annotator"
  .   "Fixed @xml:id bug that showed up in <exclude> elements."
      "Rettet fejl ved generering af 'xml:id' attributter i <exclude> elementer."
  )
  ( 20231204
  . infrastructure
  .   "(1) Fixed handling of inputs that are not in the leftmost column. If the user changed the input description, such files could not be processed anymore. (2) The readme.txt is removed from the putput zip file. (3) Tei files with <w> (token) tags and no other linguistic annotations are treated as 'text', not as 'tokenized text'."
      "(1) Forbedret håndtering af input hvis navne ikke er havnet i kolonnen længst til venstre. Sådanne filer kunne ikke behandles hvis man redigerede inputbeskrivelsen. (2) Readme.txt filen er fjernet fra den zippede output. (3) TEI-filer med <w> (token) tags og ingen andre lingvistiske annotationer bliver behandlet som 'tekst', ikke som 'tokeniseret tekst'."
  )
  ( 20231124
  . infrastructure
  .   "Visually improved SVG workflow diagram, with animation. On same page, easier to read textual description of workflow."
      "Visuelt forbedret SVG diagram af arbejdsgang, med animering. På samme side: mere læsbar beskrivelse af arbejdsgang."
  )
  ( 20230906
  . infrastructure
  .   "Display workflow diagram as SVG (vector) drawing with mouseover effects."
      "Vis diagram af arbejdsgang som SVG vektorgrafik med mouseover effekter."
  )
  ( 20230219
  . CSTlemmatiser
  .   "Added Belarusian, using data from https://github.com/Belarus/GrammarDB."
      "Tilføjet hviderussisk. Træningsmateriale hentet fra: https://github.com/Belarus/GrammarDB."
  )
  ( 20230208
  . CSTlemmatiser
  .   "Extended Faroese training data for CSTlemma: https://github.com/hinrikur/far-ABLTagger/blob/master/inflection/edfm-v0.1/edfm.csv plus https://urdarbrunnur.rhi.hi.is/bendingar-nidurhal/Storasnid_allt.zip"
      "Træning data til CSTlemma for færøsk udvidet: https://github.com/hinrikur/far-ABLTagger/blob/master/inflection/edfm-v0.1/edfm.csv plus https://urdarbrunnur.rhi.hi.is/bendingar-nidurhal/Storasnid_allt.zip"
  )
  ( 20230208
  . CSTlemmatiser
  .   "Extended Norwegian training data for CSTlemma with Scarrie data. (https://www.nb.no/sbfil/leksikalske_databaser/leksikon/scarrie-lex-lmf.zip)"
      "Norske træning data for CSTlemma udvidet med Scarrie data. (https://www.nb.no/sbfil/leksikalske_databaser/leksikon/scarrie-lex-lmf.zip)"
  )
  ( 20230129
  . CSTlemmatiser
  .   "New 'Assemblage' values 'alphabetic list, OOV only' and 'frequency list, OOV only'. (Can be used to find words to extend CSTlemma's training data.)"
      "Nye 'Sammensætning' værdier 'frekvensliste, kun ukendte ord' og 'alfabetisk liste, kun ukendte ord'. (Kan bruges til at finde ord som mangler i CSTlemmas træningdata.)"
  )
  ( 20230126
  . CSTlemmatiser
  .   "Albanian training data for CSTlemma now combination of https://github.com/NeldaKote/Albanian-POS and https://github.com/isahb/sq-morph-dict/blob/main/verbs_tagged.txt"
      "Albanske træning data til CSTlemma består nu af https://github.com/NeldaKote/Albanian-POS og https://github.com/isahb/sq-morph-dict/blob/main/verbs_tagged.txt"
  )
  ( 20230126
  . CSTlemmatiser
  .   "English training data for CSTlemma now combination of http://celex.mpi.nl/ and https://github.com/lamblabo/node-lemmatizer"
      "Engelske træning data til CSTlemma består nu af http://celex.mpi.nl/ og https://github.com/lamblabo/node-lemmatizer"
  )
  ( 20230110
  . infrastructure
  .   "'Dry' running of a workflow. Outputs mix of pseudocode and bash command lines."
      "'Tørsvømning' for arbejdsgang. I stedet for at afvikle en arbejdsgang, produceres alle trin i form af pseudokode og 'bash' komandoer."
  )
  ( 20221103
  . infrastructure
  .   "Fixed and improved: zooming in when specifying goal."
      "Rettet og forbedret: trinvis specificering af mål."
  )
  ( 20221019
  . infrastructure
  .   "Fixed: in some situations some workflows were computed, but not shown as candidate workflows."
      "Rettet: under nogle omstændigheder blev nogle arbejdsgange beregnet, men ikke vist som kandidatarbejdsgange."
  )
  ( 20221019
  . tool
  .   "Improved CST-NER and TEI annotation."
      "Forbedret CST-NER og TEI annotering."
  )
  ( 20221019
  . tool
  .   "Clarin base format amended: <s> elements for sentences, <w> elements for tokens. <w> elements can contain other elements, also <w> elements."
      "Tilpasset Clarin base format: <s> elementer for sætninger, <w> elements for tokens. En <w> kan indeholde andere elememter, også <w>."
  )
  ( 20221019
  . tool
  .   "conll2pt requires Conll-U formatted input."
      "conll2pt kræver Conll-U formatteret input."
  )
  ( 20220823
  . tool
  .   "Used https://github.com/michmech/lemmatization-lists.git as training data for CSTlemma. New languages: Asturian, Catalan, Welsh, Irish, Scottish Gaelic, Galician, Manx Gaelic. Improved: Swedish. "
      "Anvendt https://github.com/michmech/lemmatization-lists.git som træningsmateriale til CSTlemma. Nye sprog: asturisk, katalansk, walisisk, irsk, skotsk gælisk, galicisk, mansk. Forbedret: svensk. "
  )
  ( 20220823
  . infrastructure
  .   "Solved: sometimes, after zooming in on goal, too few wofkflow candidates were shown because of erroneously added goal requirements."
      "Løst: nogle gange blev der vist for få kandidatarbejdsgange når man havde zoomet-in, fordi der uden grund var blevet tilføjet krav til målet."
  )
  ( 20220722
  . infrastructure
  .   "Front page: added Clarin-DK and Text Tonsorium logos, with links. \"Text Tonsorium\" removed from headline."
      "Forside: tilføjet Clarin-DK og Text Tonsorium logoer, med links. \"Text Tonsorium\" fjernet fra overskriften."
  )
  ( 20220720
  . infrastructure
  .   "The Text Tonsorium tries to offer a helpful explanation if no workflows are found."
      "Text Tonsorium forsøger at give en hjælpende forklaring hvis der ikke bliver fundet arbejdsgange."
  )
  ( 20220719
  . tool
  .   "Some languages (Czech, English, German, modern Greek, French, Spanish) are assumed not to have undergone substantial orthographic changes since the 19th century, making 'late modern' and 'contemporary' equivalent period values."
      "Vi antager at ortografien af visse sprog (tjekkisk, engelsk, moderne græsk, fransk, spansk og tysk) ikke har ændret sig væsentligt siden 1800-tallet, hvorfor vi ligestiller periodeværdierne 'moderne tid' og 'efterkrigstiden'."
  )
  ( 20220510
  . infrastructure
  .   "Now URLs with non-ASCII characters are accepted."
      "Nu kan Text Tonsorium læse fra URL'er med ikke-ASCII tegn."
  )
  ( 20220509
  . tool
  .   "Added tool to convert CONLL to three columns, copying word, lemma and pos."
      "Nyt værktøj som kopierer ord, lemma og pos fra CONLL input til tre kolonner."
  )
  ( 20220422
  . infrastructure
  .   "Accept input with a multivalued feature, such as conll formatted annotated texts with several types of contents (form, lemma, pos, etc.)."
      "Accepter input som har et træk med flere værdier, som fx conll-filer med adskillige indholdstyper (form, lemma, pos, o.s.v.)."
  )
  ( 20220413
  . tool
  .   "PDFMiner, Cuneiform and Tesseract 'repel' each other and do not occur in the same workflow."
      "PDFMiner, Cuneiform og Tesseract 'frastøder' hinanden og optræder ikke i de samme workflows."
  )
  ( 20220412
  . infrastructure
  .   "'Combination with other values allowed' is now ignored if no value at all is chosen. This solves issue with zooming in on goal."
      "'Evt. i kombination med andre værdier' bliver nu ignoreret hvis man ikke valger nogen værdi overhovedet. Dette løser et problem med 'zooming in' på målet."
  )
  (20220411.tool."Tesseract: version 4 --> 5.1.0")
  ( 20220312
  . tool
  .   "RTFreader: tokenisation w/o segmentation. (Requires input Type of Content 'segments', not 'text'.)"
      "RTFreader: tokenisering uden også at segmentere. (Kræver input Annotationstype 'Sætningssegmenter', ikke 'Ingen annotation'.)"
  )
  ( 20220311
  . tool
  .   "CSTlemma: addition of one-line-per-sentence output format."
      "CSTlemma: tilføjelse af en linje per sætning-format."
  )
  ( 20220308
  . infrastructure
  .   "End of line markers CRLF (as in Windows text) are read as LF when analyzing ORG mode input (e.g. detect language)."
      "Linjeafgrænsning som i Windows tekstfiler (CRLF) læses som *n?x linjeafgrænsning (LF) når ORG mode input analyseres for at detektere fx sproget."
  )
  ( 20220128
  . tool
  .   "Restricted 'lempos' to non-English and non-contemporary Danish. Lempos is for \"Poor mans's POS-tagging\"."
      "Begrænsning af 'lempos' til ikke-engelsk og ikke-nutidsdansk. Lempos anbefales ikke som alternativ til andre POS-taggere."
  )
  ( 20220126
  . tool
  .   "The Latin texts in the 'Skrift og tekst i tid og rum' project are now annotated with morphological features in addition to Part of Speech and lemmas."
      "De latinske tekster i 'Skrift og tekst i tid og rum'-projektet bliver nu også annoteret med morfologiske træk."
  )
  ( 20220114
  . workflow computation
  .   "The drop down lists on the source/goal specification page are cached and not recomputed if present in cache."
      "Valglisterne på input/mål specifikationssiden bliver midlertidigt gemt i stedet for genberegnet."
  )
  (20220112.infrastructure."log4j 2.16.0 -> 2.17.1")
  ( 20211230b
  . workflow computation
  .   "Fixed a bug in memoizing workflows characterized by the last tool instead of the desired output."
      "Rettet fejl ifm. memoisering af arbejdsgange som er kendetegnet ved det sidste værktøj i stedet for den ønskede output."
  )
  ( 20211230a
  . workflow computation
  .   "Workflows that contain tool invocations that only are different at the subspecification level are pruned. For example, a workflow that uses the same tokeniser to tokenise the same text using different tokenisation styles, e.g. 'simple' and 'Penn Treebank'."
      "Arbejdsgange som aktiverer samme værktøjet på flere måder som kun er forskellige på subspecifikationsniveauet bliver ignoreret. Fx en tokeniser som skal tokenisere 'simpel' og ifølge Penn Treebank regler."
  )
  ( 20211220
  . infrastructure
  .   "The vulnerable log4j (logging for Java) libaries are replaced with safe(r) ones: version 2.16.0"
      "Den angrebsfølsomme log4j (Java logning) software er erstattet med forbedret version 2.16.0."
  )
  ( 20211203
  . tool
  .   "When asked for unambiguous output, CSTlemma still produced ambiguous output if it couldn't make up its mind. Now, if lemmas are equiprobable, CSTlemma chooses the first one."
      "Når man bestilte utvetydig output, ville CSTlemma alligevel tilbyde flere lemmaer hvis de var lige sandsynlige. Nu vælger CSTlemma at tilbyde det første i sådanne tilfælde."
  )
  (20211127.."Beginning of changelog." "Begyndelse af changelog.");
conllStyles=
  ( "CoNLL 2009 (14 columns)" "CoNLL 2009 (14 kolonner)"
  . cnl2009
  . "ID FORM LEMMA  PLEMMA POS PPOS  FEAT PFEAT HEAD PHEAD DEPREL PDEPREL FILLPRED PRED"
  )
  ( "CoNLL-U (10 columns)" "CoNLL-U (10 kolonner)"
  . clU
  . "ID FORM LEMMA UPOS XPOS FEATS HEAD DEPREL DEPS MISC"
  );
facets=
  (text "ingen annotation".txt.)
  ("text excerpts" Tekststumper.exc.)
  (paragraphs paragrafsegmenter.par.)
  (sentences "sætninger, før tokenisering".sent.)
  (segments sætningssegmenter.seg.)
  (tokens tokens.tok.)
  ("name entities" navne.ner.)
  ("anonymized named entities".ano.)
  ("word class" ordklasse.cls.)
  (PoS-tags PoS-tags.pos.)
  (lemmas lemmaer.lem.)
  ("noun phrases" "navnefraser (NP)".npr.)
  ("morphological features" "morfologiske træk".mrf.)
  (sentiment.snt.)
  ( "syntax (constituency relations)" "syntaks (frasestruktur)"
  . stc
  . 
  )
  ( "syntax (dependency structure)" "syntaks (dependensstruktur)"
  . stx
  . 
  )
  ("tagged terms" termer.trm.)
  (morphemes morfemer.wrdsplt.)
  ("repeated phrases" gentagelser.rep.)
  ("N-gram frequencies" "N-gram frekvenser".Ngram.)
  (keywords.key.)
  ("multiple word terms" flerordstermer.mwu.)
  (lexicon leksikon.lex.)
  ("head movements" hovedbevægelser.headmov.)
  ("keyword-in-context (KWIC)".kwic.)
  (coreference.cor.)
  ("structured text" "struktureret tekst".etc.);
features=
  ( (inDex.A)
    (name."Type of content" Annotationstype)
    (short.facet)
    ( description
    .   "Subtype of resource, e.g. basis text, tokenisation, alphabetic list."
        "Subtype af resource, fx basistekst, tokens, alfabetisk liste."
    )
    (table.facets)
    ( specificationTable
    .   (pos.tagSets)
        (mrf.morfSets)
        (tok.tokenisationStyles)
    )
    ( sourcehelp
    .   "The default type of content of the input is \"text\". Change it if necessary."
        "Normalt antager Text Tonsorium at inputtet ikke er annoteret. Ændr til en anden værdi om nødvendigt."
    )
    ( goalhelp
    .   "You fill this out in most use cases. Sometimes (e.g. if you are merely interested in a file format transformation), you choose the same value as in the input."
        "Udfyld i de fleste sammenhænge. Du kan nogle gange vælge samme værdi som i inputtet, fx når formålet er at transformere filformatet, men ikke indholdstypen."
    )
  )
+ ( (inDex.B)
    (name.Language Sprog)
    (short.lang)
    (description."Language of the text" "Sproget i teksten.")
    (table.linguae)
    ( sourcehelp
    .   "You can leave this as it is. It is better to indicate the language of the output."
        "Du må gerne angive inputtets sprog, men det er bedre at angive outputtets sprog."
    )
    ( goalhelp
    .   "You should almost always fill out this field. You can also specify the language of the input, if that has not been done automatically. If the output's language is specified, the computation of workflow candidates is speeded up and produces fewer candidates that you are not interested in."
        "Du bør næsten altid specificere outputtets sprog. Du kan også specificere inputtets sprog, hvis det ikke er gjort automatisk. Beregningen af workflowkandidater går hurtigere hvis outputtets sprog er specificeret og der vil være færre kandidater som du ikke er interesseret i."
    )
  )
+ ( (inDex.C)
    (name.Format)
    (short.format)
    ( description
    .   "The way that information is encoded for storage in a computer file."
        "Måden hvorpå information er lagret i en fil."
    )
    (table.fileFormats)
    ( specificationTable
    .   (conll.conllStyles)
        (flat.flatFileTypes)
        (html.htmlStyles)
        (teip5.annotationStyles)
        (img.imageStyles)
        (snd.sndStyles)
        (vid.vidStyles)
        (json.jsonStyles)
    )
    ( sourcehelp
    .   "Advice: do not change this field."
        "Det anbefales ikke at ændre i dette felt."
    )
    ( goalhelp
    .   "Fill this out if you are an experienced user. If left empty, the Text Tonsorium may produce myriads of workflow candidates. If you are not experienced yet, accept the waiting time for the workflow candidates to be computed, and have a look at the outputs from several workflow candidates until you find the output format that fits the bill."
        "Udfyld hvis du er en erfaren bruger. Hvis feltet står tomt er der risiko for at Text Tonsorium beregner utallige workflowkandidater. Hvis du er en begyndende bruger af Text Tonsorium, acceptér at du skal vente længere før alle workflowkandidater er beregnet, og afprøv nogle kandidater indtil du har fundet det filformat der passer bedst til dit behov."
    )
  )
+ ( (inDex.D)
    (name."Historical period" "Historisk periode")
    (short.period)
    ( description
    .   "Time period of the spelling in the text resource."
        "Tidsperiode hvori stavningen eller ortografien anvendt i teksten blev anvendt."
    )
    (table.periods)
    ( sourcehelp
    .   "Select a value if the input is in Danish or Latin."
        "Vælg en verdi hvis inputtet er på dansk eller latin."
    )
    ( goalhelp
    .   "Specify this field if you work with texts in Danish or Latin."
        "Fyld ud hvis du arbejder med tekster på dansk eller latin."
    )
  )
+ ( (inDex.E)
    (name.Assemblage Sammensætning)
    (short.pres)
    ( description
    .   "How results are presented for the user."
        "Måden hvorpå resultaterne præsenteres for brugeren."
    )
    (table.presentations)
    ( sourcehelp
    .   "Advice: Do not change this field."
        "Det anbefales ikke at lave om på dette felt"
    )
    ( goalhelp
    .   "Leave empty or choose 'normal'. Choose another value if you need sorted output. Most tools cannot sort data."
        "Lad feltet stå tomt eller vælg 'normal'. Vælg en anden værdi end 'normal' hvis outputtet skal være sorteret. Få værktøjer kan sortere data."
    )
  )
+ ( (inDex.F)
    (name.Appearance Udseende)
    (short.app)
    ( description
    .   "Decorative tradition, for example typeface class."
        "Dekorativ tradition, fx skrifttype."
    )
    (table.vulticuli)
    ( sourcehelp
    .   "Do not change this field, unless the input is an image of a text. In that case, choose blackletter or roman."
        "Ændr ikke dette felt, medmindre inputtet er et billede af tekst. I så fald vælger du gotisk eller roman."
    )
    ( goalhelp
    .   "You seldom need to fill this out. Try it, if you want."
        "Skal sjældent udfyldes. Prøv dig frem, hvis du vil."
    )
  )
+ ( (inDex.H)
    (name.Ambiguity Flertydighed)
    (short.ambig)
    ( description
    .   "Whether data contains ambiguous elements."
        "Til angivelse om data indeholder flertydige elementer."
    )
    (table.ambiguity)
    (sourcehelp."Do not change this field." "Ændr ikke dette felt.")
    ( goalhelp
    .   "It is normally not necessary to fill this out to start with. If you are confronted with too many workflow candidates, go back to this screen and specify an ambiguity level."
        "Det er normalt ikke nødvendigt at udfylde dette felt. Hvis der genereres for mange workflowkandidater, gå tilbage til dette skærm og specificér flertydighedsniveauet."
    )
  )
+ ( (inDex.I)
    (name.Smell Lugt)
    (short.sml)
    ( description
    . "Special feature used to give unique identity to input and intermediate data, for example output of OCR software."
    )
    (table.smell)
    (hide.y)
  );
feedback=
;
fileFormats=
  ( plain flad
  . flat
  .   "Can be edited with a simple text editor like 'vi'."
      "Kan redigeres med en teksteditor som f.eks. 'vi'."
  )
  (RTF.rtf.)
  (PDF.pdf.)
  (HTML.html.)
  (XML.xm.)
  ( "Corpus Workbench (for CQP queries)"
  . vrt
  . "verticalized text, Corpus Workbench input format"
  )
  (CSV.csv.)
  (DOC.doc.)
  (DOCX.docx.)
  (ODF.odt.)
  (ODP.odp.)
  (ODS.ods.)
  (PPT.ppt.)
  (PPTX.pptx.)
  (XLS.xls.)
  (XLSX.xlsx.)
  ( TEIP5
  . teip5
  .   "Can be viewed in a browser and edited with a text editor like 'vi' or with a XML editor like 'Oxygen' or Microsoft's 'Visual Studio'"
      "Du kan se indholdet i en browser og du kan redigere filen med en tekst editor som f.eks. 'vi' eller med en XML editor som f.eks. 'Oxygen' eller Microsofts 'Visual Studio'."
  )
  (RDF.rdf.)
  (Anvil.anvil.)
  (image billede.img.)
  (audio.wav.)
  (video.vid.)
  (CoNLL.conll.)
  ("Penn Treebank".pt.)
  (JSON.json.)
  (Org-mode.dipl.)
  ( "plain text with ASCII 127 characters" "flad tekst with ASCII 127 tegn"
  . plainD
  . 
  )
  ( "columns, tab separated fields" "kolonner, tab separeret"
  . cols
  . 
  )
  ("single-column list" "en kolonne".1col.)
  ( "two-column list, tab separated" "to kolonner, tab separeret"
  . 2col
  . 
  )
  ( "three-column list, tab separated" "tre kolonner, tab separeret"
  . 3col
  . 
  )
  ( "four-column list, tab separated" "fire kolonner, tab separeret"
  . 4col
  . 
  )
  (   "two-column list, tab separated, with empty lines"
      "to kolonner, tab separeret, med tomme linjer"
  . 2cole
  . 
  )
  (   "three-column list, tab separated, with empty lines"
      "tre kolonner, tab separeret, med tomme linjer"
  . 3cole
  . 
  )
  (   "four-column list, tab separated, with empty lines"
      "fire kolonner, tab separeret, med tomme linjer"
  . 4cole
  . 
  )
  (URL.url.);
flatFileTypes=
(Latin-1.latin1.) (UTF-8.utf8.);
footer=
;
htmlStyles=
  ( "Traditional tags (h, p, etc.)" "Med traditionelle tags (h, p, etc.)"
  . ROTM
  . 
  )
  ("Exact layout" layoutbevarende.pedantic.);
imageStyles=
  (GIF.gif.)
  ("JPEG JFIF".jpeg.)
  ("Progressive JPEG JFIF".pjpeg.)
  ("Portable Network Graphics".png.)
  (SVG.svg.)
  ("Tag Image File Format".tiff.)
  (ICO."vnd.microsoft.icon".)
  ("Image as PDF".pdf.);
jobAbout=
;
jobNr=
0;
jobs=
;
jsonStyles=
  ("No unique ID" "Ingen unik ID".nid.)
  ("With xml id" "Med xml id".xid.);
linguae=
  (Abkhaz abkhasisk.ab.abk)
  (Afar afar.aa.aar)
  (Afrikaans afrikaans.af.afr)
  (Akan akan.ak.aka)
  (Albanian albansk.sq.sqi)
  (Amharic amharisk.am.amh)
  (Arabic arabisk.ar.ara)
  (Aragonese aragonisk.an.arg)
  (Armenian armensk.hy.hye)
  ("West Armenian" vestarmensk.hyw.hyw)
  (Assamese assamesisk.as.asm)
  (Asturian asturisk.ast.ast)
  (Avaric avarisk.av.ava)
  (Avestan avestisk.ae.ave)
  (Aymara aymara.ay.aym)
  (Azerbaijani aserbajdsjansk.az.aze)
  (Balochi balochi.bal.bal)
  (Bambara bambara.bm.bam)
  (Bashkir basjkirsk.ba.bak)
  (Basque baskisk.eu.eus)
  (Belarusian hviderussisk.be.bel)
  (Bengali bengali.bn.ben)
  (Bihari bihari.bh.bh)
  (Bislama bislama.bi.bis)
  (Bosnian bosnisk.bs.bos)
  (Breton bretonsk.br.bre)
  (Bulgarian bulgarsk.bg.bul)
  (Burmese burmesisk.my.mya)
  (Catalan catalansk.ca.cat)
  (Chamorro chamorro.ch.cha)
  (Chechen tjetjensk.ce.che)
  (Chichewa chichewa.ny.nya)
  (Chinese kinesisk.zh.zho)
  (Chuvash tsjuvansk.cv.chv)
  (Cornish kornisk.kw.cor)
  (Corsican korsikansk.co.cos)
  (Cree cree.cr.cre)
  (Croatian kroatisk.hr.hrv)
  (Coptic koptisk.cop.cop)
  (Czech tjekkisk.cs.ces)
  (Danish dansk.da.dan)
  (Divehi dhivehi.dv.div)
  (Dutch nederlandsk.nl.nld)
  (Dzongkha dzongkha.dz.dzo)
  ("Eastern Punjabi" punjabi.pa.pan)
  (English engelsk.en.eng)
  (Esperanto esperanto.eo.epo)
  (Estonian estisk.et.est)
  (Ewe ewe.ee.ewe)
  (Faroese færøsk.fo.fao)
  (Fijian fijisk.fj.fij)
  (Finnish finsk.fi.fin)
  (French fransk.fr.fra)
  (Fula fulfulde.ff.ful)
  (Galician galicisk.gl.glg)
  (Ganda luganda.lg.lug)
  (Gayi gayi.qpm.qpm)
  (Betoi betoi.qtd.qtd)
  (Georgian georgisk.ka.kat)
  (German tysk.de.deu)
  (Gothic gotisk.got.got)
  (Greek græsk.el.ell)
  ("Middle Low German" middelnedertysk.gml.gml)
  (Guaraní guaraní.gn.grn)
  (Gujarati gujarati.gu.guj)
  (Haitian "haitisk kreolsk".ht.hat)
  (Hausa hausa.ha.hau)
  (Hebrew hebraisk.he.heb)
  (Herero herero.hz.her)
  (Hindi hindi.hi.hin)
  ("Hiri Motu" "hiri motu".ho.hmo)
  (Hungarian ungarsk.hu.hun)
  (Icelandic islandsk.is.isl)
  (Ido ido.io.ido)
  (Igbo ibo.ig.ibo)
  (Indonesian indonesisk.id.ind)
  (Interlingua interlingua.ia.ina)
  (Interlingue interlingue.ie.ile)
  (Inuktitut inuittisk.iu.iku)
  (Inupiaq inupiak.ik.ipk)
  (Irish irsk.ga.gle)
  (Italian italiensk.it.ita)
  (Japanese japansk.ja.jpn)
  (Javanese javanesisk.jv.jav)
  (Kalaallisut kalaallisut.kl.kal)
  (Kannada kannada.kn.kan)
  (Kanuri kanuri.kr.kau)
  (Kashmiri kashmirisk.ks.kas)
  (Kazakh kasakhisk.kk.kaz)
  (Khmer khmer.km.khm)
  (Kikuyu gikuyu.ki.kik)
  (Kinyarwanda kinyarwanda.rw.kin)
  (Kirundi kirundi.rn.run)
  (Komi komi.kv.kom)
  (Kongo congolesisk.kg.kon)
  (Korean koreansk.ko.kor)
  (Kurdish kurdisk.ku.kur)
  (Kwanyama kwanyama.kj.kua)
  (Kyrgyz kirgisisk.ky.kir)
  (Lao laotisk.lo.lao)
  (Latin latin.la.lat)
  (Latvian lettisk.lv.lav)
  (Lingala lingala.ln.lin)
  (Lithuanian litauisk.lt.lit)
  (Luba-Katanga luba-katanga.lu.lub)
  (Luxembourgish letzeburgsk.lb.ltz)
  (Macedonian makedonsk.mk.mkd)
  (Malagasy gassisk.mg.mlg)
  (Malay malajisk.ms.msa)
  (Malayalam malayalam.ml.mal)
  (Maltese maltesisk.mt.mlt)
  (Manx mansk.gv.glv)
  ("Marathi (Marāṭhī)" marathi.mr.mar)
  (Marshallese marshallesisk.mh.mah)
  (Mongolian mongolsk.mn.mon)
  (Māori maoriski.mi.mri)
  (Nauruan naurisk.na.nau)
  (Navajo navajo.nv.nav)
  (Ndonga ndonga.ng.ndo)
  (Nepali nepali.ne.nep)
  ("Northern Ndebele" nord-ndebele.nd.nde)
  ("Northern Sami" nordsamisk.se.sme)
  (Norwegian norsk.no.nor)
  ("Norwegian Bokmål" "norsk bokmål".nb.nob)
  ("Norwegian Nynorsk" nynorsk.nn.nno)
  (Nuosu yi.ii.iii)
  (Occitan occitansk.oc.oci)
  (Ojibwe ojibwa.oj.oji)
  ("Old Church Slavonic" kirkeslavisk.cu.chu)
  (Oriya oriya.or.ori)
  (Oromo oromo.om.orm)
  (Ossetian ossetisk.os.oss)
  (Pashto pashto.ps.pus)
  (Persian persisk.fa.fas)
  (Nigerian nigeriansk.pcm.pcm)
  (Polish polsk.pl.pol)
  (Portuguese portugisisk.pt.por)
  (Pāli pali.pi.pli)
  (Quechua quechua.qu.que)
  (Romanian rumænsk.ro.ron)
  (Romansh rætoromansk.rm.roh)
  (Russian russisk.ru.rus)
  (Samoan samoansk.sm.smo)
  (Sango sango.sg.sag)
  ("Sanskrit (Saṁskṛta)" sanskrit.sa.san)
  (Sardinian sardisk.sc.srd)
  ("Scottish Gaelic" "skotsk gælisk".gd.gla)
  (Serbian serbisk.sr.srp)
  (Shona shona.sn.sna)
  (Sindhi sindhi.sd.snd)
  (Sinhalese singalesisk.si.sin)
  (Slovak slovakisk.sk.slk)
  (Slovene slovensk.sl.slv)
  (Somali somali.so.som)
  ("Southern Ndebele" syd-ndebele.nr.nbl)
  ("Southern Sotho" sesotho.st.sot)
  (Spanish spansk.es.spa)
  (Sundanese sundanesisk.su.sun)
  (Swahili swahili.sw.swa)
  (Swati swati.ss.ssw)
  (Swedish svensk.sv.swe)
  (Tagalog tagalog.tl.tgl)
  (Tahitian tahitisk.ty.tah)
  (Tajik tadtjikkisk.tg.tgk)
  (Tamil tamilsk.ta.tam)
  (Tatar tatarsk.tt.tat)
  (Telugu telugu.te.tel)
  (Thai thai.th.tha)
  ("Tibetan Standard" tibetansk.bo.bod)
  (Tigrinya tigrinya.ti.tir)
  (Tonga tonganesisk.to.ton)
  (Tsonga tsonga.ts.tso)
  (Tswana tswana.tn.tsn)
  (Turkish tyrkisk.tr.tur)
  (Turkmen turkmensk.tk.tuk)
  (Twi twi.tw.twi)
  (Ukrainian ukrainsk.uk.ukr)
  (Urdu urdu.ur.urd)
  (Uyghur uighur.ug.uig)
  (Uzbek usbekisk.uz.uzb)
  (Venda venda.ve.ven)
  (Vietnamese vietnamesisk.vi.vie)
  (Volapük volapük.vo.vol)
  (Walloon vallonsk.wa.wln)
  (Welsh walisisk.cy.cym)
  ("Western Frisian" frisisk.fy.fry)
  (Wolof wolof.wo.wol)
  (Xhosa xhosa.xh.xho)
  (Yiddish jiddisch.yi.yid)
  (Yoruba yoruba.yo.yor)
  (Zeneize limburgisk.li.lim)
  (Zhuang zhuang.za.zha)
  (Zulu zulu.zu.zul);
morfSets=
  ("Universal Part-of-Speech Tagset".Uni.)
  (Menota.Menota.);
periods=
  (classical antikken.c1.)
  (medieval middelalderen.c13.)
  ("early modern" "tidlig moderne tid".c18.)
  ("late modern" "moderne tid".c20.)
  (contemporary efterkrigstiden.c21.);
presentations=
  (normal.nml.)
  ( "combined w. previous steps" "kombineret m. tidligere trin"
  . comb
  . 
  )
  ("frequency list" frekvensliste.frq.)
  ("alphabetic list" "alfabetisk liste".alf.)
  ( "frequency list, OOV only" "frekvensliste, kun ukendte ord"
  . ufq
  . 
  )
  ( "alphabetic list, OOV only" "alfabetisk liste, kun ukendte ord"
  . uaf
  . 
  )
  ("inline annotations".inl.)
  ("standoff annotations".sof.);
properties=
  ( baseUrlTools
  . "http://localhost:8080"
  . "Protocol and domain of infrastructure as made known to integrated tools"
  )
  ( wwwServer
  . "http://localhost"
  . "Protocol and domain of infrastructure as made known to users' browsers"
  )
  ( password
  . "Fq3vdqxIPqrKGMYh0pD+MY64Acgv8zA9Qhye+S7+mVWujVWuEPUZcEvoKGDLs6tsxJyqVnRzOZFkUBwz2QmiWA=="
  . "Empty string as password."
  )
  (salt."CvPAQd7naaqtVD1xJD37eg==".);
recentTasks=
;
smell=
  ("Text production" Tekst.TXT.)
  (Tokenisation Tokenisering.TOK.)
  ("plain to TEI" "flad til TEI".TeiP5.)
  ("new smell" "ny lugt".nsl.)
  ("any smell" lugt.sml.);
sndStyles=
  ("mulaw audio at 8 kHz, 1 channel".basic.)
  ("24bit Linear PCM audio at 8–48 kHz, 1-N channels".L24.)
  ("MP4 audio".mp4.)
  ("MP3 or other MPEG audio".mpeg.)
  ("Ogg Vorbis, Speex, Flac and other audio".ogg.)
  ("Vorbis encoded audio".vorbis.)
  (RealAudio."vnd.rn-realaudio".)
  ("WAV audio"."vnd.wave".)
  ("WebM open media format".webm.);
tagSets=
  ("Penn Treebank".PT.)
  (CST-tagset.Par.)
  (Parole-Moses.ParMos.)
  (DSL-tagset.DSL.)
  ("CST new tag set" "CST_nyt_tagsæt".CSTnyt.)
  ("Universal Part-of-Speech Tagset".Uni.)
  (Menota.Menota.)
  ( "HiNTS (Historisches-Niederdeutsch-Tagset)"
  . HiNTS
  . "https://www.fdr.uni-hamburg.de/record/9195/files/Annotationshandbuch_1_2021-01-30.pdf"
  );
tokenisationStyles=
Anonymous.anon.;
tooladm=
  ( (ToolID.ANNIE-DE)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."ANNIE DE (GATE cloud)")
    (ServiceURL."http://localhost/ANNIE")
    (Publisher."The University of Sheffield, 1995-2024.")
    (ContentProvider."GATE cloud")
    (Creator.GATE)
    ( InfoAbout
    . "https://cloud.gate.ac.uk/shopfront/displayItem/annie-named-entity-recognizer"
    )
    ( Description
    . "ANNIE is a named entity recognition pipeline that identifies basic entity types, such as Person, Location, Organization, Money amounts, Time and Date expressions.

It is the prototypical information extraction pipeline distributed with the GATE framework and forms the base of many more complex GATE-based IE applications."
    )
    ( ExternalURI
    . "https://cloud-api.gate.ac.uk/process/german-named-entity-recognizer"
    )
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.ANNIE-EN)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."ANNIE EN (GATE cloud)")
    (ServiceURL."http://localhost/ANNIE")
    (Publisher."The University of Sheffield, 1995-2024.")
    (ContentProvider."GATE cloud")
    (Creator.GATE)
    ( InfoAbout
    . "https://cloud.gate.ac.uk/shopfront/displayItem/annie-named-entity-recognizer"
    )
    ( Description
    . "ANNIE is a named entity recognition pipeline that identifies basic entity types, such as Person, Location, Organization, Money amounts, Time and Date expressions.

It is the prototypical information extraction pipeline distributed with the GATE framework and forms the base of many more complex GATE-based IE applications."
    )
    ( ExternalURI
    . "https://cloud-api.gate.ac.uk/process/annie-named-entity-recognizer"
    )
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.ANNIE-FR)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."ANNIE FR (GATE cloud)")
    (ServiceURL."http://localhost/ANNIE")
    (Publisher."The University of Sheffield, 1995-2024.")
    (ContentProvider."GATE cloud")
    (Creator.GATE)
    ( InfoAbout
    . "https://cloud.gate.ac.uk/shopfront/displayItem/annie-named-entity-recognizer"
    )
    ( Description
    . "ANNIE is a named entity recognition pipeline that identifies basic entity types, such as Person, Location, Organization, Money amounts, Time and Date expressions.

It is the prototypical information extraction pipeline distributed with the GATE framework and forms the base of many more complex GATE-based IE applications."
    )
    ( ExternalURI
    . "https://cloud-api.gate.ac.uk/process/french-named-entity-recognizer"
    )
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.ANNIE-RO)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."ANNIE RO (GATE cloud)")
    (ServiceURL."http://localhost/ANNIE")
    (Publisher."The University of Sheffield, 1995-2024.")
    (ContentProvider."GATE cloud")
    (Creator.GATE)
    ( InfoAbout
    . "https://cloud.gate.ac.uk/shopfront/displayItem/annie-named-entity-recognizer"
    )
    ( Description
    . "ANNIE is a named entity recognition pipeline that identifies basic entity types, such as Person, Location, Organization, Money amounts, Time and Date expressions.

It is the prototypical information extraction pipeline distributed with the GATE framework and forms the base of many more complex GATE-based IE applications."
    )
    ( ExternalURI
    . "https://cloud-api.gate.ac.uk/process/romanian-named-entity-recognizer"
    )
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.ANNIE-RU)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."ANNIE RU (GATE cloud)")
    (ServiceURL."http://localhost/ANNIE")
    (Publisher."The University of Sheffield, 1995-2024.")
    (ContentProvider."GATE cloud")
    (Creator.GATE)
    ( InfoAbout
    . "https://cloud.gate.ac.uk/shopfront/displayItem/annie-named-entity-recognizer"
    )
    ( Description
    . "ANNIE is a named entity recognition pipeline that identifies basic entity types, such as Person, Location, Organization, Money amounts, Time and Date expressions.

It is the prototypical information extraction pipeline distributed with the GATE framework and forms the base of many more complex GATE-based IE applications."
    )
    ( ExternalURI
    . "https://cloud-api.gate.ac.uk/process/russian-named-entity-recognizer-basic"
    )
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.Brill-tagger)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1cst)
    (Title."Brill tagger")
    (ServiceURL."http://localhost/BrillTagger/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator.Brill)
    (InfoAbout."https://nlpweb01.nors.ku.dk/download/tagger/")
    ( Description
    . "Part-of-speech tagger: Marks each word in a text with information about word class and morphological features."
    )
    (ExternalURI.)
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CQP)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."CQP formatter")
    (ServiceURL."http://localhost/cqpConverter")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."--")
    ( Description
    . "Takes input comntaining words, tags and lemmas and creates output that can be read by the CQP software."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-Lem)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."8.5.1 (2024.07.23)")
    (Title.CSTlemma)
    (ServiceURL."http://localhost/CST-lemma/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator.CST)
    (InfoAbout."cst.dk")
    ( Description
    . "Produces the dictionary look-up form (or lemma) for each word, inflected or not, in the input."
    )
    (ExternalURI."https://nlpweb01.nors.ku.dk/tools/")
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-MWU)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."MWU finder")
    (ServiceURL."http://localhost/tools/index.php?lang=da")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    (InfoAbout."https://www.cst.dk/online/keywords/index.html#flerordstermer")
    ( Description
    . "CST's keyword extractor extracts 20 keywords characterising an input text"
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CST-NER)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title.CSTner)
    (ServiceURL."http://localhost/CST-NER/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    ( InfoAbout
    . "https://nlpweb01.nors.ku.dk/online/navnegenkender/uk/index.html"
    )
    ( Description
    . "Classifies names as proper names, locations (with sub-classes of street, city, land and other types of locations), and other names (called MISC)"
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-NPr)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."NP finder")
    (ServiceURL."http://localhost/np-genkender/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Bolette S. pedersen")
    ( InfoAbout
    . "https://nlpweb01.nors.ku.dk/online/np_genkender/uk/index.html"
    )
    (Description."Collects words that constitute noun phrases.")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-Ngram)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title.N-gram)
    (ServiceURL."http://localhost/online/keywords/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    (InfoAbout."https://nlpweb01.nors.ku.dk/online/keywords/")
    (Description."Lists frequencies of single and multi (2,3) word terms.")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CST-Norm)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."8.2.1")
    (Title.Normaliser)
    (ServiceURL."http://localhost/CST-normaliser/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator.CST)
    (InfoAbout."cst.dk")
    ( Description
    . "Normalises older (1200-1900) Danish text to spelling rules as employed in ODS (Ordbog over det danske Sprog)."
    )
    (ExternalURI."https://nlpweb01.nors.ku.dk/tools/")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-Rep)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."Repetitiveness checker")
    (ServiceURL."http://localhost/rep-check/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Bart Jongejan")
    (InfoAbout."https://nlpweb01.nors.ku.dk/online/rep_check/")
    (Description."Uses a statistical method to find repetitions in a text.")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-Ver)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."Document similarity checker")
    (ServiceURL."http://localhost/rep-check-multi/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Bart Jongejan")
    (InfoAbout."https://nlpweb01.nors.ku.dk/online/rep_check/")
    ( Description
    . "Uses a statistical method to find phrases that are found in each of the input documents."
    )
    (ExternalURI.)
    (MultiInp.y)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-anon)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title.Anonymisation)
    (ServiceURL."http://localhost/idanna/tool/index.html")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    (InfoAbout."https://www.cst.dk/idanna/index.html")
    (Description."IDentifikation og ANonymisering af NAvne")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CST-keyw)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."Keywords extractor")
    (ServiceURL."http://localhost/online/keywords/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    (InfoAbout."https://www.cst.dk/online/keywords/")
    (Description."Extracts 20 keywords characterising an input text.")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CST-wrdsplt)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."Word splitter")
    (ServiceURL."--")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator.CST)
    (InfoAbout.None)
    (Description."Splits Danish words in syllables.")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CoreNLP)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."4.5.8")
    (Title."Stanford CoreNLP")
    (ServiceURL."http://localhost/CoreNLP")
    (Publisher."Stanford NLP Group")
    (ContentProvider."Stanford NLP Group")
    (Creator."Stanford NLP Group")
    (InfoAbout."https://stanfordnlp.github.io/CoreNLP/")
    ( Description
    . "CoreNLP is your one stop shop for natural language processing in Java! CoreNLP enables users to derive linguistic annotations for text, including token and sentence boundaries, parts of speech, named entities, numeric and time values, dependency and constituency parses, coreference, sentiment, quote attributions, and relations. CoreNLP currently supports 8 languages: Arabic, Chinese, English, French, German, Hungarian, Italian, and Spanish."
    )
    (ExternalURI."http://nlp.stanford.edu:8080/corenlp/process")
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CuneiForm)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.1.0")
    (Title.CuneiForm)
    (ServiceURL."http://localhost/cuneiform/")
    (Publisher."Cognitive Technologies")
    (ContentProvider."Cognitive Technologies")
    (Creator."Cognitive Technologies")
    (InfoAbout."http://cognitiveforms.ru/products/cuneiform/")
    ( Description
    . "Интеллектуальная система распознавания текста - Optical Character Recognition"
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.JSON2TEIP5ANNO)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."JSON to TEI")
    (ServiceURL."http://localhost/jsn2teianno")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Read json file with fields for token ID, word, lemma and pos. Output a TEI P5 annotation file (spanGrp) containing either lemmas or Part of Speech tags."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.JSON2tabsep)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."JSON to TSV")
    (ServiceURL."http://localhost/JSON2tabsep/")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."https://github.com/")
    (Description."Convert word-lemma-pos data from JSON to CQP format.")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.Lapos)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.1.2")
    (Title.Lapos)
    (ServiceURL."http://localhost/lapos")
    (Publisher.GitHub)
    (ContentProvider.Perseus)
    (Creator."Yoshimasa Tsuruoka, Yusuke Miyao, and Jun'ichi Kazama")
    (InfoAbout."https://github.com/cltk/lapos")
    (Description."Fork of the Lookahead Part-Of-Speech (Lapos) Tagger")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.PDFBox)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.8.7")
    (Title.PDFBox)
    (ServiceURL."http://localhost/PDFBox")
    (Publisher."The Apache Software Foundation")
    (ContentProvider."The Apache Software Foundation")
    (Creator."apache.org")
    (InfoAbout."http://pdfbox.apache.org")
    ( Description
    . "Apache PDFBox - A Java PDF Library
The Apache PDFBox™ library is an open source Java tool for working with PDF documents. This project allows creation of new PDF documents, manipulation of existing documents and the ability to extract content from documents. Apache PDFBox also includes several command line utilities. Apache PDFBox is published under the Apache License v2.0."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.PruLePo)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.PruneLemPos)
    (ServiceURL."http://localhost/PruLePo/")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."https://github.com/")
    ( Description
    . "A \"Poor man's POS-tagger\" that takes text input that has ambiguous lemma and PoS annotations and diminishes the ambiguity by using bigram HMM + Viterbi algorithm. No training data are involved! Works best with larger texts."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.RTFread)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."2.11.1")
    (Title.RTFreader)
    (ServiceURL."http://localhost/rtfreader/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Bart Jongejan")
    (InfoAbout.None)
    ( Description
    . "Extracts segments from RTF-file or from plain text. Optionally tokenises. Keeps \\f"
    )
    (ExternalURI.)
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.TEIanno)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."TEI annotator")
    (ServiceURL."http://localhost/TEIanno")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Add attributes for lemma and Part of Speech tag to <w> and <c> elements. (<w> and <c> elements must already exist.)"
    )
    (ExternalURI."-")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.Tesseract-OCR)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."5.1.0")
    (Title.Tesseract-OCRv5)
    (ServiceURL."http://localhost/tesseract")
    (Publisher.GitHub)
    (ContentProvider.GitHub)
    (Creator."Ray Smith a.o.")
    (InfoAbout."https://github.com/tesseract-ocr/tesseract/wiki")
    ( Description
    . "Tesseract Open Source OCR Engine. Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused on line recognition, but also still supports the legacy Tesseract OCR engine of Tesseract 3 which works by recognizing character patterns."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.anasplit)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.1")
    (Title.Anno-splitter)
    (ServiceURL."http://localhost/anasplit")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Takes TEI P5 document containing multiple stand-off annotation groups (spanGrp). Outputs one of the annotation groups."
    )
    (ExternalURI.)
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.cluster)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title.cluster)
    (ServiceURL."http://localhost/cluster/")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Make clusters of lines, separated by empty lines. Each cluster contains all those lines that have the the value in the first or second column in common with one or more other lines in the same cluster."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.conll2009toU)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."CoNLL 2009 to U")
    (ServiceURL."http://localhost/conll2009toU")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    (Description."Convert CoNLL 2009 (14 columns) to CoNLL-U (10 columns)")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.conll23)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."CONLL to three columns")
    (ServiceURL."http://localhost/conll23")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Convert a CONLL 2009 or CONLL-U file to a tabulator separated file. On each line: <word> \\t <lemma> \\t <pos> \\n"
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.conll2pt)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."CONLL to Penn Treebank")
    (ServiceURL."http://localhost/conll2pt")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Convert syntax dependency annotation in CoNLL 2009 or CoNLL-U format to bracketed \"Lisp-like\" format."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.conllout)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.1")
    (Title."CoNLL formatter")
    (ServiceURL."http://localhost/conllout/")
    (Publisher."Københavns Universitet")
    (ContentProvider."Københavns Universitet")
    (Creator."Bart Jongejan")
    (InfoAbout."http://nextens.uvt.nl/depparse-wiki/DataFormat")
    (Description."Converts input to CoNLL 2009 format.")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.daner)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.daner)
    (ServiceURL."http://localhost/daner/")
    (Publisher.ITU)
    (ContentProvider.ITU)
    (Creator.ITU)
    (InfoAbout."https://github.com/ITUnlp/daner")
    ( Description
    . "Named Entity Recognition for Danish, Distributed by ITU NLP.
Uses Stanford CoreNLP NER and the model from DKIE to tag incoming Danish plain text for named entities, in three classes: location, person, and organization names."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.dep2tree)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.dependency2tree)
    (ServiceURL."http://localhost/dep2tree")
    (Publisher.GitHub)
    (ContentProvider."https://github.com/boberle/dependency2tree")
    (Creator."Avatar Bruno Oberle")
    (InfoAbout."https://github.com/boberle/dependency2tree")
    ( Description
    . "Convert CoNLL output of a dependency parser into a latex or graphviz tree."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.dip2plain)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Diplom fetch corrected text")
    (ServiceURL."http://localhost/dip2plain")
    (Publisher.NoRS)
    (ContentProvider.NoRS)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Fetch the column with corrected transcriptions. This column contains words with additions between parentheses. The parentheses are removed in the output."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.dipl2norm)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Normalize dipl")
    (ServiceURL."http://localhost/dipl2norm")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Fill column left of diplom column with normalized tokens, i.e. v -> u, j -> i and all lowercase."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.espeak)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.46.02")
    (Title.eSpeak)
    (ServiceURL."http://localhost/espeak/")
    (Publisher."espeak.sourceforge.net")
    (ContentProvider."espeak.sourceforge.net")
    (Creator."espeak.sourceforge.net")
    (InfoAbout."http://espeak.sourceforge.net/")
    ( Description
    . "Text to speech software. Originally known as speak and originally written for Acorn/RISC_OS computers starting in 1995. This version is an enhancement and re-write, including a relaxation of the original memory and processing power constraints, and with support for additional languages."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.on)
    (Inactive.)
  )
+ ( (ToolID.freq)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.Frequencies)
    (ServiceURL."http://localhost/freq/")
    (Publisher."Københavns Universitet, Center for Sprogteknologi")
    (ContentProvider."Københavns Universitet, Center for Sprogteknologi")
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Sorts input lines, collapses equal lines, appends column with frequencies. Assumes that input is 1, 2 or 3 columns, separated by tabs."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.html2text)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."28.2.18")
    (Title.html2text)
    (ServiceURL."http://localhost/html2text/")
    (Publisher."Jevon Wright")
    ( ContentProvider
    . "https://github.com/soundasleep/html2text/blob/master/src/Html2Text.php"
    )
    (Creator."Jevon Wright")
    (InfoAbout."https://github.com/soundasleep/html2text")
    ( Description
    . "A very simple script that loads from HTML, and then iterates over the DOM to correctly output plain text."
    )
    (ExternalURI."-")
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.json2org)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."JSON to ORG-mode")
    (ServiceURL."http://localhost/json2org")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Converts JSON output with tokens, lemmas and Part of Speech tags to a three-column ORG-mode table."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.jsoncat)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.7.1")
    (Title."JSON pretty print")
    (ServiceURL."http://localhost/jsoncat")
    (Publisher.GitHub)
    (ContentProvider."Gustavo Pantuza")
    (Creator."Gustavo Pantuza")
    (InfoAbout."https://github.com/pantuza/jsoncat")
    ( Description
    . "Json pretty-print parser based on a recursive lexical analyser. The parser was based on the specification defined at json.org. The input file is parsed to build a json object. If the object is correct, it will be pretty-printed to standard output."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.korp2excel)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."KORP to Excel")
    (ServiceURL."http://localhost/KWIC")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "This tool generates a tabulator separated file with all KWIC (keyword-in-context) results generated by the KORP tool at the address https://alf.hum.ku.dk/korp/. Input to the tool is the URL copied from the address line when KORP has performed a search."
    )
    (ExternalURI."-")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.lempos)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title.LemPoS)
    (ServiceURL."http://localhost/lempos")
    (Publisher."Bart Jongejan")
    (ContentProvider."Bart Jongejan")
    (Creator."Bart Jongejan")
    (InfoAbout."Bart Jongejan")
    ( Description
    . "Lemmatizes input text and adds PoS-options to each lemma. Output can be ambiguous."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.lemposA)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."LemPoS (all languages)")
    (ServiceURL."http://localhost/lemposA")
    (Publisher."Bart Jongejan")
    (ContentProvider."Bart Jongejan")
    (Creator."Bart Jongejan")
    (InfoAbout."Bart Jongejan")
    ( Description
    . "Lemmatizes input text and adds PoS-options to each lemma. Output can be ambiguous. Handles also contemporary Danish, using POS-set with number and person for pronomina."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.mate-POS)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."3.3")
    (Title."Bohnet tagger")
    (ServiceURL."http://localhost/mate-POStagger")
    (Publisher.mate-tools)
    (ContentProvider.mate-tools)
    (Creator."Bernd Bohnet")
    (InfoAbout."https://code.google.com/p/mate-tools/")
    ( Description
    . "Part of Speech tagger that is distributed as part of mate-tools."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.mate-parser)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."3.3")
    (Title."Bohnet parser")
    (ServiceURL."http://localhost/mate-parser")
    (Publisher.mate-tools)
    (ContentProvider.mate-tools)
    (Creator."Bernd Bohnet")
    (InfoAbout."http://code.google.com/p/mate-tools/")
    (Description."Dependency parser, part of mate-tools.")
    (ExternalURI."http://barbar.cs.lth.se:8081/")
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.opennlpPOStagger)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.5.2")
    (Title."OpenNLP Tagger")
    (ServiceURL."http://localhost/opennlpPOSTagger")
    (Publisher.Apache)
    (ContentProvider.Apache)
    (Creator.Apache)
    ( InfoAbout
    . "http://opennlp.apache.org/documentation/1.5.2-incubating/manual/opennlp.html#tools.postagger"
    )
    ( Description
    . "Part of Speech Tagger that marks tokens with their corresponding word type based on the token itself and the context of the token. Uses a probability model to predict the correct pos tag."
    )
    (ExternalURI.)
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.orgconv)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Diplom annotator")
    (ServiceURL."http://localhost/orgconv")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Store lemma in column 3 and/or word class in column 4 of an orgmode input file that already has diplomatic and facsimal values in columns 7 and 8."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.pdf2htmlEX)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.18.8")
    (Title.pdf2htmlEX)
    (ServiceURL."http://localhost/pdf2htmlEX/")
    (Publisher.GitHub)
    (ContentProvider.GitHub)
    (Creator."Lu Wang/Trent Petersen")
    (InfoAbout."https://github.com/pdf2htmlEX")
    ( Description
    . "Converts PDF to HTML without losing text or format. (The produced HTML can hardly be interpreted by other tools.)
Renders PDF files in HTML, utilizing modern Web technologies. It aims to provide an accurate rendering, while keeping optimized for Web display. Best for text-based PDF files, for example scientific papers with complicated formulas and figures. Text, fonts and formats are natively preserved in HTML such that you can still search and copy. The generated HTML file is static, with optional features powered by JavaScript."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.pdfminer)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."2014.03.24")
    (Title.PDFMiner)
    (ServiceURL."http://localhost/PDFMiner/")
    (Publisher."Yusuke Shinyama")
    (ContentProvider."Yusuke Shinyama")
    (Creator."Yusuke Shinyama")
    (InfoAbout."http://www.unixuser.org/~euske/python/pdfminer/")
    ( Description
    . "Extracts information from PDF documents. Focuses entirely on getting and analyzing text data."
    )
    (ExternalURI."http://pdf2html.tabesugi.net:8080")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.plainD2cbf)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."plain to TEI")
    (ServiceURL."http://localhost/plainD2cbf")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "From a plain segmentized and tokenized text file that uses DEL characters to separate tokens that are written together in the input, create a TEI P5 Clarin Base Format text with attributes S and T for segment and token identification."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.seg)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.TEI-segmenter)
    (ServiceURL."http://localhost/seg/")
    (Publisher."Københavns Universitet, Center for Sprogteknologi")
    (ContentProvider."Københavns Universitet, Center for Sprogteknologi")
    (Creator."Bart Jongejan")
    (InfoAbout."http://cst.dk/online/TEIP5-segmenter/")
    ( Description
    . "Reads tokens and sentences as annotations and produces segment annotations, where segments refer to tokens, not to the base text. Input and output is encoded in TEI P5."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.sent)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Sentence extractor")
    (ServiceURL."http://localhost/sent")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "From a TEI text enriched with T (token) and S (segment) attributes, extract the sentences and their offsets in the source."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.soffice)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."3.5")
    (Title.LibreOffice)
    (ServiceURL."http://localhost/soffice/")
    (Publisher.LibreOffice)
    (ContentProvider.LibreOffice)
    (Creator.LibreOffice)
    (InfoAbout."http://www.libreoffice.org")
    ( Description
    . "A powerful office suite, here used to convert office documents to RTF or PDF."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.tagtrans)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."PoS translator")
    (ServiceURL."http://localhost/tagtrans")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    (Description."Translate from DSL's tag set to Menota")
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.tei2conll)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."TEI to CoNLL-U")
    (ServiceURL."http://localhost/tei2conll")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Converts a TEI P5 document with annotations for lemma, pos (or msd) and syntactic dependencies to CoNLL-U 10 column format."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.teianno2orgmode)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."TEI to Org-mode")
    (ServiceURL."http://localhost/tei2org")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Convert TEI P5 stand-off annotation to a two column file in Org-mode format. The first column contains a token, the second contains the annotation: POS-tag, word class, or lemma"
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.teitok)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."TEI tokenizer")
    (ServiceURL."http://localhost/teitok/")
    (Publisher.CST)
    (ContentProvider.Nors)
    (Creator."Bart Jongejan")
    (InfoAbout."*---*")
    ( Description
    . "Apply a primitive tokenisation to the contents of the <text> element in a TEI P5 document. Each word, punctuation and whitespace is marked up by w or c tags. S and T attributes indicate wich primitive tokens should be combined to create higher level tokens."
    )
    (ExternalURI."https://nlpweb01.nors.ku.dk/teitok/")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.toks)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Token extractor")
    (ServiceURL."http://localhost/toks")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "From a TEI text enriched with T (token) and S (segment) attributes, extract tokens and their offset in the input."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.toksent)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."TEI extract tokens/sentences")
    (ServiceURL."http://localhost/toksent/")
    (Publisher."Københavns Universitet, Center for Sprogteknologi")
    (ContentProvider."Københavns Universitet, Center for Sprogteknologi")
    (Creator."Bart Jongejan")
    (InfoAbout."http://cst.dk/online/TEIP5-tokeniser-sentence")
    ( Description
    . "Reads TEIP5 and produces token and sentence annotations. The annotations refer to the base text, but also include the tokens and sentences themselves in plain text."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.udpipe)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.2")
    (Title.udpipe)
    (ServiceURL."http://localhost/udpipe/")
    ( Publisher
    . "Charles University, Faculty of Mathematics and Physics, Institute of Formal and Applied Linguistics (UFAL)"
    )
    (ContentProvider."LINDAT / CLARIAH-CZ Data & Tools")
    (Creator."Milan Straka & Jana Straková")
    (InfoAbout."https://ufal.mff.cuni.cz/udpipe/1")
    ( Description
    . "Tokenizer, POS Tagger, Lemmatizer and Parser models for 94 treebanks of 61 languages of Universal Depenencies 2.5 Treebanks."
    )
    (ExternalURI.)
    (RestAPIkey."*****")
    (RestAPIpassword."*****")
    (MultiInp.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.udpipe2)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."2.10")
    (Title."udpipe 2")
    (ServiceURL."http://localhost/udpipe2/")
    ( Publisher
    . "Charles University, Faculty of Mathematics and Physics, Institute of Formal and Applied Linguistics (UFAL)"
    )
    (ContentProvider."LINDAT / CLARIAH-CZ Data & Tools")
    (Creator."Milan Straka & Jana Straková")
    (InfoAbout."https://ufal.mff.cuni.cz/udpipe/2")
    ( Description
    . "The Universal Dependencies 2.10 models contain 123 models of 69 languages, each consisting of a tokenizer, tagger, lemmatizer and dependency parser, all trained using the UD data. We used the original train-dev-test split, but for treebanks with only train and no dev data we used last 10% of the train data as dev data. We produce models only for treebanks with at least 1000 training words."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.vujiloX)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.vujiLoX)
    (ServiceURL."http://localhost/vujilo")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Converts Latin text to lower case and transforms v to u and j to i."
    )
    (ExternalURI.)
    (MultiInp.)
    (PostData.)
    (Inactive.)
  );
toolprop=
  ( ANNIE-DE
  .   (ambig,(una.una))
      (facet,(seg*tok.ner))
      (format,(teip5.teip5))
      (lang,(de.de))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( ANNIE-EN
  .   (ambig,(una.una))
      (facet,(seg*tok.ner))
      (format,(teip5.teip5))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( ANNIE-FR
  .   (ambig,(una.una))
      (facet,(seg*tok.ner))
      (format,(teip5.teip5))
      (lang,(fr.fr))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( ANNIE-RO
  .   (ambig,(una.una))
      (facet,(seg*tok.ner))
      (format,(teip5.teip5))
      (lang,(ro.ro))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( ANNIE-RU
  .   (ambig,(una.una))
      (facet,(seg*tok.ner))
      (format,(teip5.teip5))
      (lang,(ru.ru))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ( (par*seg*tok.OnE)
          . par*pos^DSL*seg*tok
          )
        + ((seg*tok.OnE).pos^DSL*seg*tok)
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,(seg*tok ner.pos^DSL))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(sof.sof))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      ( facet
      ,   ( (par*seg*tok.OnE)
          . par*pos^Uni*seg*tok
          )
        + ((seg*tok.OnE).pos^Uni*seg*tok)
      )
      (format,(flat.flat))
      (lang,(la.la))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.pos^Uni))
      (format,(teip5.teip5))
      (lang,(la.la))
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      ( facet
      ,   ( (ner*par*seg*tok.OnE)
          . cls*par*pos^Par*seg
          )
        + ((ner*seg*tok.OnE).cls*pos^Par*seg)
        + ( (par*seg*tok.OnE)
          . par*pos^Par*seg*tok
          )
        + ((seg*tok.OnE).pos^Par*seg*tok)
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      ( facet
      ,   ( (par*seg*tok.OnE)
          . par*pos^HiNTS*seg*tok
          )
        + ((seg*tok.OnE).pos^HiNTS*seg*tok)
      )
      (format,(flat.flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      ( facet
      ,   ( (par*seg*tok.OnE)
          . par*pos^PT*seg*tok
          )
        + ((seg*tok.OnE).pos^PT*seg*tok)
      )
      (format,(flat.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (facet,(seg*tok.pos^HiNTS))
      (format,(teip5.teip5))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (facet,(seg*tok.pos^PT))
      (format,(teip5.teip5))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (facet,(seg*tok ner.pos^Par))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( CQP
  .   (ambig,(una.una))
      ( facet
      , ( lem*pos*seg*tok*(seg*tok.OnE)
        . cls*lem*pos*seg*tok
        )
      )
      (format,(teip5.vrt))
      (pres,(sof.nml))
  )
+ ( CQP
  .   (ambig,(una.una))
      ( facet
      , ( (lem*pos*seg*tok.OnE)
        . cls*lem*pos*seg*tok
        )
      )
      (format,(cols.vrt))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb)+(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ( (par*pos^Par*seg*tok.OnE)
          .   lem*par*seg
            + lem*par*pos^Par*seg*tok
          )
        + ( (par*pos^Uni*seg*tok.OnE)
          .   lem*par*seg
            + lem*par*pos^Uni*seg*tok
          )
        + ( (pos^Par*seg*tok.OnE)
          . lem*seg+lem*pos^Par*seg*tok
          )
        + ( (pos^Uni*seg*tok.OnE)
          . lem*seg+lem*pos^Uni*seg*tok
          )
      )
      (format,(flat.cols+flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb)+(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ( (pos^Par*seg*tok.OnE)
          . lem+lem*tok+lem*pos^Par*tok
          )
        + ( (pos^Uni*seg*tok.OnE)
          . lem+lem*tok+lem*pos^Uni*tok
          )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ( (par*pos^HiNTS*seg*tok.OnE)
          .   lem*par*seg
            + lem*par*pos^HiNTS*seg*tok
          )
        + ((seg*tok.OnE).lem*seg)
        + ( (pos^HiNTS*seg*tok.OnE)
          . lem*seg+lem*pos^HiNTS*seg*tok
          )
      )
      (format,(flat.cols+flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg*tok)
        + ((seg*tok.OnE).lem*seg*tok)
      )
      (format,(flat.cols+flat))
      (lang,(da.da)+(gml.gml))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ((seg*tok.OnE).lem+lem*tok)
        + ( (pos^HiNTS*seg*tok.OnE)
          . lem+lem*tok+lem*pos^HiNTS*tok
          )
      )
      (format,(flat.flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ( (par*pos^PT*seg*tok.OnE)
          . lem*par*seg+lem*par*pos^PT*seg*tok
          )
        + ((seg*tok.OnE).lem*seg)
        + ( (pos^PT*seg*tok.OnE)
          . lem*seg+lem*pos^PT*seg*tok
          )
      )
      (format,(flat.cols+flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ((seg*tok.OnE).lem*seg)
      )
      (format,(flat.cols+flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm))
      ( facet
      ,   ((seg*tok.OnE).lem+lem*tok)
        + ( (pos^PT*seg*tok.OnE)
          . lem+lem*tok+lem*pos^PT*tok
          )
      )
      (format,(flat.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb))
      (app,(nrm.nrm))
      ( facet
      ,   ( (par*seg*tok.OnE)
          . lem*par*seg+lem*par*seg*tok
          )
        + ((seg*tok.OnE).lem*seg+lem*seg*tok)
      )
      (format,(flat.cols+flat))
      (lang,(da.da)+(gml.gml))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      (lang,(da.da)+(gml.gml))
      (period,(c13.c13))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb))
      (app,(unn.unn))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg*tok)
        + ((seg*tok.OnE).lem*seg*tok)
      )
      (format,(flat.cols+flat))
      (lang,(da.da)+(gml.gml))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      ( facet
      ,   ( (par*pos^DSL*seg*tok.OnE)
          .   lem*par*seg
            + lem*par*pos^DSL*seg*tok
          )
        + ( (pos^DSL*seg*tok.OnE)
          . lem*seg+lem*pos^DSL*seg*tok
          )
      )
      (format,(flat.cols+flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(tok.lem))
      (format,(teip5.teip5))
      ( lang
      ,   (af.af)
        + (ast.ast)
        + (be.be)
        + (bg.bg)
        + (ca.ca)
        + (cs.cs)
        + (cy.cy)
        + (de.de)
        + (el.el)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (fr.fr)
        + (ga.ga)
        + (gd.gd)
        + (gl.gl)
        + (gv.gv)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (ka.ka)
        + (mk.mk)
        + (nl.nl)
        + (no.no)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sq.sq)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(tok.lem))
      (format,(teip5.teip5))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(tok.lem))
      (format,(teip5.teip5))
      (lang,(la.la))
      (pres,(sof.sof))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(tok pos^PT.lem))
      (format,(teip5.teip5))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      ( facet
      , ( (pos^DSL*seg*tok.OnE)
        . lem+lem*tok+lem*pos^DSL*tok
        )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(unn.unn))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ( (par*pos^DSL*seg*tok.OnE)
          .   lem*par*seg
            + lem*par*pos^DSL*seg*tok
          )
        + ((seg*tok.OnE).lem*seg)
        + ( (pos^DSL*seg*tok.OnE)
          . lem*seg+lem*pos^DSL*seg*tok
          )
      )
      (format,(flat.cols+flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(unn.unn))
      ( facet
      ,   ((seg*tok.OnE).lem+lem*tok)
        + ( (pos^DSL*seg*tok.OnE)
          . lem+lem*tok+lem*pos^DSL*tok
          )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,(tok.lem))
      (format,(teip5.teip5))
      (lang,(da.da)+(gml.gml))
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,(tok pos^DSL.lem))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(sof.sof))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,(tok pos^HiNTS.lem))
      (format,(teip5.teip5))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   (tok.lem+lem*tok)
        + ( pos^PT*tok
          . lem+lem*tok+lem*pos^PT*tok
          )
      )
      (format,(teip5.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(sof.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ( pos^Par*tok
          . lem+lem*tok+lem*pos^Par*tok
          )
        + ( pos^Uni*tok
          . lem+lem*tok+lem*pos^Uni*tok
          )
      )
      (format,(teip5.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(sof.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ((seg*tok.OnE).lem*seg)
      )
      (format,(flat.cols+flat))
      ( lang
      ,   (af.af)
        + (ast.ast)
        + (be.be)
        + (bg.bg)
        + (ca.ca)
        + (cs.cs)
        + (cy.cy)
        + (da.da)
        + (de.de)
        + (el.el)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (fr.fr)
        + (ga.ga)
        + (gd.gd)
        + (gl.gl)
        + (gv.gv)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (ka.ka)
        + (mk.mk)
        + (nl.nl)
        + (no.no)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sq.sq)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ((seg*tok.OnE).lem*seg)
      )
      (format,(flat.cols+flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ((seg*tok.OnE).lem*seg)
      )
      (format,(flat.cols+flat))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ( (par*pos^HiNTS*seg*tok.OnE)
          .   lem*par*seg
            + lem*par*pos^HiNTS*seg*tok
          )
        + ( (pos^HiNTS*seg*tok.OnE)
          . lem*seg+lem*pos^HiNTS*seg*tok
          )
      )
      (format,(flat.cols+flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ( (par*pos^PT*seg*tok.OnE)
          . lem*par*seg+lem*par*pos^PT*seg*tok
          )
        + ( (pos^PT*seg*tok.OnE)
          . lem*seg+lem*pos^PT*seg*tok
          )
      )
      (format,(flat.cols+flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,(tok.lem+lem*tok))
      (format,(teip5.flat))
      (lang,(da.da))
      (period,(c20.c20)+(c21.c21))
      (pres,(sof.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      , ( pos^DSL*tok
        . lem+lem*tok+lem*pos^DSL*tok
        )
      )
      (format,(teip5.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(sof.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      , ( pos^HiNTS*tok
        . lem+lem*tok+lem*pos^HiNTS*tok
        )
      )
      (format,(teip5.flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(sof.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,(tok pos^Par.lem))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      ( lang
      ,   (af.af)
        + (ast.ast)
        + (be.be)
        + (bg.bg)
        + (ca.ca)
        + (cs.cs)
        + (cy.cy)
        + (da.da)
        + (de.de)
        + (el.el)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (fr.fr)
        + (ga.ga)
        + (gd.gd)
        + (gl.gl)
        + (gv.gv)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (ka.ka)
        + (mk.mk)
        + (nl.nl)
        + (no.no)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sq.sq)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      (lang,(la.la))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      , ( (pos^HiNTS*seg*tok.OnE)
        . lem+lem*tok+lem*pos^HiNTS*tok
        )
      )
      (format,(flat.flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      , ( (pos^PT*seg*tok.OnE)
        . lem+lem*tok+lem*pos^PT*tok
        )
      )
      (format,(flat.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(unn.unn))
      ( facet
      ,   (tok.lem+lem*tok)
        + ( pos^DSL*tok
          . lem+lem*tok+lem*pos^DSL*tok
          )
      )
      (format,(teip5.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(sof.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(unn.unn))
      ( facet
      ,   (tok.lem+lem*tok)
        + ( pos^HiNTS*tok
          . lem+lem*tok+lem*pos^HiNTS*tok
          )
      )
      (format,(teip5.flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(sof.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(unn.unn))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ( (par*pos^HiNTS*seg*tok.OnE)
          .   lem*par*seg
            + lem*par*pos^HiNTS*seg*tok
          )
        + ((seg*tok.OnE).lem*seg)
        + ( (pos^HiNTS*seg*tok.OnE)
          . lem*seg+lem*pos^HiNTS*seg*tok
          )
      )
      (format,(flat.cols+flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(unn.unn))
      ( facet
      ,   ((seg*tok.OnE).lem+lem*tok)
        + ( (pos^HiNTS*seg*tok.OnE)
          . lem+lem*tok+lem*pos^HiNTS*tok
          )
      )
      (format,(flat.flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(amb+una.amb))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ( (par*pos^DSL*seg*tok.OnE)
          .   lem*par*seg
            + lem*par*pos^DSL*seg*tok
          )
        + ( (pos^DSL*seg*tok.OnE)
          . lem*seg+lem*pos^DSL*seg*tok
          )
      )
      (format,(flat.cols+flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb+una.amb))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      , ( (pos^DSL*seg*tok.OnE)
        . lem+lem*tok+lem*pos^DSL*tok
        )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-Lem
  .   (ambig,(amb+una.amb))
      (app,(unn.unn))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ((seg*tok.OnE).lem*seg)
      )
      (format,(flat.cols+flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb+una.amb))
      (app,(unn.unn))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.alf+frq+uaf+ufq))
  )
+ ( CST-MWU
  .   (facet,(pos^Par.mwu))
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
  )
+ ( CST-NER
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      ( facet
      ,   ((par*seg*tok.OnE).ner*par*seg*tok)
        + ((seg*tok.OnE).ner*seg*tok)
      )
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-NER
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.ner))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( CST-NPr
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,(pos^Par*seg*tok lem.npr))
      (format,(teip5.flat^utf8))
      (lang,(da.da))
      (pres,(sof.nml))
  )
+ ( CST-Ngram
  .   (facet,(tok.Ngram))
      (format,(flat^utf8.flat^utf8))
  )
+ ( CST-Norm
  .   (ambig,(amb.amb)+(una.amb+una))
      (app,(unn.nrm))
      (facet,(tok.tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.alf+frq+nml+uaf+ufq))
  )
+ ( CST-Norm
  .   (ambig,(amb.amb)+(una.amb+una))
      (app,(unn.nrm))
      (facet,((seg*tok.OnE).seg*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Rep
  .   (ambig,(una.una))
      ( facet
      , (   txt
          + (lem*seg.OnE)
          + (pos*seg.OnE)
          + (seg*tok.OnE)
        . rep
        )
      )
      (format,(flat.html^ROTM))
      (pres,(nml.frq))
  )
+ ( CST-Ver
  .   (ambig,(una.una))
      ( facet
      , (   txt
          + (lem*seg.OnE)
          + (pos*seg.OnE)
          + (seg*tok.OnE)
        . rep
        )
      )
      (format,(flat.html^ROTM))
      (pres,(nml.frq))
  )
+ ( CST-anon
  .   (facet,(tok.tok^anon))
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
  )
+ ( CST-keyw
  .   (facet,(pos^Par.key))
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
  )
+ ( CST-wrdsplt
  .   (ambig,(una.una))
      (facet,(lem+tok+txt.wrdsplt))
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
      (pres,(nml.nml))
  )
+ ( CoreNLP
  .   (ambig,(una.una))
      ( facet
      , ( txt
        .   etc
          * lem
          * ner
          * pos^PT
          * seg
          * snt
          * stc
          * stx
          * tok
        )
      )
      (format,(flat.teip5))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.sof))
      (sml,(TXT+sml.TOK))
  )
+ ( CoreNLP
  .   (ambig,(una.una))
      (facet,(txt.etc*ner*pos*seg*sent*stc*tok))
      (format,(flat.teip5))
      (lang,(hu.hu))
      (period,(c21.c21))
      (pres,(nml.sof))
      (sml,(TXT+sml.TOK))
  )
+ ( CoreNLP
  .   (ambig,(una.una))
      ( facet
      , (txt.etc*ner*pos*seg*sent*stc*stx*tok)
      )
      (format,(flat.teip5))
      (lang,(fr.fr)+(it.it)+(zh.zh))
      (period,(c21.c21))
      (pres,(nml.sof))
      (sml,(TXT+sml.TOK))
  )
+ ( CoreNLP
  .   (ambig,(una.una))
      (facet,(txt.etc*ner*pos*seg*sent*stx*tok))
      (format,(flat.teip5))
      (lang,(es.es))
      (period,(c21.c21))
      (pres,(nml.sof))
      (sml,(TXT+sml.TOK))
  )
+ ( CoreNLP
  .   (ambig,(una.una))
      ( facet
      , ( txt
        . etc*pos*seg*sent*stc*tok+etc*seg*tok
        )
      )
      (format,(flat.teip5))
      (lang,(ar.ar))
      (period,(c21.c21))
      (pres,(nml.sof))
      (sml,(TXT+sml.TOK))
  )
+ ( CoreNLP
  .   (ambig,(una.una))
      (facet,((seg*tok.OnE).etc*ner*pos*seg*stx*tok))
      (format,(flat.teip5))
      (lang,(de.de))
      (period,(c21.c21))
      (pres,(nml.sof))
      (sml,(sml+TOK.TeiP5))
  )
+ ( CuneiForm
  .   (app,(nrm+rom.ocr))
      (facet,(txt.txt))
      ( format
      , (   pdf
          + img^gif
          + img^jpeg
          + img^pdf
          + img^png
          + img^tiff
        . rtf
        )
      )
      ( lang
      ,   (bg.bg)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fr.fr)
        + (hr.hr)
        + (hu.hu)
        + (it.it)
        + (lt.lt)
        + (lv.lv)
        + (nl.nl)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (tr.tr)
        + (uk.uk)
      )
      (sml,(sml.TXT))
  )
+ ( JSON2TEIP5ANNO
  .   (ambig,(pru.una))
      (app,(drty.nrm))
      (facet,((lem*pos*seg*tok.OnE).lem+pos))
      (format,(json^xid.teip5))
      (pres,(nml.sof))
  )
+ ( JSON2tabsep
  .   (ambig,(pru.una))
      (app,(drty.prtty))
      ( facet
      , ( (lem*pos*seg*tok.OnE)
        . lem*pos*seg*tok
        )
      )
      (format,(json.flat))
      (pres,(nml.nml))
  )
+ ( Lapos
  .   (ambig,(una.una))
      (facet,(seg*tok.pos^DSL))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(sof.sof))
  )
+ ( Lapos
  .   (ambig,(una.una))
      (facet,(seg*tok.pos^HiNTS))
      (format,(teip5.teip5))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( Lapos
  .   (ambig,(una.una))
      (facet,(seg*tok.pos^Uni))
      (format,(teip5.teip5))
      (lang,(la.la))
      (pres,(sof.sof))
  )
+ ( Lapos
  .   (ambig,(una.una))
      (facet,((seg*tok.OnE).pos^DSL*seg*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.nml))
  )
+ ( Lapos
  .   (ambig,(una.una))
      ( facet
      , ((seg*tok.OnE).pos^HiNTS*seg*tok)
      )
      (format,(flat.flat))
      (lang,(gml.gml))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( Lapos
  .   (ambig,(una.una))
      (facet,((seg*tok.OnE).pos^Uni*seg*tok))
      (format,(flat.flat))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( PDFBox
  .   (facet,(txt.txt))
      (format,(pdf.flat^utf8))
      (pres,(nml.nml))
      (sml,(sml.TXT))
  )
+ ( PruLePo
  .   (ambig,(amb.pru))
      (app,(drty.drty))
      ( facet
      , ( (lem*pos*seg*tok.OnE)
        . lem*pos*seg*tok
        )
      )
      ( format
      , (json^nid.json^nid)+(json^xid.json^xid)
      )
      (pres,(nml.nml))
  )
+ ( RTFread
  .   (app,(nrm.nrm)+(ocr.nrm+unn)+(unn.unn))
      ( facet
      ,   (exc.seg*tok)
        + (tok+txt.par*seg*tok+seg*tok)
      )
      (format,(flat+rtf.flat+plainD))
      (lang,(en.en))
      (pres,(nml.nml))
      (sml,(TXT+sml.TOK))
  )
+ ( RTFread
  .   (app,(nrm.nrm)+(ocr.nrm+unn)+(unn.unn))
      ( facet
      ,   (exc.seg*tok)
        + (tok+txt.par*seg*tok+seg*tok)
      )
      (format,(flat+rtf.flat+plainD))
      (pres,(nml.nml))
      (sml,(TXT+sml.TOK))
  )
+ ( RTFread
  .   (app,(nrm.nrm)+(ocr.nrm+unn)+(unn.unn))
      (facet,(txt.seg+par*seg))
      (format,(flat+rtf.flat))
      (lang,(en.en))
      (pres,(nml.nml))
      (sml,(TXT+sml.TOK))
  )
+ ( RTFread
  .   (app,(nrm.nrm)+(ocr.nrm+unn)+(unn.unn))
      (facet,(txt.seg+par*seg))
      (format,(flat+rtf.flat))
      (pres,(nml.nml))
      (sml,(TXT+sml.TOK))
  )
+ ( TEIanno
  .   (ambig,(pru.pru)+(una.una))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ( etc*lem*mrf*ner*pos^Uni*tok
          . lem*mrf*ner*pos^Uni*tok
          )
        + (   etc
            * lem
            * mrf
            * ner
            * pos^Uni
            * seg
            * stx
            * tok
          . lem*mrf*ner*pos^Uni*seg*stx*tok
          )
        + ( etc*lem*mrf*pos^Uni*tok
          . lem*mrf*pos^Uni*tok
          )
        + ( etc*lem*mrf*pos^Uni*seg*stx*tok
          . lem*mrf*pos^Uni*seg*stx*tok
          )
        + (   lem
            * mrf
            * ner
            * pos^Uni
            * seg
            * stx
            * tok
            * (seg*tok.OnE)
          . lem*mrf*ner*pos^Uni*seg*stx*tok
          )
        + (   lem
            * mrf
            * ner
            * pos^Uni
            * tok
            * (seg*tok.OnE)
          . lem*mrf*ner*pos^Uni*tok
          )
        + (   lem
            * mrf
            * pos^Uni
            * seg
            * stx
            * tok
            * (seg*tok.OnE)
          . lem*mrf*pos^Uni*seg*stx*tok
          )
      )
      (format,(teip5.teip5))
      (pres,(sof.inl))
  )
+ ( Tesseract-OCR
  .   (ambig,(una.una))
      (app,(got+gotd+nrm+rom.ocr))
      (facet,(txt.txt))
      ( format
      , (   pdf
          + img^gif
          + img^jpeg
          + img^pdf
          + img^pjpeg
          + img^png
          + img^tiff
        . flat
        )
      )
      ( lang
      ,   (af.af)
        + (br.br)
        + (bs.bs)
        + (ca.ca)
        + (co.co)
        + (cs.cs)
        + (cy.cy)
        + (da.da)
        + (de.de)
        + (en.en)
        + (eo.eo)
        + (es.es)
        + (et.et)
        + (eu.eu)
        + (fa.fa)
        + (fi.fi)
        + (fo.fo)
        + (fr.fr)
        + (ga.ga)
        + (gl.gl)
        + (hr.hr)
        + (ht.ht)
        + (hu.hu)
        + (id.id)
        + (is.is)
        + (it.it)
        + (iu.iu)
        + (jv.jv)
        + (la.la)
        + (lb.lb)
        + (lt.lt)
        + (lv.lv)
        + (ms.ms)
        + (mt.mt)
        + (nb.nb)
        + (nl.nl)
        + (nn.nn)
        + (oc.oc)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (sk.sk)
        + (sl.sl)
        + (sq.sq)
        + (sr.sr)
        + (sv.sv)
        + (sw.sw)
        + (tr.tr)
        + (uz.uz)
        + (vi.vi)
        + (yi.yi)
      )
      (pres,(nml.nml))
      (sml,(sml.TXT))
  )
+ ( anasplit
  .   (app,(drty+nrm+ocr+unn.prtty))
      ( facet
      , (   ( etc*lem*ner*pos*seg*snt*stc*tok
            . OnE
            )
          + (   etc
              * lem
              * ner
              * pos
              * seg
              * snt
              * stc
              * stx
              * tok
            . OnE
            )
          + (etc*ner*pos*seg*sent*stc*tok.OnE)
          + (etc*pos*seg*sent*stc*tok.OnE)
        . stc
        )
      )
      (format,(teip5.pt))
  )
+ ( anasplit
  .   ( facet
      ,   ( ( etc*lem*ner*pos*seg*snt*stc*tok
            . OnE
            )
          . etc+lem+ner+pos+seg+snt+stc+tok
          )
        + ( (   etc
              * lem
              * ner
              * pos
              * seg
              * snt
              * stc
              * stx
              * tok
            . OnE
            )
          .   etc
            + lem
            + ner
            + pos
            + seg
            + snt
            + stc
            + stx
            + tok
          )
        + ( ( etc*lem*ner*pos*seg*snt*stx*tok
            . OnE
            )
          . etc+lem+ner+pos+seg+snt+stx+tok
          )
        + ( (etc*ner*pos*seg*sent*stc*tok.OnE)
          . etc+ner+pos+seg+sent+stc+tok
          )
        + ( ( etc*ner*pos*seg*sent*stc*stx*tok
            . OnE
            )
          . etc+ner+pos+seg+sent+stc+stx+tok
          )
        + ( (etc*ner*pos*seg*sent*stx*tok.OnE)
          . etc+ner+pos+seg+sent+stx+tok
          )
        + ( (etc*ner*pos*seg*stx*tok.OnE)
          . etc+ner+pos+seg+stx+tok
          )
        + ( (etc*pos*seg*sent*stc*tok.OnE)
          . etc+pos+seg+sent+stc+tok
          )
        + ( (lem*mrf*pos*stx.OnE)
          . lem+mrf+pos+stx
          )
        + ((mrf*pos.OnE).mrf+pos)
        + ((ner*pos*stx.OnE).ner+pos+stx)
      )
      (format,(teip5.teip5))
      (pres,(sof.sof))
  )
+ ( cluster
  .   format
    ,   (2col.2cole)
      + (3col.2cole+3cole)
      + (4col.2cole+4cole)
  )
+ (conll2009toU.format,(conll^cnl2009.conll^clU))
+ ( conll23
  .   (ambig,(una.una))
      ( facet
      , (   (lem*mrf*pos*seg*tok.OnE)
          + (lem*mrf*pos*seg*stx*tok.OnE)
          + (lem*pos*seg*tok.OnE)
          + (lem*pos*seg*stx*tok.OnE)
        . lem*pos*tok
        )
      )
      (format,(conll^clU+conll^cnl2009.3col))
      (pres,(nml.nml))
  )
+ ( conll2pt
  .   (app,(drty+nrm+ocr+unn.prtty))
      ( facet
      , (   (lem*mrf*ner*pos*seg*stx*tok.OnE)
          + (lem*mrf*pos*seg*stx*tok.OnE)
          + (lem*pos*seg*stx*tok.OnE)
          + (pos*seg*stx*tok.OnE)
        . pos*seg*stx*tok
        )
      )
      (format,(conll^clU.pt))
      (pres,(nml.nml))
  )
+ ( conllout
  .   (ambig,(una.una))
      ( facet
      ,   (lem*pos*seg*tok.lem*pos*seg*tok)
        + (pos*seg*tok.pos*seg*tok)
        + (seg*tok.seg*tok)
      )
      (format,(teip5.conll^cnl2009))
      (pres,(sof.nml))
  )
+ ( daner
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.ner))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( daner
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).ner*seg*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( dep2tree
  .   (app,(drty+nrm+ocr+unn.prtty))
      ( facet
      , (   (lem*mrf*ner*pos*seg*stx*tok.OnE)
          + (lem*mrf*pos*seg*stx*tok.OnE)
          + (lem*pos*seg*stx*tok.OnE)
          + (pos*seg*stx*tok.OnE)
        . pos*seg*stx*tok
        )
      )
      (format,(conll^clU.html^pedantic))
  )
+ ( dip2plain
  .   (ambig,(una.una))
      (app,(unn.unn))
      (facet,(tok.seg*tok))
      (format,(dipl.plainD))
      (lang,(da.da)+(gml.gml)+(la.la)+(sv.sv))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( dipl2norm
  .   (app,(unn.nrm))
      (facet,(tok.tok))
      (format,(dipl.dipl))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( espeak
  .   ( facet
      , (txt.txt)+((seg*tok.OnE).seg*tok)
      )
      (format,(flat.wav))
      ( lang
      ,   (af.af)
        + (bg.bg)
        + (bs.bs)
        + (ca.ca)
        + (cs.cs)
        + (cy.cy)
        + (da.da)
        + (de.de)
        + (el.el)
        + (en.en)
        + (eo.eo)
        + (es.es)
        + (et.et)
        + (fi.fi)
        + (fr.fr)
        + (hi.hi)
        + (hr.hr)
        + (hu.hu)
        + (hy.hy)
        + (id.id)
        + (is.is)
        + (it.it)
        + (ka.ka)
        + (kn.kn)
        + (ku.ku)
        + (lv.lv)
        + (mk.mk)
        + (ml.ml)
        + (nl.nl)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sq.sq)
        + (sr.sr)
        + (sv.sv)
        + (sw.sw)
        + (ta.ta)
        + (tr.tr)
        + (vi.vi)
        + (zh.zh)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( espeak
  .   ( facet
      , (txt.txt)+((seg*tok.OnE).seg*tok)
      )
      (format,(flat.wav))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( freq
  .   (format,(2col.3col)+(3col.4col)+(flat.2col))
      (pres,(nml.frq))
  )
+ ( html2text
  . (format,(html^ROTM.flat)) (sml,(sml.TXT))
  )
+ ( json2org
  .   (app,(drty.nrm+unn))
      ( facet
      , ( (lem*pos^Menota*seg*tok.OnE)
        . lem*pos^Menota*tok
        )
      )
      (format,(json.dipl))
      (pres,(nml.nml))
  )
+ ( jsoncat
  . (app,(drty.prtty)) (format,(json.json))
  )
+ ( korp2excel
  . (facet,(kwic.kwic)) (format,(url.flat))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      (facet,(seg*tok.lem*pos^Uni*seg*tok))
      (format,(teip5.json^xid))
      (lang,(fo.fo)+(is.is)+(mk.mk)+(sq.sq))
      (period,(c21.c21))
      (pres,(sof.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      ( facet
      , ((seg*tok.OnE).lem*pos^Uni*seg*tok)
      )
      (format,(flat.json^nid))
      (lang,(fo.fo)+(is.is)+(mk.mk)+(sq.sq))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      (facet,(seg*tok.lem*pos^DSL*seg*tok))
      (format,(teip5.json^xid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(sof.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      (facet,(seg*tok.lem*pos^Uni*seg*tok))
      (format,(teip5.json^xid))
      (lang,(la.la))
      (pres,(sof.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      (facet,((seg*tok.OnE).lem*pos*seg*tok))
      (format,(flat.json^nid))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      ( facet
      , ((seg*tok.OnE).lem*pos^DSL*seg*tok)
      )
      (format,(flat.json^nid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      (facet,(seg*tok.lem))
      (format,(teip5.json^xid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(sof.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      (facet,(seg*tok.lem*pos*seg*tok))
      (format,(teip5.json^xid))
      ( lang
      ,   (be.be)
        + (bg.bg)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (mk.mk)
        + (nl.nl)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(sof.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      (facet,((seg*tok.OnE).lem))
      (format,(flat.json^nid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      (facet,((seg*tok.OnE).lem*pos*seg*tok))
      (format,(flat.json^nid))
      ( lang
      ,   (be.be)
        + (bg.bg)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (mk.mk)
        + (nl.nl)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(unn.drty))
      (facet,(seg*tok.lem))
      (format,(teip5.json^xid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(sof.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(unn.drty))
      (facet,((seg*tok.OnE).lem))
      (format,(flat.json^nid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      (facet,(seg*tok.lem*pos^DSL*seg*tok))
      (format,(teip5.json^xid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(sof.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      (facet,(seg*tok.lem+lem*pos^Uni*seg*tok))
      (format,(teip5.json^xid))
      (lang,(la.la))
      (pres,(sof.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      ( facet
      , ((seg*tok.OnE).lem*pos^DSL*seg*tok)
      )
      (format,(flat.json^nid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( lemposA
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      ( facet
      , ((seg*tok.OnE).lem+lem*pos*seg*tok)
      )
      (format,(flat.json^nid))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( mate-POS
  .   (facet,(seg*tok.pos^Uni))
      (format,(teip5.teip5))
      (lang,(de.de)+(en.en)+(es.es)+(fr.fr))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( mate-parser
  .   (ambig,(una.una))
      ( facet
      ,   ( lem*pos^Uni*seg*tok
          . lem*pos^Uni*seg*stx*tok
          )
        + (pos^Uni*seg*tok.pos^Uni*seg*stx*tok)
      )
      (format,(teip5.conll^cnl2009))
      (lang,(da.da)+(de.de)+(es.es)+(fr.fr))
      (period,(c21.c21))
      (pres,(sof.nml))
  )
+ ( opennlpPOStagger
  .   (facet,(seg*tok.pos^Uni))
      (format,(teip5.teip5))
      (lang,(da.da)+(en.en))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( orgconv
  .   (ambig,(amb.amb)+(pru.pru)+(una.una))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   (     tok
              * (lem*tok.OnE)
              * (mrf^Menota*tok.OnE)
              * (pos^Menota*tok.OnE)
            +   tok
              * (lem*mrf^Menota*pos^Menota*tok.OnE)
          . lem*mrf^Menota*pos^Menota*seg*tok
          )
        + (     tok
              * (lem*tok.OnE)
              * (pos^Menota*tok.OnE)
            + tok*(lem*pos^Menota*tok.OnE)
          . lem*pos^Menota*seg*tok
          )
      )
      (format,(dipl.dipl))
      (pres,(nml.nml))
  )
+ ( pdf2htmlEX
  .   (app,(nrm.prtty))
      (format,(pdf.html^pedantic))
  )
+ ( pdfminer
  .   (ambig,(una.una))
      (facet,(txt.txt))
      (format,(pdf.flat^utf8))
      (pres,(nml.nml))
      (sml,(sml.TXT))
  )
+ ( plainD2cbf
  .   (ambig,(una.una))
      (facet,((seg*tok.OnE).seg*tok))
      (format,(plainD.teip5))
      (pres,(nml.sof))
      (sml,(sml+TOK.TeiP5))
  )
+ ( seg
  .   (facet,(sent*tok.seg))
      (format,(teip5.teip5))
      (pres,(sof.sof))
  )
+ ( sent
  .   (ambig,(una.una))
      (facet,((seg*tok.OnE).sent))
      (format,(teip5.teip5))
      (pres,(sof.sof))
  )
+ ( soffice
  .   format
    , (doc+docx+odt.rtf)+(odp+ppt+pptx.pdf)
  )
+ ( tagtrans
  .   (ambig,(pru.una))
      ( facet
      , ( (lem*pos^DSL*seg*tok.OnE)
        . lem*pos^Menota*seg*tok
        )
      )
      (format,(json.json))
      (lang,(da.da))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( tagtrans
  .   (facet,(lem*pos^DSL.pos^Menota))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( tagtrans
  .   ( facet
      , ( lem*mrf^Uni*pos^Uni
        . mrf^Menota*pos^Menota
        )
      )
      (format,(json.json))
      (lang,(la.la))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( tagtrans
  .   ( facet
      , ( lem*mrf^Uni*pos^Uni
        . mrf^Menota*pos^Menota
        )
      )
      (format,(teip5.teip5))
      (lang,(la.la))
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( tagtrans
  .   (facet,(mrf^Uni*pos^Uni*tok.pos^Par))
      (format,(json.json))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( tagtrans
  .   (facet,(mrf^Uni*pos^Uni*tok.pos^Par))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( tei2conll
  .   ( facet
      ,   ( (lem*mrf*pos*seg*stx*tok.OnE)
          . lem*mrf*pos*seg*stx*tok
          )
        + ( (lem*pos*seg*stx*tok.OnE)
          . lem*pos*seg*stx*tok
          )
      )
      (format,(teip5.conll^clU))
      (pres,(inl.nml))
  )
+ ( tei2conll
  .   ( facet
      , ( (lem*mrf*ner*pos*seg*stx*tok.OnE)
        . lem*mrf*ner*pos*seg*stx*tok
        )
      )
      (format,(teip5.conll^clU))
      (pres,(inl.nml))
  )
+ ( teianno2orgmode
  .   ( facet
      ,   (lem*tok.lem*tok)
        + (mrf^Menota*tok.mrf^Menota*tok)
        + (pos^Menota*tok.pos^Menota*tok)
      )
      (format,(teip5.dipl))
      (pres,(sof.nml))
  )
+ ( teitok
  .   (app,(nrm.nrm)+(unn.unn))
      (facet,(txt.seg*tok))
      (format,(teip5.teip5))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.sof))
      (sml,(TXT+sml.TOK))
  )
+ ( teitok
  .   (app,(nrm.nrm)+(unn.unn))
      (facet,(txt.seg*tok))
      (format,(teip5.teip5))
      (pres,(nml.sof))
      (sml,(TXT+sml.TOK))
  )
+ ( toks
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,((seg*tok.OnE).tok))
      (format,(teip5.teip5))
      ( lang
      ,   (af.af)
        + (ar.ar)
        + (ast.ast)
        + (be.be)
        + (bg.bg)
        + (bs.bs)
        + (ca.ca)
        + (cop.cop)
        + (cs.cs)
        + (cy.cy)
        + (de.de)
        + (el.el)
        + (en.en)
        + (eo.eo)
        + (es.es)
        + (et.et)
        + (eu.eu)
        + (fa.fa)
        + (fi.fi)
        + (fo.fo)
        + (fr.fr)
        + (ga.ga)
        + (gd.gd)
        + (gl.gl)
        + (gml.gml)
        + (got.got)
        + (gv.gv)
        + (he.he)
        + (hi.hi)
        + (hr.hr)
        + (hu.hu)
        + (hy.hy)
        + (id.id)
        + (is.is)
        + (it.it)
        + (ja.ja)
        + (ka.ka)
        + (kn.kn)
        + (ko.ko)
        + (ku.ku)
        + (la.la)
        + (lt.lt)
        + (lv.lv)
        + (mk.mk)
        + (ml.ml)
        + (mr.mr)
        + (mt.mt)
        + (nb.nb)
        + (nl.nl)
        + (nn.nn)
        + (no.no)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (se.se)
        + (sk.sk)
        + (sl.sl)
        + (sq.sq)
        + (sr.sr)
        + (sv.sv)
        + (sw.sw)
        + (ta.ta)
        + (te.te)
        + (tr.tr)
        + (ug.ug)
        + (uk.uk)
        + (ur.ur)
        + (vi.vi)
        + (wo.wo)
        + (zh.zh)
      )
      (pres,(sof.sof))
  )
+ ( toks
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,((seg*tok.OnE).tok))
      (format,(teip5.teip5))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(sof.sof))
  )
+ ( toksent
  .   (facet,(etc.sent+tok))
      (format,(teip5.teip5^one))
      (lang,(en.en))
      (pres,(inl.sof))
  )
+ ( toksent
  .   (facet,(etc.sent+tok))
      (format,(teip5.teip5^one))
      (pres,(inl.sof))
  )
+ ( udpipe
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf^Uni*pos^Uni*stx))
      (format,(teip5.teip5))
      ( lang
      ,   (af.af)
        + (ar.ar)
        + (be.be)
        + (bg.bg)
        + (ca.ca)
        + (cop.cop)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (el.el)
        + (en.en)
        + (es.es)
        + (et.et)
        + (eu.eu)
        + (fa.fa)
        + (fi.fi)
        + (fr.fr)
        + (ga.ga)
        + (gd.gd)
        + (gl.gl)
        + (got.got)
        + (he.he)
        + (hi.hi)
        + (hr.hr)
        + (hu.hu)
        + (hy.hy)
        + (id.id)
        + (it.it)
        + (ja.ja)
        + (ko.ko)
        + (la.la)
        + (lt.lt)
        + (lv.lv)
        + (mr.mr)
        + (mt.mt)
        + (nb.nb)
        + (nl.nl)
        + (nn.nn)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (se.se)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (ta.ta)
        + (te.te)
        + (tr.tr)
        + (ug.ug)
        + (uk.uk)
        + (ur.ur)
        + (vi.vi)
        + (wo.wo)
        + (zh.zh)
      )
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( udpipe
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf^Uni*pos^Uni*stx))
      (format,(teip5.teip5))
      ( lang
      ,   (cu.cu)
        + (fr.fr)
        + (la.la)
        + (ru.ru)
        + (zh.zh)
      )
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( udpipe
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf^Uni*pos^Uni*stx))
      (format,(teip5.teip5))
      (lang,(el.el)+(la.la))
      (period,(c1.c1))
      (pres,(sof.sof))
  )
+ ( udpipe2
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf^Uni*pos^Uni*stx))
      (format,(teip5.teip5))
      ( lang
      ,   (af.af)
        + (ar.ar)
        + (be.be)
        + (bg.bg)
        + (ca.ca)
        + (cop.cop)
        + (cs.cs)
        + (cy.cy)
        + (da.da)
        + (de.de)
        + (el.el)
        + (en.en)
        + (es.es)
        + (et.et)
        + (eu.eu)
        + (fa.fa)
        + (fi.fi)
        + (fo.fo)
        + (fr.fr)
        + (ga.ga)
        + (gd.gd)
        + (gl.gl)
        + (got.got)
        + (he.he)
        + (hi.hi)
        + (hr.hr)
        + (hu.hu)
        + (hy.hy)
        + (hyw.hyw)
        + (id.id)
        + (is.is)
        + (it.it)
        + (ja.ja)
        + (ko.ko)
        + (la.la)
        + (lt.lt)
        + (lv.lv)
        + (mr.mr)
        + (mt.mt)
        + (nl.nl)
        + (no.no)
        + (pcm.pcm)
        + (pl.pl)
        + (pt.pt)
        + (qpm.qpm)
        + (qtd.qtd)
        + (ro.ro)
        + (ru.ru)
        + (se.se)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (ta.ta)
        + (te.te)
        + (tr.tr)
        + (ug.ug)
        + (uk.uk)
        + (ur.ur)
        + (vi.vi)
        + (wo.wo)
        + (zh.zh)
      )
      (period,(c21.c21))
      (pres,(sof.sof))
  )
+ ( udpipe2
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf^Uni*pos^Uni*stx))
      (format,(teip5.teip5))
      ( lang
      ,   (cu.cu)
        + (fr.fr)
        + (la.la)
        + (ru.ru)
        + (zh.zh)
      )
      (period,(c13.c13))
      (pres,(sof.sof))
  )
+ ( udpipe2
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf^Uni*pos^Uni*stx))
      (format,(teip5.teip5))
      (lang,(el.el)+(la.la)+(sa.sa))
      (period,(c1.c1))
      (pres,(sof.sof))
  )
+ ( vujiloX
  .   (ambig,(una.una))
      (app,(unn.nrm))
      (facet,((seg*tok.OnE).seg*tok))
      (format,(flat.flat))
      (lang,(la.la))
      (period,(c1.c1)+(c13.c13))
  )
+ ( vujiloX
  .   (app,(unn.nrm))
      (facet,((seg*tok.OnE).seg*tok))
      (format,(teip5.teip5))
      (lang,(la.la))
      (period,(c1.c1)+(c13.c13))
      (pres,(sof.sof))
  );
vidStyles=
  ("MPEG-1 video with multiplexed audio".mpeg.)
  ("MP4 video".mp4.)
  ("Ogg Theora or other video (with audio)".ogg.)
  ("QuickTime video".quicktime.)
  ("WebM Matroska-based open media format".webm.)
  ("Matroska open media format".x-matroska.)
  ("Windows Media Video".x-ms-wmv.)
  ("Flash video (FLV files)".x-flv.);
vulticuli=
  (roman roman.rom.)
  (blackletter gotisk.got.)
  ("blackletter w. ø" "gotisk m. ø".gotd.)
  (OCR.ocr.)
  (unnormalised ikke-normaliseret.unn.)
  (normalised normaliseret.nrm.)
  ("optimized for software" "bedst for programmer".drty.)
  ("pretty printed" "nydelig opsætning".prtty.);
where=
  (AAA changelog footer where feedback./)
  (   CTBs
      jobAbout
      jobNr
      jobs
      Uploads
      zippedresults
      ItemGroupsCache
      recentTasks
      wrkflws
  . job/
  )
  (   features
      HTTP-status-codes
      ISO-639
      tooladm
      toolprop
      UIlanguage
      SuperSets
      CC
      DK-CLARIN-metadata
      ParlaMintMetadata
      Typeface
      properties
  . meta/
  )
  (   facets
      fileFormats
      linguae
      periods
      presentations
      vulticuli
      ambiguity
      smell
  . meta/feature/
  )
  (   annotationStyles
      conllStyles
      flatFileTypes
      htmlStyles
      imageStyles
      jsonStyles
      morfSets
      sndStyles
      tagSets
      tokenisationStyles
      vidStyles
  . meta/style/
  );
wrkflws=
;
zippedresults=
;
