AAA=
"alltables.bra";
CTBs=
;
HTTP-status-codes=
  ( 100
  . Continue
  . "This means that the server has received the request headers, and that the client should proceed to send the request body (in the case of a request for which a body needs to be sent; for example, a POST request). If the request body is large, sending it to a server when a request has already been rejected based upon inappropriate headers is inefficient. To have a server check if the request could be accepted based on the request's headers alone, a client must send Expect: 100-continue as a header in its initial request and check if a 100 Continue status code is received in response before continuing (or receive 417 Expectation Failed and not continue)."
  )
  ( 101
  . "Switching Protocols"
  . "This means the requester has asked the server to switch protocols and the server is acknowledging that it will do so."
  )
  ( 102
  . "Processing (WebDAV) (RFC 2518)"
  . "As a WebDAV request may contain many sub-requests involving file operations, it may take a long time to complete the request. This code indicates that the server has received and is processing the request, but no response is available yet. This prevents the client from timing out and assuming the request was lost."
  )
  ( 200
  . OK
  . "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
  )
  ( 201
  . Created
  . "The request has been fulfilled and resulted in a new resource being created."
  )
  ( 202
  . Accepted
  . "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
  )
  ( 203
  . "Non-Authoritative Information (since HTTP/1.1)"
  . "The server successfully processed the request, but is returning information that may be from another source."
  )
  ( 204
  . "No Content"
  . "The server successfully processed the request, but is not returning any content."
  )
  ( 205
  . "Reset Content"
  . "The server successfully processed the request, but is not returning any content. Unlike a 204 response, this response requires that the requester reset the document view."
  )
  ( 206
  . "Partial Content"
  . "The server is delivering only part of the resource due to a range header sent by the client. The range header is used by tools like wget to enable resuming of interrupted downloads, or split a download into multiple simultaneous streams."
  )
  ( 207
  . "Multi-Status (WebDAV) (RFC 4918)"
  . "The message body that follows is an XML message and can contain a number of separate response codes, depending on how many sub-requests were made."
  )
  ( 300
  . "Multiple Choices"
  . "Indicates multiple options for the resource that the client may follow. It, for instance, could be used to present different format options for video, list files with different extensions, or word sense disambiguation."
  )
  ( 301
  . "Moved Permanently"
  . "This and all future requests should be directed to the given URI."
  )
  ( 302
  . Found
  . "This is the most popular redirect code, but also an example of industrial practice contradicting the standard. HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302 with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307 to distinguish between the two behaviours. However, the majority of Web applications and frameworks still use the 302 status code as if it were the 303."
  )
  ( 303
  . "See Other (since HTTP/1.1)"
  . "The response to the request can be found under another URI using a GET method. When received in response to a PUT, it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
  )
  ( 304
  . "Not Modified"
  . "Indicates the resource has not been modified since last requested. Typically, the HTTP client provides a header like the If-Modified-Since header to provide a time against which to compare. Using this saves bandwidth and reprocessing on both the server and client, as only the header data must be sent and received in comparison to the entirety of the page being re-processed by the server, then sent again using more bandwidth of the server and client."
  )
  ( 305
  . "Use Proxy (since HTTP/1.1)"
  . "Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons."
  )
  (306."Switch Proxy"."No longer used.")
  ( 307
  . "Temporary Redirect (since HTTP/1.1)"
  . "In this occasion, the request should be repeated with another URI, but future requests can still use the original URI. In contrast to 303, the request method should not be changed when reissuing the original request. For instance, a POST request must be repeated using another POST request."
  )
  (400."Bad Request"."The request cannot be fulfilled due to bad syntax.")
  ( 401
  . Unauthorized
  . "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource. See Basic access authentication and Digest access authentication."
  )
  ( 402
  . "Payment Required"
  . "Reserved for future use. The original intention was that this code might be used as part of some form of digital cash or micropayment scheme, but that has not happened, and this code is not usually used. As an example of its use, however, Apple's MobileMe service generates a 402 error (\"httpStatusCode:402\" in the Mac OS X Console log) if the MobileMe account is delinquent."
  )
  ( 403
  . Forbidden
  . "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
  )
  ( 404
  . "Not Found"
  . "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
  )
  ( 405
  . "Method Not Allowed"
  . "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
  )
  ( 406
  . "Not Acceptable"
  . "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
  )
  (407."Proxy Authentication Required".)
  ( 408
  . "Request Timeout"
  . "The server timed out waiting for the request. According to W3 HTTP specifications: \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\""
  )
  ( 409
  . Conflict
  . "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
  )
  ( 410
  . Gone
  . "Indicates that the resource requested is no longer available and will not be available again. This should be used when a resource has been intentionally removed; however, it is not necessary to return this code and a 404 Not Found can be issued instead. However, despite the most common status code for such a page being 404 Not Found, 410 Gone is still used by some servers. Upon receiving a 410 status code, the client should not request the resource again in the future. Clients such as search engines should remove the resource from their indices."
  )
  ( 411
  . "Length Required"
  . "The request did not specify the length of its content, which is required by the requested resource."
  )
  ( 412
  . "Precondition Failed"
  . "The server does not meet one of the preconditions that the requester put on the request."
  )
  ( 413
  . "Request Entity Too Large"
  . "The request is larger than the server is willing or able to process."
  )
  ( 414
  . "Request-URI Too Long"
  . "The URI provided was too long for the server to process."
  )
  ( 415
  . "Unsupported Media Type"
  . "The request entity has a media type which the server or resource does not support. For example the client uploads an image as image/svg+xml, but the server requires that images use a different format."
  )
  ( 416
  . "Requested Range Not Satisfiable"
  . "The client has asked for a portion of the file, but the server cannot supply that portion. For example, if the client asked for a part of the file that lies beyond the end of the file."
  )
  ( 417
  . "Expectation Failed"
  . "The server cannot meet the requirements of the Expect request-header field."
  )
  ( 418
  . "I'm a teapot"
  . "This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol, and is not expected to be implemented by actual HTTP servers."
  )
  ( 422
  . "Unprocessable Entity (WebDAV) (RFC 4918)"
  . "The request was well-formed but was unable to be followed due to semantic errors."
  )
  ( 423
  . "Locked (WebDAV) (RFC 4918)"
  . "The resource that is being accessed is locked"
  )
  ( 424
  . "Failed Dependency (WebDAV) (RFC 4918)"
  . "The request failed due to failure of a previous request (e.g. a PROPPATCH)."
  )
  ( 425
  . "Unordered Collection (RFC 3648)"
  . "Defined in drafts of \"WebDAV Advanced Collections Protocol\", but not present in \"Web Distributed Authoring and Versioning (WebDAV) Ordered Collections Protocol\"."
  )
  ( 426
  . "Upgrade Required (RFC 2817)"
  . "The client should switch to a different protocol such as TLS/1.0."
  )
  ( 449
  . "Retry With"
  . "A Microsoft extension. The request should be retried after performing the appropriate action."
  )
  ( 450
  . "Blocked by Windows Parental Controls"
  . "A Microsoft extension. This error is given when Windows Parental Controls are turned on and are blocking access to the given webpage."
  )
  ( 500
  . "Internal Server Error"
  . "A generic error message, given when no more specific message is suitable."
  )
  ( 501
  . "Not Implemented"
  . "The server either does not recognise the request method, or it lacks the ability to fulfill the request."
  )
  ( 502
  . "Bad Gateway"
  . "The server was acting as a gateway or proxy and received an invalid response from the upstream server."
  )
  ( 503
  . "Service Unavailable"
  . "The server is currently unavailable (because it is overloaded or down for maintenance). Generally, this is a temporary state."
  )
  ( 504
  . "Gateway Timeout"
  . "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server."
  )
  ( 505
  . "HTTP Version Not Supported"
  . "The server does not support the HTTP protocol version used in the request."
  )
  ( 506
  . "Variant Also Negotiates (RFC 2295)"
  . "Transparent content negotiation for the request results in a circular reference."
  )
  (507."Insufficient Storage (WebDAV) (RFC 4918)".)
  ( 509
  . "Bandwidth Limit Exceeded (Apache bw/limited extension)"
  . "This status code, while used by many servers, is not specified in any RFCs."
  )
  (510."Not Extended (RFC 2774)".);
ISO-639=
  aar
  aa
  abk
  ab
  ace
  ach
  ada
  ady
  afa
  afh
  afr
  af
  ain
  aka
  ak
  akk
  alb
  sqi
  sq
  ale
  alg
  alt
  amh
  am
  ang
  anp
  apa
  ara
  ar
  arc
  arg
  an
  arm
  hye
  hy
  arn
  arp
  art
  arw
  asm
  as
  ast
  ath
  aus
  ava
  av
  ave
  ae
  awa
  aym
  ay
  aze
  az
  bad
  bai
  bak
  ba
  bal
  bam
  bm
  ban
  baq
  eus
  eu
  bas
  bat
  bej
  bel
  be
  bem
  ben
  bn
  ber
  bho
  bih
  bh
  bik
  bin
  bis
  bi
  bla
  bnt
  tib
  bod
  bo
  bos
  bs
  bra
  bre
  br
  btk
  bua
  bug
  bul
  bg
  bur
  mya
  my
  byn
  cad
  cai
  car
  cat
  ca
  cau
  ceb
  cel
  cze
  ces
  cs
  cha
  ch
  chb
  che
  ce
  chg
  chi
  zho
  zh
  chk
  chm
  chn
  cho
  chp
  chr
  chu
  cu
  chv
  cv
  chy
  cmc
  cop
  cor
  kw
  cos
  co
  cpe
  cpf
  cpp
  cre
  cr
  crh
  crp
  csb
  cus
  wel
  cym
  cy
  cze
  ces
  cs
  dak
  dan
  da
  dar
  day
  del
  den
  ger
  deu
  de
  dgr
  din
  div
  dv
  doi
  dra
  dsb
  dua
  dum
  dut
  nld
  nl
  dyu
  dzo
  dz
  efi
  egy
  eka
  gre
  ell
  el
  elx
  eng
  en
  enm
  epo
  eo
  est
  et
  baq
  eus
  eu
  ewe
  ee
  ewo
  fan
  fao
  fo
  per
  fas
  fa
  fat
  fij
  fj
  fil
  fin
  fi
  fiu
  fon
  fre
  fra
  fr
  fre
  fra
  fr
  frm
  fro
  frr
  frs
  fry
  fy
  ful
  ff
  fur
  gaa
  gay
  gba
  gem
  geo
  kat
  ka
  ger
  deu
  de
  gez
  gil
  gla
  gd
  gle
  ga
  glg
  gl
  glv
  gv
  gmh
  goh
  gon
  gor
  got
  grb
  grc
  gre
  ell
  el
  grn
  gn
  gsw
  guj
  gu
  gwi
  hai
  hat
  ht
  hau
  ha
  haw
  heb
  he
  her
  hz
  hil
  him
  hin
  hi
  hit
  hmn
  hmo
  ho
  hrv
  hr
  hsb
  hun
  hu
  hup
  arm
  hye
  hy
  iba
  ibo
  ig
  ice
  isl
  is
  ido
  io
  iii
  ii
  ijo
  iku
  iu
  ile
  ie
  ilo
  ina
  ia
  inc
  ind
  id
  ine
  inh
  ipk
  ik
  ira
  iro
  ice
  isl
  is
  ita
  it
  jav
  jv
  jbo
  jpn
  ja
  jpr
  jrb
  kaa
  kab
  kac
  kal
  kl
  kam
  kan
  kn
  kar
  kas
  ks
  geo
  kat
  ka
  kau
  kr
  kaw
  kaz
  kk
  kbd
  kha
  khi
  khm
  km
  kho
  kik
  ki
  kin
  rw
  kir
  ky
  kmb
  kok
  kom
  kv
  kon
  kg
  kor
  ko
  kos
  kpe
  krc
  krl
  kro
  kru
  kua
  kj
  kum
  kur
  ku
  kut
  lad
  lah
  lam
  lao
  lo
  lat
  la
  lav
  lv
  lez
  lim
  li
  lin
  ln
  lit
  lt
  lol
  loz
  ltz
  lb
  lua
  lub
  lu
  lug
  lg
  lui
  lun
  luo
  lus
  mac
  mkd
  mk
  mad
  mag
  mah
  mh
  mai
  mak
  mal
  ml
  man
  mao
  mri
  mi
  map
  mar
  mr
  mas
  may
  msa
  ms
  mdf
  mdr
  men
  mga
  mic
  min
  mis
  mac
  mkd
  mk
  mkh
  mlg
  mg
  mlt
  mt
  mnc
  mni
  mno
  moh
  mon
  mn
  mos
  mao
  mri
  mi
  may
  msa
  ms
  mul
  mun
  mus
  mwl
  mwr
  bur
  mya
  my
  myn
  myv
  nah
  nai
  nap
  nau
  na
  nav
  nv
  nbl
  nr
  nde
  nd
  ndo
  ng
  nds
  nep
  ne
  new
  nia
  nic
  niu
  dut
  nld
  nl
  nno
  nn
  nob
  nb
  nog
  non
  nor
  no
  nqo
  nso
  nub
  nwc
  nya
  ny
  nym
  nyn
  nyo
  nzi
  oci
  oc
  oji
  oj
  ori
  or
  orm
  om
  osa
  oss
  os
  ota
  oto
  paa
  pag
  pal
  pam
  pan
  pa
  pap
  pau
  peo
  per
  fas
  fa
  phi
  phn
  pli
  pi
  pol
  pl
  pon
  por
  pt
  pra
  pro
  pus
  ps
  qaa-qtz
  que
  qu
  raj
  rap
  rar
  roa
  roh
  rm
  rom
  rum
  ron
  ro
  rum
  ron
  ro
  run
  rn
  rup
  rus
  ru
  sad
  sag
  sg
  sah
  sai
  sal
  sam
  san
  sa
  sas
  sat
  scn
  sco
  sel
  sem
  sga
  sgn
  shn
  sid
  sin
  si
  sio
  sit
  sla
  slo
  slk
  sk
  slo
  slk
  sk
  slv
  sl
  sma
  sme
  se
  smi
  smj
  smn
  smo
  sm
  sms
  sna
  sn
  snd
  sd
  snk
  sog
  som
  so
  son
  sot
  st
  spa
  es
  alb
  sqi
  sq
  srd
  sc
  srn
  srp
  sr
  srr
  ssa
  ssw
  ss
  suk
  sun
  su
  sus
  sux
  swa
  sw
  swe
  sv
  syc
  syr
  tah
  ty
  tai
  tam
  ta
  tat
  tt
  tel
  te
  tem
  ter
  tet
  tgk
  tg
  tgl
  tl
  tha
  th
  tib
  bod
  bo
  tig
  tir
  ti
  tiv
  tkl
  tlh
  tli
  tmh
  tog
  ton
  to
  tpi
  tsi
  tsn
  tn
  tso
  ts
  tuk
  tk
  tum
  tup
  tur
  tr
  tut
  tvl
  twi
  tw
  tyv
  udm
  uga
  uig
  ug
  ukr
  uk
  umb
  und
  urd
  ur
  uzb
  uz
  vai
  ven
  ve
  vie
  vi
  vol
  vo
  vot
  wak
  wal
  war
  was
  wel
  cym
  cy
  wen
  wln
  wa
  wol
  wo
  xal
  xho
  xh
  yao
  yap
  yid
  yi
  yor
  yo
  ypk
  zap
  zbl
  zen
  zgh
  zha
  za
  chi
  zho
  zh
  znd
  zul
  zu
  zun
  zxx
  zza;
ItemGroupsCache=
;
SuperSets=
  facet
.   ( pos
    .   cls*pos*seg
        pos*seg*tok
        lem*mrf*pos*tok
        lem*mrf*ner*pos*tok
        lem*pos*seg*tok
        cls*lem*pos*seg*tok
        pos*seg*stx*tok
    )
    (ner.ner*seg*tok)
    ( lem
    .   lem*seg
        lem*tok
        lem*mrf*pos*tok
        lem*mrf*ner*pos*tok
        lem*seg*tok
        lem*pos*seg*tok
        cls*lem*pos*seg*tok
    )
    (cls.cls*lem*pos*seg*tok)
    ( stx
    .   pos*seg*stx*tok
        pls
        lem*mrf*pos*stx
        lem*pos*seg*stx*tok
        lem*mrf*pos*seg*stx*tok
        lem*mrf*ner*pos*seg*stx*tok
    )
    (tok.seg*tok ner*seg*tok)
    (seg.seg*tok)
    ( mrf
    .   lem*mrf*pos*stx
        lem*mrf*pos*seg*stx*tok
        lem*mrf*pos*tok
        lem*mrf*ner*pos*tok
    )
    ( par
    .   par*seg*tok
        par*seg
        lem*par*seg
        lem*par*seg*tok
        par*pos*seg*tok
        lem*par*pos*seg*tok
        lem*ner*par*pos*seg*tok
    );
TEImetadata=
  ( id
  . "Text in UI" "Tekst i grænsefladen"
  . "Required r / optional o / automatic a / zeroOrMore / oneOrMore"
  . "line / lines / box / empty"
  . "Placering i header"
  . Noter
  . "Help text" Hjælpetekst
  . pattern
  . URL
  )
  ( "Source text:" "Kildetekst:"
  ,   ( fsbat
      . "Work title" Værktitel
      . r
      . line
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          biblStruct
          analytic
          title
      . 
      .   "Title of the physical work. If the work exists only in a digital version, the title of the digital work must be stated here"
          "Værkets titel. Hvis værket kun findes i en digital version, skal værkets digitale titel skrives her"
      . 
      . 
      )
      ( fsbmt
      .   "Title of larger work (if work to be stored is part of this larger work)"
          "Titel på større værk (hvis værk er en del af dette større værk)"
      . r
      . line
      . TEI teiHeader fileDesc sourceDesc biblStruct monogr title
      . 
      .   "If the work described in this record is part of a larger work then the title of the larger work is given here. Otherwise just state the Work title here."
          "Hvis værket er en del af et større værk, angives titlen på det større værk her, ellers angives blot Værktitel"
      . 
      . 
      )
      ( fsbaan
      . Author Forfatter
      . oneOrMore
      . lines
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          biblStruct
          analytic
          author
          name
      . 
      .   "Author name(s), personal or corporate, of a work; can be in bibliographic format"
          "forfatternavn(e) (personnavn eller institutionssnavn), kan være i bibliografisk format"
      . 
      . 
      )
      ( fsbmip
      . Publisher Udgiver
      . o
      . line
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          biblStruct
          monogr
          imprint
          publisher
      . 
      .   "Name of the organization responsible for the publication or distribution of a bibliographic item"
          "Navn på institution ansvarlig for publicering eller distribution af en bibliografisk enhed"
      . 
      . 
      )
      ( fsbmidw
      . "Publishing date" Udgivelsesdato
      . o
      . line
      .   TEI
          teiHeader
          fileDesc
          sourceDesc
          biblStruct
          monogr
          imprint
          (date.when)
      . 
      .   "Publication date in format yyyy-mm-dd or yyyy"
          "Udgivelsesdato i formatet yyyy-mm-dd eller yyyy"
      . DATE
      . 
      )
      ( pcdw
      . "Date of work creation" "Dato for værkets tilblivelse"
      . o
      . line
      . TEI teiHeader profileDesc creation (date.when)
      . "If the date of text creation is not known, it can be set to the same value as \"Udgivelsesdato\", or left empty"
      .   "Work creation date in format yyyy-mm-dd or yyyy"
          "Dato for værkets tilblivelse i formatet yyyy-mm-dd eller yyyy"
      . DATE
      . 
      )
      ( pll
      . Language Sprog
      . r
      . line
      . TEI teiHeader profileDesc langUsage language
      . 
      .   "A single language or sublanguage used within the work e.g., da, en, de, la, no (ISO 639-1 2-character codes)"
          "Et enkelt sprog eller subsprog anvendt i værket; fx da, en, de, la, no (ISO 639-1 2-bogstavskoder)"
      . ISO639
      . 
      )
      ( ptd
      . Subject Domæne
      . o
      . line
      . TEI teiHeader profileDesc textDesc domain
      . "subject, eksempler gives i hjælpetekst"
      .   "Topic of the ressource. Typically, the subject will be represented using keywords, key phrases, or classification codes. Recommended best practice is to use a classification system, e.g.  \"kommunikation (DK5-19.5)\", \"kristendom (DK5-20)\""
          "Resursens emne. Domænet bør repræsenteres af et nøgleord eller en klassifikationskode. Best practice er at anvende et etableret klassifikationssystem fx: kommunikation (DK5-19.5), kristendom (DK5-20)"
      . 
      . "info.clarin.dk/kom-godt-i-gang/emner/"
      )
  )
  ( "Digital version of the resource" "Elektroniske version:"
  ,   ( ftt
      . "Digital work title" "Titel på digitalt værk"
      . r
      . line
      . TEI teiHeader fileDesc titleStmt title
      . 
      .   "Title of the digital work can be equal to \"Title for this work\" if the work is created as a digital resource"
          "Titel på det digitale værk evt. = værktitel hvis resursen er skabt elektronisk"
      . 
      . 
      )
      ( ftrnn
      .   "The responsible party for creation of the digital version"
          "Den ansvarlige for skabelsen af den digitale version"
      . oneOrMore
      . lines
      . TEI teiHeader fileDesc titleStmt respStmt name name
      . "teiHeader.fileDesc.titleStmt.respStmt.name skal kunne gentages (dvs både inderste <name> (fra indtastning) og <note> (genereret))"
      .   "The responsible person or organisation is the author if the resource is originally created as an electronic work or the person who created the electronic version or the person who created the conversion"
          "Den ansvarlige person eller organisation er forfatteren hvis resursen er skabt elektronisk, eller den person der har skabt den elektroniske version, eller den der foretager denne konvertering"
      . 
      . 
      )
      ( fpd
      .   "The responsible party  for distribution of the digital version"
          "Den ansvarlige for distribution af den digitale version"
      . oneOrMore
      . lines
      . TEI teiHeader fileDesc publicationStmt distributor
      . 
      .   "The name of the person or the organization responsible for the distribution of the digital work"
          "Navn på person eller organisation ansvarlig for distribution af digitalt værk"
      . 
      . 
      )
      ( fts
      . Sponsor Sponsor
      . zeroOrMore
      . lines
      . TEI teiHeader fileDesc titleStmt sponsor
      . "Skal kunne indeholde flere navne"
      .   "Name(s) of sponsoring organization(s)/institution(s), project or grant"
          "Navn(e) på sponsorerende organisation(er)/institution(er), projekt eller bevilling"
      . 
      . 
      )
      ( ftrndw
      . "Conversion date" Konverteringsdato
      . a
      . 
      .   TEI
          teiHeader
          fileDesc
          titleStmt
          respStmt
          name
          (date.when)
      . 
      .   "Date when digital version of work is created in format yyyy-mm-dd or yyyy"
          "Dato for digital version af værket  i formatet yyyy-mm-dd eller yyyy"
      . DATE
      . 
      )
      ( fnn
      . Description Beskrivelse
      . r
      . box
      . TEI teiHeader fileDesc notesStmt note
      . "Feltet skal lægge op til en lidt længere beskrivelse"
      .   "An account of the resource -.contents of this field may include but are not limited to: an abstract, a table of contents, or a free-text account of the resource"
          "En beskrivelse af resursen som kan inkludere et sammendrag, en indholdsfortegnelse eller en tekstbeskrivelse af resursen"
      . 
      . 
      )
      ( fen
      . Size Størrelse
      . a
      . line
      . TEI teiHeader fileDesc extent num
      . "Automatisk optælling, vi skal nok tale om den"
      .   "Size of a work specified in any convenient units."
          "værkets størrelse; størrelsen angives i passende enheder"
      . 
      . 
      )
      ( fpi
      . Identifier Id
      . a o
      . line
      . TEI teiHeader fileDesc publicationStmt idno
      . "Genereres automatisk hvis bruger ikke skriver noget"
      .   "An identifier the object already has, such as a bibliographic id"
          "Objektets id; kan fx være et bibliografisk id"
      . 
      . 
      )
      ( eaa
      . 
      . a
      . 
      . TEI teiHeader encodingDesc appInfo application
      . 
      . 
      . 
      . 
      )
      ( pcdc
      . 
      . a
      . 
      . TEI teiHeader profileDesc creation (date.cert)
      . "default til værdi=\"high\""
      . 
      . 
      . 
      )
  );
Typeface=
"Comic Sans MS";
UIlanguage=
en da;
Uploads=
;
Workflows=
    (Ifacet.txt)
    (Iformat.pdf)
    (Ofacet.tok)
    (Oformat.flat)
. ( (facet,tok) (format,flat)
  .   CST-RTFread
    , (   (facet,tok)
          (format,flat)
          (lang,en)
          (pres,nml)
      .   (facet,txt^ocr)
          (format,flat)
          (lang,en)
          (pres,nml)
      .   (facet,txt^ocr)
          (format,flat)
          (lang,en)
          (pres,nml)
      .   pdfminer
        , (   (facet,txt^ocr)
              (format,flat)
              (lang,en)
              (pres,nml)
          .   (facet,txt^ocr)
              (format,pdf)
              (lang,en)
              (pres,nml)
          .   (facet,txt)
              (format,pdf)
              (lang,en)
              (pres,nml)
          )
      )
  )
. "DASISH cleaning workflow, flat text input, TEIP5DKCLARIN output";
ambiguity=
  (unambiguous utvetydig.una.)
  (ambiguous tvetydig.amb.)
  (pruned beskåret.pru.);
annotationStyles=
("id: not disclosed".one.) ("id: i#.# (sentence.token)".two.);
basistextStyles=
  ("xml:id=\"i#.#\"".cst.)
  ("xml:id=\"...#-#\"".dsl.)
  ("xml:id=\"...#\"".nor.)
  ("no xml:id".raw.);
changelog=
  ( 20220114
  . workflow computation
  .   "The drop down lists on the source/goal specification page are cached and not recomputed if present in cache."
      "Valglisterne på input/mål specifikationssiden bliver midlertidigt gemt i stedet for genberegnet."
  )
  ( 20220112
  . infrastructure
  . "log4j 2.16.0 -> 2.17.1"
  )
  ( 20211230b
  . workflow computation
  .   "Fixed a bug in memoizing workflows characterized by the last tool instead of the desired output."
      "Rettet fejl ifm. memoisering af arbejdsgange som er kendetegnet ved det sidste værktøj i stedet for den ønskede output."
  )
  ( 20211230a
  . workflow computation
  .   "Workflows that contain tool invocations that only are different at the subspecification level are pruned. For example, a workflow that uses the same tokeniser to tokenise the same text using different tokenisation styles, e.g. 'simple' and 'Penn Treebank'."
      "Arbejdsgange som aktiverer samme værktøjet på flere måder som kun er forskellige på subspecifikationsniveauet bliver ignoreret. Fx en tokeniser som skal tokenisere 'simpel' og ifølge Penn Treebank regler."
  )
  ( 20211220
  . infrastructure
  .   "The vulnerable log4j (logging for Java) libaries are replaced with safe(r) ones: version 2.16.0"
      "Den angrebsfølsomme log4j (Java logning) software er erstattet med forbedret version 2.16.0."
  )
  ( 20211203
  . tool
  .   "When asked for unambiguous output, CSTlemma still produced ambiguous output if it couldn't make up its mind. Now, if lemmas are equiprobable, CSTlemma chooses the first one."
      "Når man bestilte utvetydig output, ville CSTlemma alligevel tilbyde flere lemmaer hvis de var lige sandsynlige. Nu vælger CSTlemma at tilbyde det første i sådanne tilfælde."
  )
  (20211127.."Beginning of changelog." "Begyndelse af changelog.");
conllStyles=
  ("CoNLL 2009 (14 columns)" "CoNLL 2009 (14 kolonner)".cnl2009.)
  ("CoNLL-U (10 columns)" "CoNLL-U (10 kolonner)".clU.);
facets=
  (text "Ingen annotation".txt.)
  (paragraphs Paragrafsegmenter.par.)
  (sentences "Sætninger, før tokenisering".sent.)
  (segments Sætningssegmenter.seg.)
  (tokens Tokens.tok.)
  ("name entities" Navne.ner.)
  ("anonymized named entities".ano.)
  ("word class" ordklasse.cls.)
  (PoS-tags PoS-tags.pos.)
  (lemmas Lemma.lem.)
  ("noun phrases" "navnefraser (NP)".npr.)
  ("morphological features" "morfologiske træk".mrf.)
  (sentiment.snt.)
  ("syntax (dependency structure)" "Syntaks (dependensstruktur)".stx.)
  ("tagged terms" termer.trm.)
  (morphemes morfemer.wrdsplt.)
  ("repeated phrases" gentagelser.rep.)
  ("N-gram frequencies" "N-gram frekvenser".Ngram.)
  (keywords.key.)
  ("multiple word terms" flerordstermer.mwu.)
  (lexicon leksikon.lex.)
  ("head movements" hovedbevægelser.headmov.)
  ("keyword-in-context (KWIC)".kwic.);
features=
  ( (inDex.A)
    (name."Type of content" Annotationstyper)
    (short.facet)
    ( description
    .   "Subtype of resource, e.g. basis text, tokenisation, alphabetic list."
        "Subtype af resource, fx basistekst, tokens, alfabetisk liste."
    )
    (table.facets)
    (specificationTable.(pos.tagSets) (tok.tokenisationStyles))
    ( sourcehelp
    .   "The default type of content of the input is \"text\". Change it if necessary."
        "Normalt antager Text Tonsorium at inputtet ikke er annoteret. Ændr til en anden værdi om nødvendigt."
    )
    ( goalhelp
    .   "You fill this out in most use cases. Sometimes (e.g. if you are merely interested in a file format transformation), you choose the same value as in the input."
        "Udfyld i de fleste sammenhænge. Du kan nogle gange vælge samme værdi som i inputtet, fx når formålet er at transformere filformatet, men ikke indholdstypen."
    )
  )
+ ( (inDex.B)
    (name.Language Sprog)
    (short.lang)
    (description."Language of the text" "Sproget i teksten.")
    (table.linguae)
    ( sourcehelp
    .   "You can leave this as it is. It is better to indicate the language of the output."
        "Du må gerne angive inputtets sprog, men det er bedre at angive outputtets sprog."
    )
    ( goalhelp
    .   "You should almost always fill out this field. You can also specify the language of the input, if that has not been done automatically. If the output's language is specified, the computation of workflow candidates is speeded up and produces fewer candidates that you are not interested in."
        "Du bør næsten altid specificere outputtets sprog. Du kan også specificere inputtets sprog, hvis det ikke er gjort automatisk. Beregningen af workflowkandidater går hurtigere hvis outputtets sprog er specificeret og der vil være færre kandidater som du ikke er interesseret i."
    )
  )
+ ( (inDex.C)
    (name.Format)
    (short.format)
    ( description
    .   "The way that information is encoded for storage in a computer file."
        "Måden hvorpå information er lagret i en fil."
    )
    (table.fileFormats)
    ( specificationTable
    .   (conll.conllStyles)
        (flat.flatFileTypes)
        (html.htmlStyles)
        (txtbasis.basistextStyles)
        (txtann.annotationStyles)
        (img.imageStyles)
        (snd.sndStyles)
        (vid.vidStyles)
        (json.jsonStyles)
    )
    ( sourcehelp
    .   "Advice: do not change this field."
        "Det anbefales ikke at ændre i dette felt."
    )
    ( goalhelp
    .   "Fill this out if you are an experienced user. If left empty, the Text Tonsorium may produce myriads of workflow candidates. If you are not experienced yet, accept the waiting time for the workflow candidates to be computed, and have a look at the outputs from several workflow candidates until you find the output format that fits the bill."
        "Udfyld hvis du er en erfaren bruger. Hvis feltet står tomt er der risiko for at Text Tonsorium beregner utallige workflowkandidater. Hvis du er en begyndende bruger af Text Tonsorium, acceptér at du skal vente længere før alle workflowkandidater er beregnet, og afprøv nogle kandidater indtil du har fundet det filformat der passer bedst til dit behov."
    )
  )
+ ( (inDex.D)
    (name."Historical period" "Historisk periode")
    (short.period)
    ( description
    .   "Time period of the spelling in the text resource."
        "Tidsperiode hvori stavningen eller ortografien anvendt i teksten blev anvendt."
    )
    (table.periods)
    ( sourcehelp
    .   "Select a value if the input is in Danish or Latin."
        "Vælg en verdi hvis inputtet er på dansk eller latin."
    )
    ( goalhelp
    .   "Specify this field if you work with texts in Danish or Latin."
        "Fyld ud hvis du arbejder med tekster på dansk eller latin."
    )
  )
+ ( (inDex.E)
    (name.Assemblage Sammensætning)
    (short.pres)
    ( description
    .   "How results are presented for the user."
        "Måden hvorpå resultaterne præsenteres for brugeren."
    )
    (table.presentations)
    ( sourcehelp
    .   "Advice: Do not change this field."
        "Det anbefales ikke at lave om på dette felt"
    )
    ( goalhelp
    .   "Leave empty or choose 'normal'. Choose another value if you need sorted output. Most tools cannot sort data."
        "Lad feltet stå tomt eller vælg 'normal'. Vælg en anden værdi end 'normal' hvis outputtet skal være sorteret. Få værktøjer kan sortere data."
    )
  )
+ ( (inDex.F)
    (name.Appearance Udseende)
    (short.app)
    ( description
    .   "Decorative tradition, for example typeface class."
        "Dekorativ tradition, fx skrifttype."
    )
    (table.vulticuli)
    ( sourcehelp
    .   "Do not change this field, unless the input is an image of a text. In that case, choose blackletter or roman."
        "Ændr ikke dette felt, medmindre inputtet er et billede af tekst. I så fald vælger du gotisk eller roman."
    )
    ( goalhelp
    .   "You seldom need to fill this out. Try it, if you want."
        "Skal sjældent udfyldes. Prøv dig frem, hvis du vil."
    )
  )
+ ( (inDex.H)
    (name.Ambiguity Flertydighed)
    (short.ambig)
    ( description
    .   "Whether data contains ambiguous elements."
        "Til angivelse om data indeholder flertydige elementer."
    )
    (table.ambiguity)
    (sourcehelp."Do not change this field." "Ændr ikke dette felt.")
    ( goalhelp
    .   "It is normally not necessary to fill this out to start with. If you are confronted with too many workflow candidates, go back to this screen and specify an ambiguity level."
        "Det er normalt ikke nødvendigt at udfylde dette felt. Hvis der genereres for mange workflowkandidater, gå tilbage til dette skærm og specificér flertydighedsniveauet."
    )
  )
+ ( (inDex.I)
    (name.Smell Lugt)
    (short.sml)
    ( description
    . "Special feature used to give unique identity to input and intermediate data, for example output of OCR software."
    )
    (table.smell)
    (hide.y)
  );
fileFormats=
  ( plain flad
  . flat
  .   "Can be edited with a simple text editor like 'vi'."
      "Kan redigeres med en teksteditor som f.eks. 'vi'."
  )
  (RTF.rtf.)
  (PDF.pdf.)
  (HTML.html.)
  (XML.xm.)
  ( "Corpus Workbench (for CQP queries)"
  . vrt
  . "verticalized text, Corpus Workbench input format"
  )
  (CSV.csv.)
  (DOC.doc.)
  (DOCX.docx.)
  (ODF.odt.)
  (ODP.odp.)
  (ODS.ods.)
  (PPT.ppt.)
  (PPTX.pptx.)
  (XLS.xls.)
  (XLSX.xlsx.)
  (TEIP5.teip5.)
  ( TEIP5DKCLARIN
  . txtbasis
  .   "Can be viewed in a browser and edited with a text editor like 'vi' or with a XML editor like 'Oxygen' or Microsoft's 'Visual Studio'"
      "Du kan se indholdet i en browser og du kan redigere filen med en tekst editor som f.eks. 'vi' eller med en XML editor som f.eks. 'Oxygen' eller Microsofts 'Visual Studio'."
  )
  ( "TEIP5DKCLARIN_ANNOTATION"
  . txtann
  .   "Can be viewed in a browser and edited with a text editor like 'vi' or with a XML editor like 'Oxygen' or Microsoft's 'Visual Studio'"
      "Du kan se indholdet i en browser og du kan redigere filen med en tekst editor som f.eks. 'vi' eller med en XML editor som f.eks. 'Oxygen' eller Microsofts 'Visual Studio'."
  )
  (RDF.rdf.)
  (Anvil.anvil.)
  (image billede.img.)
  (audio.wav.)
  (video.vid.)
  (CoNLL.conll.)
  ("Penn Treebank".pt.)
  (JSON.json.)
  (Org-mode.dipl.)
  ( "plain text with ASCII 127 characters" "flad tekst with ASCII 127 tegn"
  . plainD
  . 
  )
  ("single-column list" "en kolonne".1col.)
  ("two-column list, tab separated" "to kolonner, tab separeret".2col.)
  ( "three-column list, tab separated" "tre kolonner, tab separeret"
  . 3col
  . 
  )
  ( "four-column list, tab separated" "fire kolonner, tab separeret"
  . 4col
  . 
  )
  (   "two-column list, tab separated, with empty lines"
      "to kolonner, tab separeret, med tomme linjer"
  . 2cole
  . 
  )
  (   "three-column list, tab separated, with empty lines"
      "tre kolonner, tab separeret, med tomme linjer"
  . 3cole
  . 
  )
  (   "four-column list, tab separated, with empty lines"
      "fire kolonner, tab separeret, med tomme linjer"
  . 4cole
  . 
  )
  (URL.url.);
flatFileTypes=
(Latin-1.latin1.) (UTF-8.utf8.);
footer=
;
htmlStyles=
  ( "Traditional tags (h, p, etc.)" "Med traditionelle tags (h, p, etc.)"
  . ROTM
  . 
  )
  ("Exact layout" layoutbevarende.pedantic.);
imageStyles=
  (GIF.gif.)
  ("JPEG JFIF".jpeg.)
  ("Progressive JPEG JFIF".pjpeg.)
  ("Portable Network Graphics".png.)
  (SVG.svg.)
  ("Tag Image File Format".tiff.)
  (ICO."vnd.microsoft.icon".)
  ("Image as PDF".pdf.);
jobAbout=
;
jobNr=
0;
jobs=
;
jsonStyles=
  ("No unique ID" "Ingen unik ID".nid.)
  ("With xml id" "Med xml id".xid.);
licences=
  (public.public)
  (academic.academic)
  (restricted.restricted);
linguae=
  (Abkhaz abkhasisk.ab.)
  (Afar afar.aa.)
  (Afrikaans afrikaans.af.)
  (Akan akan.ak.)
  (Albanian albansk.sq.)
  (Amharic amharisk.am.)
  (Arabic arabisk.ar.)
  (Aragonese aragonisk.an.)
  (Armenian armensk.hy.)
  (Assamese assamesisk.as.)
  (Avaric avarisk.av.)
  (Avestan avestisk.ae.)
  (Aymara aymara.ay.)
  (Azerbaijani aserbajdsjansk.az.)
  (Balochi balochi.bal.)
  (Bambara bambara.bm.)
  (Bashkir basjkirsk.ba.)
  (Basque baskisk.eu.)
  (Belarusian hviderussisk.be.)
  (Bengali bengali.bn.)
  (Bihari bihari.bh.)
  (Bislama bislama.bi.)
  (Bosnian bosnisk.bs.)
  (Breton bretonsk.br.)
  (Bulgarian bulgarsk.bg.)
  (Burmese burmesisk.my.)
  (Catalan katalansk.ca.)
  (Chamorro chamorro.ch.)
  (Chechen tjetjensk.ce.)
  (Chichewa chichewa.ny.)
  (Chinese kinesisk.zh.)
  (Chuvash tsjuvansk.cv.)
  (Cornish kornisk.kw.)
  (Corsican korsikansk.co.)
  (Cree cree.cr.)
  (Croatian kroatisk.hr.)
  (Coptic koptisk.cop.)
  (Czech tjekkisk.cs.)
  (Danish dansk.da.)
  (Divehi dhivehi.dv.)
  (Dutch nederlandsk.nl.)
  (Dzongkha dzongkha.dz.)
  ("Eastern Punjabi" punjabi.pa.)
  (English engelsk.en.)
  (Esperanto esperanto.eo.)
  (Estonian estisk.et.)
  (Ewe ewe.ee.)
  (Faroese færøsk.fo.)
  (Fijian fijisk.fj.)
  (Finnish finsk.fi.)
  (French fransk.fr.)
  (Fula fulfulde.ff.)
  (Galician galicisk.gl.)
  (Ganda luganda.lg.)
  (Georgian georgisk.ka.)
  (German tysk.de.)
  (Gothic gotisk.got.)
  (Greek græsk.el.)
  ("Middle Low German" middelnedertysk.gml.)
  (Guaraní guaraní.gn.)
  (Gujarati gujarati.gu.)
  (Haitian "haitisk kreolsk".ht.)
  (Hausa hausa.ha.)
  (Hebrew hebraisk.he.)
  (Herero herero.hz.)
  (Hindi hindi.hi.)
  ("Hiri Motu" "hiri motu".ho.)
  (Hungarian ungarsk.hu.)
  (Icelandic islandsk.is.)
  (Ido ido.io.)
  (Igbo ibo.ig.)
  (Indonesian indonesisk.id.)
  (Interlingua interlingua.ia.)
  (Interlingue interlingue.ie.)
  (Inuktitut inuittisk.iu.)
  (Inupiaq inupiak.ik.)
  (Irish irsk.ga.)
  (Italian italiensk.it.)
  (Japanese japansk.ja.)
  (Javanese javanesisk.jv.)
  (Kalaallisut kalaallisut.kl.)
  (Kannada kannada.kn.)
  (Kanuri kanuri.kr.)
  (Kashmiri kashmirisk.ks.)
  (Kazakh kasakhisk.kk.)
  (Khmer khmer.km.)
  (Kikuyu gikuyu.ki.)
  (Kinyarwanda kinyarwanda.rw.)
  (Kirundi kirundi.rn.)
  (Komi komi.kv.)
  (Kongo congolesisk.kg.)
  (Korean koreansk.ko.)
  (Kurdish kurdisk.ku.)
  (Kwanyama kwanyama.kj.)
  (Kyrgyz kirgisisk.ky.)
  (Lao laotisk.lo.)
  (Latin latin.la.)
  (Latvian lettisk.lv.)
  (Lingala lingala.ln.)
  (Lithuanian litauisk.lt.)
  (Luba-Katanga luba-katanga.lu.)
  (Luxembourgish letzeburgsk.lb.)
  (Macedonian makedonsk.mk.)
  (Malagasy gassisk.mg.)
  (Malay malajisk.ms.)
  (Malayalam malayalam.ml.)
  (Maltese maltesisk.mt.)
  (Manx mansk.gv.)
  ("Marathi (Marāṭhī)" marathi.mr.)
  (Marshallese marshallesisk.mh.)
  (Mongolian mongolsk.mn.)
  (Māori maoriski.mi.)
  (Nauruan naurisk.na.)
  (Navajo navajo.nv.)
  (Ndonga ndonga.ng.)
  (Nepali nepali.ne.)
  ("Northern Ndebele" nord-ndebele.nd.)
  ("Northern Sami" nordsamisk.se.)
  (Norwegian norsk.no.)
  ("Norwegian Bokmål" "norsk bokmål".nb.)
  ("Norwegian Nynorsk" nynorsk.nn.)
  (Nuosu yi.ii.)
  (Occitan occitansk.oc.)
  (Ojibwe ojibwa.oj.)
  ("Old Church Slavonic" kirkeslavisk.cu.)
  (Oriya oriya.or.)
  (Oromo oromo.om.)
  (Ossetian ossetisk.os.)
  (Pashto pashto.ps.)
  (Persian persisk.fa.)
  (Polish polsk.pl.)
  (Portuguese portugisisk.pt.)
  (Pāli pali.pi.)
  (Quechua quechua.qu.)
  (Romanian rumænsk.ro.)
  (Romansh rætoromansk.rm.)
  (Russian russisk.ru.)
  (Samoan samoansk.sm.)
  (Sango sango.sg.)
  ("Sanskrit (Saṁskṛta)" sanskrit.sa.)
  (Sardinian sardisk.sc.)
  ("Scottish Gaelic" "skotsk gælisk".gd.)
  (Serbian serbisk.sr.)
  (Shona shona.sn.)
  (Sindhi sindhi.sd.)
  (Sinhalese singalesisk.si.)
  (Slovak slovakisk.sk.)
  (Slovene slovensk.sl.)
  (Somali somali.so.)
  ("Southern Ndebele" syd-ndebele.nr.)
  ("Southern Sotho" sesotho.st.)
  (Spanish spansk.es.)
  (Sundanese sundanesisk.su.)
  (Swahili swahili.sw.)
  (Swati swati.ss.)
  (Swedish svensk.sv.)
  (Tagalog tagalog.tl.)
  (Tahitian tahitisk.ty.)
  (Tajik tadtjikkisk.tg.)
  (Tamil tamilsk.ta.)
  (Tatar tatarsk.tt.)
  (Telugu telugu.te.)
  (Thai thai.th.)
  ("Tibetan Standard" tibetansk.bo.)
  (Tigrinya tigrinya.ti.)
  (Tonga tonganesisk.to.)
  (Tsonga tsonga.ts.)
  (Tswana tswana.tn.)
  (Turkish tyrkisk.tr.)
  (Turkmen turkmensk.tk.)
  (Twi twi.tw.)
  (Ukrainian ukrainsk.uk.)
  (Urdu urdu.ur.)
  (Uyghur uighur.ug.)
  (Uzbek usbekisk.uz.)
  (Venda venda.ve.)
  (Vietnamese vietnamesisk.vi.)
  (Volapük volapük.vo.)
  (Walloon vallonsk.wa.)
  (Welsh walisisk.cy.)
  ("Western Frisian" frisisk.fy.)
  (Wolof wolof.wo.)
  (Xhosa xhosa.xh.)
  (Yiddish jiddisch.yi.)
  (Yoruba yoruba.yo.)
  (Zeneize limburgisk.li.)
  (Zhuang zhuang.za.)
  (Zulu zulu.zu.);
periods=
  (classical antikken.c1.)
  (medieval middelalderen.c13.)
  ("early modern" "tidlig moderne tid".c18.)
  ("late modern" "moderne tid".c20.)
  (contemporary efterkrigstiden.c21.);
presentations=
  (normal.nml.)
  ("combined w. previous steps" "kombineret m. tidligere trin".comb.)
  ("frequency list" frekvensliste.frq.)
  ("alphabetic list" "alfabetisk liste".alf.);
recentTasks=
;
relations=
;
smell=
  ("new smell" "ny lugt".nsl.)
  ("any smell" lugt.sml.);
sndStyles=
  ("mulaw audio at 8 kHz, 1 channel".basic.)
  ("24bit Linear PCM audio at 8–48 kHz, 1-N channels".L24.)
  ("MP4 audio".mp4.)
  ("MP3 or other MPEG audio".mpeg.)
  ("Ogg Vorbis, Speex, Flac and other audio".ogg.)
  ("Vorbis encoded audio".vorbis.)
  (RealAudio."vnd.rn-realaudio".)
  ("WAV audio"."vnd.wave".)
  ("WebM open media format".webm.);
subtype2facet=
  (text.txt)
  (p-splitter.par)
  (s-splitter.seg)
  (tokenizer.tok)
  (pos-tagger.pos)
  (lemmatizer.lem)
  (term-tagger.trm);
tagSets=
  ("Penn Treebank".PT.)
  (CST-tagset.Par.)
  (Parole-Moses.ParMos.)
  (DSL-tagset.DSL.)
  ("CST new tag set" "CST_nyt_tagsæt".CSTnyt.)
  ("Universal Part-of-Speech Tagset".Uni.)
  (Menota.Menota.);
tokenisationStyles=
  ("Penn Treebank".PT.)
  (DSL-basic.DSLb.)
  ("Abbreviation and Multiple Word Unit-wise".AbbrMWU.)
  (Simple.simple.)
  (Anonymous.anon.);
tooladm=
  ( (ToolID.Brill-tagger)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1cst)
    (Title."Brill tagger")
    (ServiceURL."http://localhost/BrillTagger/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator.Brill)
    (InfoAbout."https://nlpweb01.nors.ku.dk/download/tagger/")
    ( Description
    . "Part-of-speech tagger: Marks each word in a text with information about word class and morphological features."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CQP)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."CQP formatter")
    (ServiceURL."http://localhost/cqpConverter")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."--")
    ( Description
    . "Takes input comntaining words, tags and lemmas and creates output that can be read by the CQP software."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-Lem)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."5.06.2014.0809")
    (Title.CSTlemma)
    (ServiceURL."http://localhost/CST-lemma/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator.CST)
    (InfoAbout."cst.dk")
    ( Description
    . "Produces the dictionary look-up form (or lemma) for each word, inflected or not, in the input."
    )
    (ExternalURI."https://nlpweb01.nors.ku.dk/tools/")
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-MWU)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."MWU finder")
    (ServiceURL."http://localhost/tools/index.php?lang=da")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    (InfoAbout."https://www.cst.dk/online/keywords/index.html#flerordstermer")
    ( Description
    . "CST's keyword extractor extracts 20 keywords characterising an input text"
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CST-NER)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title.CSTner)
    (ServiceURL."http://localhost/CST-NER/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    ( InfoAbout
    . "https://nlpweb01.nors.ku.dk/online/navnegenkender/uk/index.html"
    )
    ( Description
    . "Classifies names as proper names, locations (with sub-classes of street, city, land and other types of locations), and other names (called MISC)"
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-NPr)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."NP finder")
    (ServiceURL."http://localhost/np-genkender/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Bolette S. pedersen")
    (InfoAbout."https://nlpweb01.nors.ku.dk/online/np_genkender/uk/index.html")
    (Description."Collects words that constitute noun phrases.")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-Ngram)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title.N-gram)
    (ServiceURL."http://localhost/online/keywords/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    (InfoAbout."https://nlpweb01.nors.ku.dk/online/keywords/")
    (Description."Lists frequencies of single and multi (2,3) word terms.")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CST-Norm)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."7.13.2017.1208")
    (Title.Normaliser)
    (ServiceURL."http://localhost/CST-normaliser/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator.CST)
    (InfoAbout."cst.dk")
    ( Description
    . "Normalises older (1200-1900) Danish text to spelling rules as employed in ODS (Ordbog over det danske Sprog)."
    )
    (ExternalURI."https://nlpweb01.nors.ku.dk/tools/")
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-RTFread)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.1")
    (Title.RTFreader)
    (ServiceURL."http://localhost/rtfreader/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Bart Jongejan")
    (InfoAbout.None)
    ( Description
    . "Extracts segments from RTF-file or from plain text. Optionally tokenises."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-Rep)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."Repetitiveness checker")
    (ServiceURL."http://localhost/rep-check/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Bart Jongejan")
    (InfoAbout."https://nlpweb01.nors.ku.dk/online/rep_check/")
    (Description."Uses a statistical method to find repetitions in a text.")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CST-anon)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title.Anonymisation)
    (ServiceURL."http://localhost/idanna/tool/index.html")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    (InfoAbout."https://www.cst.dk/idanna/index.html")
    (Description."IDentifikation og ANonymisering af NAvne")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CST-keyw)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."Keywords extractor")
    (ServiceURL."http://localhost/online/keywords/")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator."Dorte Haltrup Hansen")
    (InfoAbout."https://www.cst.dk/online/keywords/")
    (Description."Extracts 20 keywords characterising an input text.")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CST-wrdsplt)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.0)
    (Title."Word splitter")
    (ServiceURL."--")
    (Publisher.CST)
    (ContentProvider."cst.ku.dk")
    (Creator.CST)
    (InfoAbout.None)
    (Description."Splits Danish words in syllables.")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.CoreNLP)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."4.3.2")
    (Title."Stanford CoreNLP")
    (ServiceURL."http://localhost/CoreNLP")
    (Publisher."Stanford NLP Group")
    (ContentProvider."Stanford NLP Group")
    (Creator."Stanford NLP Group")
    (InfoAbout."https://stanfordnlp.github.io/CoreNLP/")
    ( Description
    . "CoreNLP is your one stop shop for natural language processing in Java! CoreNLP enables users to derive linguistic annotations for text, including token and sentence boundaries, parts of speech, named entities, numeric and time values, dependency and constituency parses, coreference, sentiment, quote attributions, and relations. CoreNLP currently supports 8 languages: Arabic, Chinese, English, French, German, Hungarian, Italian, and Spanish."
    )
    (ExternalURI."http://nlp.stanford.edu:8080/corenlp/process")
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.CuneiForm)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.1.0")
    (Title.CuneiForm)
    (ServiceURL."http://localhost/cuneiform/")
    (Publisher."Cognitive Technologies")
    (ContentProvider."Cognitive Technologies")
    (Creator."Cognitive Technologies")
    (InfoAbout."http://cognitiveforms.ru/products/cuneiform/")
    ( Description
    . "Интеллектуальная система распознавания текста - Optical Character Recognition"
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.JSON2TEIP5ANNO)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."JSON to TEI")
    (ServiceURL."http://localhost/jsn2teianno")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Read json file with fields for token ID, word, lemma and pos. Output a TEI P5 annotation file (spanGrp) containing either lemmas or Part of Speech tags."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.JSON2tabsep)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."JSON to TSV")
    (ServiceURL."http://localhost/JSON2tabsep/")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."https://github.com/")
    (Description."Convert word-lemma-pos data from JSON to CQP format.")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.Lapos)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.1.2")
    (Title.Lapos)
    (ServiceURL."http://localhost/lapos")
    (Publisher.GitHub)
    (ContentProvider.Perseus)
    (Creator."Yoshimasa Tsuruoka, Yusuke Miyao, and Jun'ichi Kazama")
    (InfoAbout."https://github.com/cltk/lapos")
    (Description."Fork of the Lookahead Part-Of-Speech (Lapos) Tagger")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.PDFBox)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.8.7")
    (Title.PDFBox)
    (ServiceURL."http://localhost/PDFBox")
    (Publisher."The Apache Software Foundation")
    (ContentProvider."The Apache Software Foundation")
    (Creator."apache.org")
    (InfoAbout."http://pdfbox.apache.org")
    ( Description
    . "Apache PDFBox - A Java PDF Library
The Apache PDFBox™ library is an open source Java tool for working with PDF documents. This project allows creation of new PDF documents, manipulation of existing documents and the ability to extract content from documents. Apache PDFBox also includes several command line utilities. Apache PDFBox is published under the Apache License v2.0."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.PruLePo)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.PruneLemPos)
    (ServiceURL."http://localhost/PruLePo/")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."https://github.com/")
    ( Description
    . "Takes text input that has lemma and PoS annotations that are ambiguous. In the output, the ambiguity is dimished by using bigram frequencies."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.TEIanno)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."TEI annotator")
    (ServiceURL."http://localhost/TEIanno")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Add attributes for lemma and Part of Speech tag to <w> and <c> elements. (<w> and <c> elements must already exist.)"
    )
    (ExternalURI."-")
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.Tesseract-OCR)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."4.1.0")
    (Title.Tesseract-OCRv4)
    (ServiceURL."http://localhost/tesseract")
    (Publisher.GitHub)
    (ContentProvider.GitHub)
    (Creator."Ray Smith a.o.")
    (InfoAbout."https://github.com/tesseract-ocr/tesseract/wiki")
    ( Description
    . "Tesseract Open Source OCR Engine. Tesseract 4 adds a new neural net (LSTM) based OCR engine which is focused on line recognition, but also still supports the legacy Tesseract OCR engine of Tesseract 3 which works by recognizing character patterns."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.anasplit)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.1")
    (Title.Anno-splitter)
    (ServiceURL."http://localhost//anasplit")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Takes TEI P5 document containing multiple stand-off annotation groups (spanGrp). Outputs one of the annotation groups."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.cluster)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title.cluster)
    (ServiceURL."http://localhost/cluster/")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Make clusters of lines, separated by empty lines. Each cluster contains all those lines that have the the value in the first or second column in common with one or more other lines in the same cluster."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.conll2009toU)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."CoNLL 2009 to U")
    (ServiceURL."http://localhost/conll2009toU")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    (Description."Convert CoNLL 2009 (14 columns) to CoNLL-U (10 columns)")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.conll2pt)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."CONLL to Penn Treebank")
    (ServiceURL."http://localhost//conll2pt")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Convert syntax dependency annotation in CoNLL 2009 or CoNLL-U format to bracketed \"Lisp-like\" format."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.conllout)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.1")
    (Title."CoNLL formatter")
    (ServiceURL."http://localhost/conllout/")
    (Publisher."Københavns Universitet")
    (ContentProvider."Københavns Universitet")
    (Creator."Bart Jongejan")
    (InfoAbout."http://nextens.uvt.nl/depparse-wiki/DataFormat")
    (Description."Converts input to CoNLL 2009 format.")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.daner)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.daner)
    (ServiceURL."http://localhost/daner/")
    (Publisher.ITU)
    (ContentProvider.ITU)
    (Creator.ITU)
    (InfoAbout."https://github.com/ITUnlp/daner")
    ( Description
    . "Named Entity Recognition for Danish, Distributed by ITU NLP.
Uses Stanford CoreNLP NER and the model from DKIE to tag incoming Danish plain text for named entities, in three classes: location, person, and organization names."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.dapipe)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.dapipe)
    (ServiceURL."http://localhost/dapipe/")
    (Publisher.ITU)
    (ContentProvider.ITU)
    (Creator.ITU)
    (InfoAbout."https://github.com/ITUnlp/dapipe")
    ( Description
    . "UDPipe tools for Danish. udpipe does pos-tagging, lemmatization and syntactic analysis. The syntactic analysis and lemmatization is always based on UDPipe's own pos-tagging. Using dapipe with TEI P5 input is discouraged, unless tokenisation and sentence extraction is done in separate steps, and not by dapipe itself."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.dep2tree)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.dependency2tree)
    (ServiceURL."http://localhost//dep2tree")
    (Publisher.GitHub)
    (ContentProvider."https://github.com/boberle/dependency2tree")
    (Creator."Avatar Bruno Oberle")
    (InfoAbout."https://github.com/boberle/dependency2tree")
    ( Description
    . "Convert CoNLL output of a dependency parser into a latex or graphviz tree."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.dip2plain)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Diplom fetch corrected text")
    (ServiceURL."http://localhost/dip2plain")
    (Publisher.NoRS)
    (ContentProvider.NoRS)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Fetch the column with corrected transcriptions. This column contains words with additions between parentheses. The parentheses are removed in the output."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.dipl2norm)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Normalize dipl")
    (ServiceURL."http://localhost/dipl2norm")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Fill column left of diplom column with normalized tokens, i.e. v -> u, j -> i and all lowercase."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.espeak)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.46.02")
    (Title.eSpeak)
    (ServiceURL."http://localhost/espeak/")
    (Publisher."espeak.sourceforge.net")
    (ContentProvider."espeak.sourceforge.net")
    (Creator."espeak.sourceforge.net")
    (InfoAbout."http://espeak.sourceforge.net/")
    ( Description
    . "Text to speech software. Originally known as speak and originally written for Acorn/RISC_OS computers starting in 1995. This version is an enhancement and re-write, including a relaxation of the original memory and processing power constraints, and with support for additional languages."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.on)
    (Inactive.)
  )
+ ( (ToolID.freq)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.Frequencies)
    (ServiceURL."http://localhost/freq/")
    (Publisher."Københavns Universitet, Center for Sprogteknologi")
    (ContentProvider."Københavns Universitet, Center for Sprogteknologi")
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Sorts input lines, collapses equal lines, appends column with frequencies. Assumes that input is 1, 2 or 3 columns, separated by tabs."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.html2text)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."28.2.18")
    (Title.html2text)
    (ServiceURL."http://localhost/html2text/")
    (Publisher."Jevon Wright")
    ( ContentProvider
    . "https://github.com/soundasleep/html2text/blob/master/src/Html2Text.php"
    )
    (Creator."Jevon Wright")
    (InfoAbout."https://github.com/soundasleep/html2text")
    ( Description
    . "A very simple script that loads from HTML, and then iterates over the DOM to correctly output plain text."
    )
    (ExternalURI."-")
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.json2org)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."JSON to ORG-mode")
    (ServiceURL."http://localhost/json2org")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Converts JSON output with tokens, lemmas and Part of Speech tags to a three-column ORG-mode table."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.jsoncat)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.7.1")
    (Title."JSON pretty print")
    (ServiceURL."http://localhost/jsoncat")
    (Publisher.GitHub)
    (ContentProvider."Gustavo Pantuza")
    (Creator."Gustavo Pantuza")
    (InfoAbout."https://github.com/pantuza/jsoncat")
    ( Description
    . "Json pretty-print parser based on a recursive lexical analyser. The parser was based on the specification defined at json.org. The input file is parsed to build a json object. If the object is correct, it will be pretty-printed to standard output."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.korp2excel)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."KORP to Excel")
    (ServiceURL."http://localhost/KWIC")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "This tool generates a tabulator separated file with all KWIC (keyword-in-context) results generated by the KORP tool at the address https://alf.hum.ku.dk/korp/. Input to the tool is the URL copied from the address line when KORP has performed a search."
    )
    (ExternalURI."-")
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.lempos)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title.LemPoS)
    (ServiceURL."http://localhost/lempos")
    (Publisher."Bart Jongejan")
    (ContentProvider."Bart Jongejan")
    (Creator."Bart Jongejan")
    (InfoAbout."Bart Jongejan")
    ( Description
    . "Lemmatizes input text and adds PoS-options to each lemma. Output can be ambiguous."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.mate-POS)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."3.3")
    (Title."Bohnet tagger")
    (ServiceURL."http://localhost/mate-POStagger")
    (Publisher.mate-tools)
    (ContentProvider.mate-tools)
    (Creator."Bernd Bohnet")
    (InfoAbout."https://code.google.com/p/mate-tools/")
    ( Description
    . "Part of Speech tagger that is distributed as part of mate-tools."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.mate-parser)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."3.3")
    (Title."Bohnet parser")
    (ServiceURL."http://localhost/mate-parser")
    (Publisher.mate-tools)
    (ContentProvider.mate-tools)
    (Creator."Bernd Bohnet")
    (InfoAbout."http://code.google.com/p/mate-tools/")
    (Description."Dependency parser, part of mate-tools.")
    (ExternalURI."http://barbar.cs.lth.se:8081/")
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.opennlpPOStagger)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.5.2")
    (Title."OpenNLP Tagger")
    (ServiceURL."http://localhost/opennlpPOSTagger")
    (Publisher.Apache)
    (ContentProvider.Apache)
    (Creator.Apache)
    ( InfoAbout
    . "http://opennlp.apache.org/documentation/1.5.2-incubating/manual/opennlp.html#tools.postagger"
    )
    ( Description
    . "Part of Speech Tagger that marks tokens with their corresponding word type based on the token itself and the context of the token. Uses a probability model to predict the correct pos tag."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.orgconv)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Diplom annotator")
    (ServiceURL."http://localhost/orgconv")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Store lemma in column 3 and/or word class in column 4 of an orgmode input file that already has diplomatic and facsimal values in columns 7 and 8."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.pdf2htmlEX)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."0.18.8")
    (Title.pdf2htmlEX)
    (ServiceURL."http://localhost/pdf2htmlEX/")
    (Publisher.GitHub)
    (ContentProvider.GitHub)
    (Creator."Lu Wang/Trent Petersen")
    (InfoAbout."https://github.com/pdf2htmlEX")
    ( Description
    . "Converts PDF to HTML without losing text or format. (The produced HTML can hardly be interpreted by other tools.)
Renders PDF files in HTML, utilizing modern Web technologies. It aims to provide an accurate rendering, while keeping optimized for Web display. Best for text-based PDF files, for example scientific papers with complicated formulas and figures. Text, fonts and formats are natively preserved in HTML such that you can still search and copy. The generated HTML file is static, with optional features powered by JavaScript."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.pdfminer)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."2014.03.24")
    (Title.PDFMiner)
    (ServiceURL."http://localhost/PDFMiner/")
    (Publisher."Yusuke Shinyama")
    (ContentProvider."Yusuke Shinyama")
    (Creator."Yusuke Shinyama")
    (InfoAbout."http://www.unixuser.org/~euske/python/pdfminer/")
    ( Description
    . "Extracts information from PDF documents. Focuses entirely on getting and analyzing text data."
    )
    (ExternalURI."http://pdf2html.tabesugi.net:8080")
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.plainD2cbf)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."plain to TEI")
    (ServiceURL."http://localhost/plainD2cbf")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "From a plain segmentized and tokenized text file that uses DEL characters to separate tokens that are written together in the input, create a TEI P5 Clarin Base Format text with attributes S and T for segment and token identification."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.seg)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.TEI-segmenter)
    (ServiceURL."http://localhost/seg/")
    (Publisher."Københavns Universitet, Center for Sprogteknologi")
    (ContentProvider."Københavns Universitet, Center for Sprogteknologi")
    (Creator."Bart Jongejan")
    (InfoAbout."http://cst.dk/online/TEIP5-segmenter/")
    ( Description
    . "Reads tokens and sentences as annotations and produces segment annotations, where segments refer to tokens, not to the base text. Input and output is encoded in TEI P5."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.sent)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Sentence extractor")
    (ServiceURL."http://localhost/sent")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "From a TEI text enriched with T (token) and S (segment) attributes, extract the sentences and their offsets in the source."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.soffice)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."3.5")
    (Title.LibreOffice)
    (ServiceURL."http://localhost/soffice/")
    (Publisher.LibreOffice)
    (ContentProvider.LibreOffice)
    (Creator.LibreOffice)
    (InfoAbout."http://www.libreoffice.org")
    ( Description
    . "A powerful office suite, here used to convert office documents to RTF or PDF."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.tagtrans)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."PoS translator")
    (ServiceURL."http://localhost/tagtrans")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    (Description."Translate from DSL's tag set to Menota")
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.tei2conll)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."TEI to CoNLL-U")
    (ServiceURL."http://localhost//tei2conll")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Converts a TEI P5 document with annotations for lemma, pos (or msd) and syntactic dependencies to CoNLL-U 10 column format."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.teianno2orgmode)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version.1)
    (Title."TEI to Org-mode")
    (ServiceURL."http://localhost/tei2org")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Convert TEI P5 stand-off annotation to a two column file in Org-mode format. The first column contains a token, the second contains the annotation: POS-tag, word class, or lemma"
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.teitok)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."TEI tokenizer")
    (ServiceURL."http://localhost/teitok/")
    (Publisher.CST)
    (ContentProvider.Nors)
    (Creator."Bart Jongejan")
    (InfoAbout."*---*")
    ( Description
    . "Apply a primitive tokenisation to the contents of the <text> element in a TEI P5 document. Each word, punctuation and whitespace is marked up by w or c tags. S and T attributes indicate wich primitive tokens should be combined to create higher level tokens."
    )
    (ExternalURI."https://nlpweb01.nors.ku.dk/teitok/")
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.tesseract)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."3.02.02")
    (Title.Tesseract-OCR)
    (ServiceURL."http://localhost/tesseract")
    (Publisher.Google)
    (ContentProvider.Google)
    (Creator."Hewlett Packard")
    (InfoAbout."https://code.google.com/p/tesseract-ocr/")
    ( Description
    . "Tesseract is probably the most accurate open source OCR engine available. Combined with the Leptonica Image Processing Library it can read a wide variety of image formats and convert them to text in over 60 languages. It was one of the top 3 engines in the 1995 UNLV Accuracy test. Between 1995 and 2006 it had little work done on it, but since then it has been improved extensively by Google. It is released under the Apache License 2.0."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.on)
  )
+ ( (ToolID.toks)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."Token extractor")
    (ServiceURL."http://localhost/toks")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "From a TEI text enriched with T (token) and S (segment) attributes, extract tokens and their offset in the input."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.toksent)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title."TEI extract tokens/sentences")
    (ServiceURL."http://localhost/toksent/")
    (Publisher."Københavns Universitet, Center for Sprogteknologi")
    (ContentProvider."Københavns Universitet, Center for Sprogteknologi")
    (Creator."Bart Jongejan")
    (InfoAbout."http://cst.dk/online/TEIP5-tokeniser-sentence")
    ( Description
    . "Reads TEIP5 and produces token and sentence annotations. The annotations refer to the base text, but also include the tokens and sentences themselves in plain text."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.udpipe)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.2")
    (Title.udpipe)
    (ServiceURL."http://localhost/udpipe/")
    ( Publisher
    . "Charles University, Faculty of Mathematics and Physics, Institute of Formal and Applied Linguistics (UFAL)"
    )
    (ContentProvider."LINDAT / CLARIAH-CZ Data & Tools")
    (Creator."Milan Straka & Jana Straková")
    (InfoAbout."https://ufal.mff.cuni.cz/udpipe/1")
    ( Description
    . "Tokenizer, POS Tagger, Lemmatizer and Parser models for 94 treebanks of 61 languages of Universal Depenencies 2.5 Treebanks."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  )
+ ( (ToolID.vujiloX)
    (PassWord.)
    (ContactEmail."x@x.xxx")
    (Version."1.0")
    (Title.vujiLoX)
    (ServiceURL."http://localhost/vujilo")
    (Publisher.CST)
    (ContentProvider.CST)
    (Creator."Bart Jongejan")
    (InfoAbout."-")
    ( Description
    . "Converts Latin text to lower case and transforms v to u and j to i."
    )
    (ExternalURI.)
    (XMLparms.)
    (PostData.)
    (Inactive.)
  );
toolprop=
  ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,(seg*tok ner.pos^DSL))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,((par*seg*tok.OnE).par*pos^DSL*seg*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,((seg*tok.OnE).pos^DSL*seg*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.pos^Uni))
      (format,(txtann.txtann))
      (lang,(la.la))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,((par*seg*tok.OnE).par*pos^Uni*seg*tok))
      (format,(flat.flat))
      (lang,(la.la))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).pos^Uni*seg*tok))
      (format,(flat.flat))
      (lang,(la.la))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      ( facet
      ,   ((ner*par*seg*tok.OnE).cls*par*pos^Par*seg)
        + ((par*seg*tok.OnE).par*pos^Par*seg*tok)
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      ( facet
      ,   ((ner*seg*tok.OnE).cls*pos^Par*seg)
        + ((seg*tok.OnE).pos^Par*seg*tok)
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (facet,(seg*tok^PT.pos^PT))
      (format,(txtann.txtann))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (facet,(seg*tok ner.pos^Par))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      ( facet
      , ((par*seg*tok^PT.OnE).par*pos^PT*seg*tok)
      )
      (format,(flat.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( Brill-tagger
  .   (ambig,(una.una))
      (facet,((seg*tok^PT.OnE).pos^PT*seg*tok))
      (format,(flat.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CQP
  .   (ambig,(una.una))
      (facet,(lem*pos*seg*tok.cls*lem*pos*seg*tok))
      (format,(txtann.vrt))
      (pres,(nml.nml))
  )
+ ( CQP
  .   (ambig,(una.una))
      ( facet
      , ((lem*pos*seg*tok.OnE).cls*lem*pos*seg*tok)
      )
      (format,(flat.vrt))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb)+(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ( (par*pos^Par*seg*tok.OnE)
          . lem*par*seg+lem*par*pos^Par*seg*tok
          )
        + ( (par*pos^Uni*seg*tok.OnE)
          . lem*par*seg+lem*par*pos^Uni*seg*tok
          )
        + ((seg*tok.OnE).lem*seg)
        + ( (pos^Par*seg*tok.OnE)
          . lem*seg+lem*pos^Par*seg*tok
          )
        + ( (pos^Uni*seg*tok.OnE)
          . lem*seg+lem*pos^Uni*seg*tok
          )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb)+(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ( (pos^Par*seg*tok.OnE)
          . lem+lem*tok+lem*pos^Par*tok
          )
        + ( (pos^Uni*seg*tok.OnE)
          . lem+lem*tok+lem*pos^Uni*tok
          )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ( (par*pos^PT*seg*tok.OnE)
          . lem*par*seg+lem*par*pos^PT*seg*tok
          )
        + ((seg*tok.OnE).lem*seg)
        + ( (pos^PT*seg*tok.OnE)
          . lem*seg+lem*pos^PT*seg*tok
          )
      )
      (format,(flat.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm))
      ( facet
      ,   ((seg*tok.OnE).lem+lem*tok)
        + ( (pos^PT*seg*tok.OnE)
          . lem+lem*tok+lem*pos^PT*tok
          )
      )
      (format,(flat.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm))
      (facet,((par*seg*tok.OnE).lem*par*seg))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb.amb))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb))
      (app,(nrm.nrm))
      (facet,((par*seg*tok.OnE).lem*par*seg))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ( (par*pos^DSL*seg*tok.OnE)
          . lem*par*seg+lem*par*pos^DSL*seg*tok
          )
        + ((seg*tok.OnE).lem*seg)
        + ( (pos^DSL*seg*tok.OnE)
          . lem*seg+lem*pos^DSL*seg*tok
          )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ((seg*tok.OnE).lem+lem*tok)
        + ( (pos^DSL*seg*tok.OnE)
          . lem+lem*tok+lem*pos^DSL*tok
          )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(tok.lem))
      (format,(txtann.txtann))
      ( lang
      ,   (af.af)
        + (bg.bg)
        + (cs.cs)
        + (de.de)
        + (el.el)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (fr.fr)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (mk.mk)
        + (nl.nl)
        + (no.no)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(tok.lem))
      (format,(txtann.txtann))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(tok pos^PT.lem))
      (format,(txtann.txtann))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,(tok.lem))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,(tok pos^DSL.lem))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   (tok.lem+lem*tok)
        + (pos^PT*tok.lem+lem*tok+lem*pos^PT*tok)
      )
      (format,(txtann.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   (pos^Par*tok.lem+lem*tok+lem*pos^Par*tok)
        + (pos^Uni*tok.lem+lem*tok+lem*pos^Uni*tok)
      )
      (format,(txtann.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg)
        + ((seg*tok.OnE).lem*seg)
      )
      (format,(flat.flat))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      ,   ( (par*pos^PT*seg*tok.OnE)
          . lem*par*seg+lem*par*pos^PT*seg*tok
          )
        + ((seg*tok.OnE).lem*seg)
        + ( (pos^PT*seg*tok.OnE)
          . lem*seg+lem*pos^PT*seg*tok
          )
      )
      (format,(flat.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,(tok.lem+lem*tok))
      (format,(txtann.flat))
      (lang,(da.da))
      (period,(c20.c20)+(c21.c21))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,(pos^DSL*tok.lem+lem*tok+lem*pos^DSL*tok))
      (format,(txtann.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,((tok pos^Par)+(tok pos^Uni).lem))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,((par*seg*tok.OnE).lem*par*seg))
      (format,(flat.flat))
      ( lang
      ,   (af.af)
        + (bg.bg)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (el.el)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (fr.fr)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (mk.mk)
        + (nl.nl)
        + (no.no)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem*seg))
      (format,(flat.flat))
      ( lang
      ,   (af.af)
        + (bg.bg)
        + (cs.cs)
        + (de.de)
        + (el.el)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (fr.fr)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (mk.mk)
        + (nl.nl)
        + (no.no)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      ( lang
      ,   (af.af)
        + (bg.bg)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (el.el)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (fr.fr)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (mk.mk)
        + (nl.nl)
        + (no.no)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      (lang,(la.la))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(nrm.nrm))
      ( facet
      , ( (pos^PT*seg*tok.OnE)
        . lem+lem*tok+lem*pos^PT*tok
        )
      )
      (format,(flat.flat))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(una.amb+una))
      (app,(unn.unn))
      ( facet
      ,   (tok.lem+lem*tok)
        + (pos^DSL*tok.lem+lem*tok+lem*pos^DSL*tok)
      )
      (format,(txtann.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(amb+una.amb))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ((par*seg*tok.OnE).lem*par*seg*tok)
        + ((seg*tok.OnE).lem*seg+lem*seg*tok)
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb+una.amb))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ( (par*pos^DSL*seg*tok.OnE)
          . lem*par*seg+lem*par*pos^DSL*seg*tok
          )
        + ((seg*tok.OnE).lem*seg)
        + ( (pos^DSL*seg*tok.OnE)
          . lem*seg+lem*pos^DSL*seg*tok
          )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb+una.amb))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      , ( (pos^DSL*seg*tok.OnE)
        . lem+lem*tok+lem*pos^DSL*tok
        )
      )
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c20.c20))
      (pres,(nml.alf+frq))
  )
+ ( CST-Lem
  .   (ambig,(amb+una.amb))
      (app,(unn.unn))
      (facet,((par*seg*tok.OnE).lem*par*seg))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-Lem
  .   (ambig,(amb+una.amb))
      (app,(unn.unn))
      (facet,((seg*tok.OnE).lem+lem*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.alf+frq))
  )
+ ( CST-MWU
  .   (facet,(pos^Par.mwu))
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
  )
+ ( CST-NER
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      ( facet
      ,   ((par*seg*tok^simple.OnE).ner*par*seg*tok)
        + ((seg*tok^simple.OnE).ner*seg*tok)
      )
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-NER
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.ner))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CST-NPr
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,(pos^Par*seg*tok lem.npr))
      (format,(txtann.flat^utf8))
      (lang,(da.da))
      (pres,(nml.nml))
  )
+ ( CST-Ngram
  . (facet,(tok.Ngram)) (format,(flat^utf8.flat^utf8))
  )
+ ( CST-Norm
  .   (ambig,(amb.amb)+(una.amb+una))
      (app,(unn.nrm))
      (facet,(tok.tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.alf+frq+nml))
  )
+ ( CST-Norm
  .   (ambig,(amb.amb)+(una.amb+una))
      (app,(unn.nrm))
      (facet,((seg*tok.OnE).seg*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( CST-RTFread
  .   (app,(nrm+ocr.nrm)+(ocr+unn.unn))
      (facet,(txt.seg)+(tok+txt.seg*tok^PT))
      (format,(flat+rtf.flat))
      (lang,(en.en))
      (pres,(nml.nml))
  )
+ ( CST-RTFread
  .   (app,(nrm+ocr.nrm)+(ocr+unn.unn))
      (facet,(txt.seg)+(tok+txt.seg*tok^simple))
      (format,(flat+rtf.flat))
      (pres,(nml.nml))
  )
+ ( CST-RTFread
  .   (app,(nrm+ocr.nrm)+(ocr+unn.unn))
      (facet,(txt.par*seg)+(tok+txt.par*seg*tok^PT))
      (format,(flat+rtf.flat))
      (lang,(en.en))
      (pres,(nml.nml))
  )
+ ( CST-RTFread
  .   (app,(nrm+ocr.nrm)+(ocr+unn.unn))
      (facet,(txt.par*seg)+(tok+txt.par*seg*tok^simple))
      (format,(flat+rtf.flat))
      (pres,(nml.nml))
  )
+ ( CST-RTFread
  .   (app,(nrm+ocr.nrm)+(ocr+unn.unn))
      (facet,(txt+tok^PT.par*seg*tok^PT))
      (format,(flat+rtf.plainD))
      (lang,(en.en))
      (pres,(nml.nml))
  )
+ ( CST-RTFread
  .   (app,(nrm+ocr.nrm)+(ocr+unn.unn))
      (facet,(txt+tok^PT.seg*tok^PT))
      (format,(flat+rtf.plainD))
      (lang,(en.en))
      (pres,(nml.nml))
  )
+ ( CST-RTFread
  .   (app,(nrm+ocr.nrm)+(ocr+unn.unn))
      (facet,(txt+tok^simple.par*seg*tok^simple))
      (format,(flat+rtf.plainD))
      (pres,(nml.nml))
  )
+ ( CST-RTFread
  .   (app,(nrm+ocr.nrm)+(ocr+unn.unn))
      (facet,(txt+tok^simple.seg*tok^simple))
      (format,(flat+rtf.plainD))
      (pres,(nml.nml))
  )
+ ( CST-Rep
  .   (ambig,(una.una))
      ( facet
      , (txt+(lem*seg.OnE)+(pos*seg.OnE)+(seg*tok.OnE).rep)
      )
      (format,(flat.html^ROTM))
      (pres,(nml.frq))
  )
+ ( CST-anon
  .   (facet,(tok^simple.tok^anon))
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
  )
+ ( CST-keyw
  .   (facet,(pos^Par.key))
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
  )
+ ( CST-wrdsplt
  .   (ambig,(una.una))
      (facet,(lem+tok+txt.wrdsplt))
      (format,(flat^utf8.flat^utf8))
      (lang,(da.da))
      (pres,(nml.nml))
  )
+ ( CoreNLP
  .   (ambig,(una.una))
      (facet,(seg*tok^PT.lem*mrf*ner*pos^PT*snt))
      (format,(txtann.json))
      (lang,(en.en))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( CuneiForm
  .   (app,(nrm+rom.ocr))
      (facet,(txt.txt))
      ( format
      , ( pdf+img^gif+img^jpeg+img^pdf+img^png+img^tiff
        . rtf
        )
      )
      ( lang
      ,   (bg.bg)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fr.fr)
        + (hr.hr)
        + (hu.hu)
        + (it.it)
        + (lt.lt)
        + (lv.lv)
        + (nl.nl)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (tr.tr)
        + (uk.uk)
      )
      (sml,(sml.nsl))
  )
+ ( JSON2TEIP5ANNO
  .   (ambig,(pru.una))
      (app,(drty.nrm))
      (facet,((lem*pos*seg*tok.OnE).lem+pos))
      (format,(json^xid.txtann))
  )
+ ( JSON2tabsep
  .   (ambig,(pru.una))
      (app,(drty.prtty))
      (facet,((lem*pos*seg*tok.OnE).lem*pos*seg*tok))
      (format,(json.flat))
      (pres,(nml.nml))
  )
+ ( Lapos
  .   (ambig,(una.una))
      (facet,(seg*tok.pos^DSL))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.nml))
  )
+ ( Lapos
  .   (ambig,(una.una))
      (facet,(seg*tok.pos^Uni))
      (format,(txtann.txtann))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( Lapos
  .   (ambig,(una.una))
      (facet,((seg*tok.OnE).pos^DSL*seg*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.nml))
  )
+ ( Lapos
  .   (ambig,(una.una))
      (facet,((seg*tok.OnE).pos^Uni*seg*tok))
      (format,(flat.flat))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( PDFBox
  .   (facet,(txt.txt))
      (format,(pdf.flat^utf8))
      (pres,(nml.nml))
  )
+ ( PruLePo
  .   (ambig,(amb.pru))
      (app,(drty.drty))
      (facet,((lem*pos*seg*tok.OnE).lem*pos*seg*tok))
      (format,(json^nid.json^nid)+(json^xid.json^xid))
      (pres,(nml.nml))
  )
+ ( TEIanno
  .   (ambig,(pru.pru)+(una.una))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      ,   ( lem*mrf*ner*pos^Uni*seg*stx*tok*(seg*tok.OnE)
          . lem*mrf*ner*pos^Uni*seg*stx*tok
          )
        + ( lem*mrf*ner*pos^Uni*tok*(seg*tok.OnE)
          . lem*mrf*ner*pos*tok
          )
        + ( lem*mrf*pos^Uni*seg*stx*tok*(seg*tok.OnE)
          . lem*mrf*pos*seg*stx*tok
          )
        + ( lem*mrf*pos^Uni*tok*(seg*tok.OnE)
          . lem*mrf*pos*tok
          )
      )
      (format,(txtann.teip5))
      (pres,(nml.nml))
  )
+ ( Tesseract-OCR
  .   (ambig,(una.una))
      (app,(got+gotd+nrm+rom.ocr))
      (facet,(txt.txt))
      ( format
      , (   pdf
          + img^gif
          + img^jpeg
          + img^pdf
          + img^pjpeg
          + img^png
          + img^tiff
        . flat
        )
      )
      ( lang
      ,   (af.af)
        + (br.br)
        + (bs.bs)
        + (ca.ca)
        + (co.co)
        + (cs.cs)
        + (cy.cy)
        + (da.da)
        + (de.de)
        + (en.en)
        + (eo.eo)
        + (es.es)
        + (et.et)
        + (eu.eu)
        + (fi.fi)
        + (fo.fo)
        + (fr.fr)
        + (ga.ga)
        + (gl.gl)
        + (hr.hr)
        + (ht.ht)
        + (hu.hu)
        + (id.id)
        + (is.is)
        + (it.it)
        + (iu.iu)
        + (jv.jv)
        + (la.la)
        + (lb.lb)
        + (lt.lt)
        + (lv.lv)
        + (ms.ms)
        + (mt.mt)
        + (nb.nb)
        + (nl.nl)
        + (nn.nn)
        + (oc.oc)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (sk.sk)
        + (sl.sl)
        + (sq.sq)
        + (sr.sr)
        + (sv.sv)
        + (sw.sw)
        + (tr.tr)
        + (uz.uz)
        + (vi.vi)
        + (yi.yi)
      )
      (pres,(nml.nml))
      (sml,(sml.nsl))
  )
+ ( anasplit
  .   (facet,((lem*mrf*pos*stx.OnE).lem+mrf+pos+stx))
      (format,(txtann.txtann))
  )
+ ( cluster
  . format,(2col.2cole)+(3col.2cole+3cole)+(4col.2cole+4cole)
  )
+ (conll2009toU.format,(conll^cnl2009.conll^clU))
+ ( conll2pt
  .   ( facet
      , (   (lem*mrf*pos*seg*stx*tok.OnE)
          + (lem*pos*seg*stx*tok.OnE)
          + (pos*seg*stx*tok.OnE)
        . pos*seg*stx*tok
        )
      )
      (format,(conll.pt))
      (pres,(nml.nml))
  )
+ ( conll2pt
  .   ( facet
      , ( (lem*mrf*ner*pos*seg*stx*tok.OnE)
        . pos*seg*stx*tok
        )
      )
      (format,(conll.pt))
      (pres,(nml.nml))
  )
+ ( conllout
  .   (ambig,(una.una))
      ( facet
      ,   (lem*pos*seg*tok.lem*pos*seg*tok)
        + (pos*seg*tok.pos*seg*tok)
        + (seg*tok.seg*tok)
      )
      (format,(txtann.conll^cnl2009))
      (pres,(nml.nml))
  )
+ ( daner
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.ner))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( daner
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,((seg*tok.OnE).ner*seg*tok))
      (format,(flat.flat))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( dapipe
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf*pos^Uni*stx))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( dapipe
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg+txt.lem*mrf*pos^Uni*seg*stx*tok))
      (format,(flat.conll^clU))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( dep2tree
  .   (app,(drty+nrm+unn.prtty))
      ( facet
      , (   (lem*mrf*ner*pos*seg*stx*tok.OnE)
          + (lem*mrf*pos*seg*stx*tok.OnE)
          + (lem*pos*seg*stx*tok.OnE)
          + (pos*seg*stx*tok.OnE)
        . pos*seg*stx*tok
        )
      )
      (format,(conll^clU.html^ROTM))
  )
+ ( dip2plain
  .   (ambig,(una.una))
      (app,(unn.unn))
      (facet,(tok.seg*tok))
      (format,(dipl.plainD))
      (lang,(da.da)+(gml.gml)+(la.la)+(sv.sv))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( dipl2norm
  .   (app,(unn.nrm))
      (facet,(tok.tok))
      (format,(dipl.dipl))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( espeak
  .   (facet,(txt.txt)+((seg*tok.OnE).seg*tok))
      (format,(flat.wav))
      ( lang
      ,   (af.af)
        + (bg.bg)
        + (bs.bs)
        + (ca.ca)
        + (cs.cs)
        + (cy.cy)
        + (da.da)
        + (de.de)
        + (el.el)
        + (en.en)
        + (eo.eo)
        + (es.es)
        + (et.et)
        + (fi.fi)
        + (fr.fr)
        + (hi.hi)
        + (hr.hr)
        + (hu.hu)
        + (hy.hy)
        + (id.id)
        + (is.is)
        + (it.it)
        + (ka.ka)
        + (kn.kn)
        + (ku.ku)
        + (lv.lv)
        + (mk.mk)
        + (ml.ml)
        + (nl.nl)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sq.sq)
        + (sr.sr)
        + (sv.sv)
        + (sw.sw)
        + (ta.ta)
        + (tr.tr)
        + (vi.vi)
        + (zh.zh)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( espeak
  .   (facet,(txt.txt)+((seg*tok.OnE).seg*tok))
      (format,(flat.wav))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( freq
  .   (format,(2col.3col)+(3col.4col)+(flat.2col))
      (pres,(nml.frq))
  )
+ (html2text.format,(html^ROTM.flat))
+ ( json2org
  .   (app,(drty.nrm+unn))
      ( facet
      , ( (lem*pos^Menota*seg*tok.OnE)
        . lem*pos^Menota*tok
        )
      )
      (format,(json.dipl))
      (pres,(nml.nml))
  )
+ (jsoncat.(app,(drty.prtty)) (format,(json.json)))
+ (korp2excel.(facet,(kwic.kwic)) (format,(url.flat)))
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      (facet,(seg*tok.lem))
      (format,(txtann.json^xid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      (facet,(seg*tok.lem*pos*seg*tok))
      (format,(txtann.json^xid))
      ( lang
      ,   (bg.bg)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (mk.mk)
        + (nl.nl)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      (facet,((seg*tok.OnE).lem))
      (format,(flat.json^nid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm.drty))
      (facet,((seg*tok.OnE).lem*pos*seg*tok))
      (format,(flat.json^nid))
      ( lang
      ,   (bg.bg)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (en.en)
        + (es.es)
        + (et.et)
        + (fa.fa)
        + (fo.fo)
        + (hr.hr)
        + (hu.hu)
        + (is.is)
        + (it.it)
        + (mk.mk)
        + (nl.nl)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (uk.uk)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(unn.drty))
      (facet,(seg*tok.lem))
      (format,(txtann.json^xid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(unn.drty))
      (facet,((seg*tok.OnE).lem))
      (format,(flat.json^nid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      (facet,(seg*tok.lem*pos^DSL*seg*tok))
      (format,(txtann.json^xid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      (facet,(seg*tok.lem+lem*pos^Uni*seg*tok))
      (format,(txtann.json^xid))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      (facet,((seg*tok.OnE).lem*pos^DSL*seg*tok))
      (format,(flat.json^nid))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20))
      (pres,(nml.nml))
  )
+ ( lempos
  .   (ambig,(una.amb))
      (app,(nrm+unn.drty))
      (facet,((seg*tok.OnE).lem+lem*pos*seg*tok))
      (format,(flat.json^nid))
      (lang,(la.la))
      (pres,(nml.nml))
  )
+ ( mate-POS
  .   (facet,(seg*tok.pos^Uni))
      (format,(txtann.txtann))
      (lang,(de.de)+(en.en)+(es.es)+(fr.fr))
      (pres,(nml.nml))
  )
+ ( mate-parser
  .   (ambig,(una.una))
      ( facet
      ,   ( lem*pos^Uni*seg*tok^simple
          . lem*pos^Uni*seg*stx*tok^simple
          )
        + ( pos^Uni*seg*tok^simple
          . pos^Uni*seg*stx*tok^simple
          )
      )
      (format,(txtann.conll^cnl2009))
      (lang,(da.da)+(de.de)+(en.en)+(es.es)+(fr.fr))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( opennlpPOStagger
  .   (facet,(seg*tok.pos^Uni))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( opennlpPOStagger
  .   (facet,(seg*tok^PT.pos^Uni))
      (format,(txtann.txtann))
      (lang,(en.en))
      (pres,(nml.nml))
  )
+ ( orgconv
  .   (ambig,(amb.amb)+(pru.pru)+(una.una))
      (app,(nrm.nrm)+(unn.unn))
      ( facet
      , (   tok*(lem*tok.OnE)*(pos^Menota*tok.OnE)
          + tok*(lem*pos^Menota*tok.OnE)
        . lem*pos^Menota*seg*tok
        )
      )
      (format,(dipl.dipl))
      (pres,(nml.nml))
  )
+ ( pdf2htmlEX
  . (app,(nrm.prtty)) (format,(pdf.html^pedantic))
  )
+ ( pdfminer
  .   (ambig,(una.una))
      (facet,(txt.txt))
      (format,(pdf.flat^utf8))
      (pres,(nml.nml))
  )
+ ( plainD2cbf
  .   (ambig,(una.una))
      (facet,((seg*tok.OnE).seg*tok))
      (format,(plainD.txtann))
      (pres,(nml.nml))
  )
+ (seg.(facet,(sent*tok.seg)) (format,(txtann.txtann)))
+ ( sent
  .   (ambig,(una.una))
      (facet,((seg*tok.OnE).sent))
      (format,(txtann.txtann))
      (pres,(nml.nml))
  )
+ (soffice.format,(doc+docx+odt.rtf)+(odp+ppt+pptx.pdf))
+ ( tagtrans
  .   (ambig,(pru.una))
      ( facet
      , ( (lem*pos^DSL*seg*tok.OnE)
        . lem*pos^Menota*seg*tok
        )
      )
      (format,(json.json))
      (lang,(da.da))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( tagtrans
  .   (facet,(lem*pos^DSL.pos^Menota))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( tagtrans
  .   (facet,(lem*pos^Uni.pos^Menota))
      (format,(json.json)+(txtann.txtann))
      (lang,(la.la))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( tei2conll
  .   ( facet
      ,   ( (lem*mrf*pos*seg*stx*tok.OnE)
          . lem*mrf*pos*seg*stx*tok
          )
        + ( (lem*pos*seg*stx*tok.OnE)
          . lem*pos*seg*stx*tok
          )
      )
      (format,(teip5.conll^clU))
  )
+ ( tei2conll
  .   ( facet
      , ( (lem*mrf*ner*pos*seg*stx*tok.OnE)
        . lem*mrf*ner*pos*seg*stx*tok
        )
      )
      (format,(teip5.conll^clU))
  )
+ ( teianno2orgmode
  .   ( facet
      , (lem*tok.lem*tok)+(pos^Menota*tok.pos^Menota*tok)
      )
      (format,(txtann.dipl))
  )
+ ( teitok
  .   (app,(nrm.nrm)+(unn.unn))
      (facet,(txt.seg*tok^PT))
      (format,(teip5.txtann))
      (lang,(en.en))
      (pres,(nml.nml))
  )
+ ( teitok
  .   (app,(nrm.nrm)+(unn.unn))
      (facet,(txt.seg*tok^simple))
      (format,(teip5.txtann))
      (pres,(nml.nml))
  )
+ ( tesseract
  .   (app,(got.ocr))
      (facet,(txt.txt))
      (format,(img^jpeg+img^pjpeg+img^png+img^tiff.flat))
      (lang,(da.da))
  )
+ ( tesseract
  .   (app,(rom.ocr))
      (facet,(txt.txt))
      (format,(img^jpeg+img^pjpeg+img^png+img^tiff.flat))
      (lang,(da.da)+(el.el)+(en.en))
  )
+ ( toks
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,((seg*tok.OnE).tok))
      (format,(txtann.txtann))
      ( lang
      ,   (af.af)
        + (ar.ar)
        + (be.be)
        + (bg.bg)
        + (bs.bs)
        + (ca.ca)
        + (cop.cop)
        + (cs.cs)
        + (cy.cy)
        + (de.de)
        + (el.el)
        + (en.en)
        + (eo.eo)
        + (es.es)
        + (et.et)
        + (eu.eu)
        + (fa.fa)
        + (fi.fi)
        + (fo.fo)
        + (fr.fr)
        + (ga.ga)
        + (gd.gd)
        + (gl.gl)
        + (got.got)
        + (he.he)
        + (hi.hi)
        + (hr.hr)
        + (hu.hu)
        + (hy.hy)
        + (id.id)
        + (is.is)
        + (it.it)
        + (ja.ja)
        + (ka.ka)
        + (kn.kn)
        + (ko.ko)
        + (ku.ku)
        + (la.la)
        + (lt.lt)
        + (lv.lv)
        + (mk.mk)
        + (ml.ml)
        + (mr.mr)
        + (mt.mt)
        + (nb.nb)
        + (nl.nl)
        + (nn.nn)
        + (no.no)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (se.se)
        + (sk.sk)
        + (sl.sl)
        + (sq.sq)
        + (sr.sr)
        + (sv.sv)
        + (sw.sw)
        + (ta.ta)
        + (te.te)
        + (tr.tr)
        + (ug.ug)
        + (uk.uk)
        + (ur.ur)
        + (vi.vi)
        + (wo.wo)
        + (zh.zh)
      )
      (pres,(nml.nml))
  )
+ ( toks
  .   (ambig,(una.una))
      (app,(nrm.nrm)+(unn.unn))
      (facet,((seg*tok.OnE).tok))
      (format,(txtann.txtann))
      (lang,(da.da))
      (period,(c13.c13)+(c20.c20)+(c21.c21))
      (pres,(nml.nml))
  )
+ ( toksent
  .   (facet,(txt.sent+tok^simple))
      (format,(txtbasis.txtann^one))
  )
+ ( toksent
  .   (facet,(txt.sent+tok^PT+tok^simple))
      (format,(txtbasis.txtann^one))
      (lang,(en.en))
  )
+ ( udpipe
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf*pos^Uni*stx))
      (format,(txtann.txtann))
      ( lang
      ,   (af.af)
        + (ar.ar)
        + (be.be)
        + (bg.bg)
        + (ca.ca)
        + (cop.cop)
        + (cs.cs)
        + (da.da)
        + (de.de)
        + (el.el)
        + (en.en)
        + (es.es)
        + (et.et)
        + (eu.eu)
        + (fa.fa)
        + (fi.fi)
        + (fr.fr)
        + (ga.ga)
        + (gd.gd)
        + (gl.gl)
        + (got.got)
        + (he.he)
        + (hi.hi)
        + (hr.hr)
        + (hu.hu)
        + (hy.hy)
        + (id.id)
        + (it.it)
        + (ja.ja)
        + (ko.ko)
        + (la.la)
        + (lt.lt)
        + (lv.lv)
        + (mr.mr)
        + (mt.mt)
        + (nb.nb)
        + (nl.nl)
        + (nn.nn)
        + (pl.pl)
        + (pt.pt)
        + (ro.ro)
        + (ru.ru)
        + (se.se)
        + (sk.sk)
        + (sl.sl)
        + (sr.sr)
        + (sv.sv)
        + (ta.ta)
        + (te.te)
        + (tr.tr)
        + (ug.ug)
        + (uk.uk)
        + (ur.ur)
        + (vi.vi)
        + (wo.wo)
        + (zh.zh)
      )
      (period,(c21.c21))
      (pres,(nml.nml))
  )
+ ( udpipe
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf*pos^Uni*stx))
      (format,(txtann.txtann))
      (lang,(cu.cu)+(fr.fr)+(la.la)+(ru.ru)+(zh.zh))
      (period,(c13.c13))
      (pres,(nml.nml))
  )
+ ( udpipe
  .   (ambig,(una.una))
      (app,(nrm.nrm))
      (facet,(seg*tok.lem*mrf*pos^Uni*stx))
      (format,(txtann.txtann))
      (lang,(el.el)+(la.la))
      (period,(c1.c1))
      (pres,(nml.nml))
  )
+ ( vujiloX
  .   (ambig,(una.una))
      (app,(unn.nrm))
      (facet,((seg*tok.OnE).seg*tok))
      (format,(flat.flat))
      (lang,(la.la))
      (period,(c1.c1)+(c13.c13))
  )
+ ( vujiloX
  .   (app,(unn.nrm))
      (facet,((seg*tok.OnE).seg*tok))
      (format,(txtann.txtann))
      (lang,(la.la))
      (period,(c1.c1)+(c13.c13))
  );
type2facet=
dictionary.lex;
vidStyles=
  ("MPEG-1 video with multiplexed audio".mpeg.)
  ("MP4 video".mp4.)
  ("Ogg Theora or other video (with audio)".ogg.)
  ("QuickTime video".quicktime.)
  ("WebM Matroska-based open media format".webm.)
  ("Matroska open media format".x-matroska.)
  ("Windows Media Video".x-ms-wmv.)
  ("Flash video (FLV files)".x-flv.);
vulticuli=
  (roman roman.rom.)
  (blackletter gotisk.got.)
  ("blackletter w. ø" "gotisk m. ø".gotd.)
  (OCR.ocr.)
  (unnormalised ikke-normaliseret.unn.)
  (normalised normaliseret.nrm.)
  ("optimized for software" "bedst for programmer".drty.)
  ("pretty printed" "nydelig opsætning".prtty.);
where=
  (AAA changelog footer where./)
  (   CTBs
      jobAbout
      jobNr
      jobs
      relations
      Uploads
      zippedresults
      ItemGroupsCache
      recentTasks
      wrkflws
  . job/
  )
  (   features
      HTTP-status-codes
      ISO-639
      licences
      subtype2facet
      tooladm
      toolprop
      type2facet
      Workflows
      UIlanguage
      SuperSets
      TEImetadata
      Typeface
  . meta/
  )
  (   facets
      fileFormats
      linguae
      periods
      presentations
      vulticuli
      ambiguity
      smell
  . meta/feature/
  )
  (   annotationStyles
      basistextStyles
      conllStyles
      flatFileTypes
      htmlStyles
      imageStyles
      jsonStyles
      sndStyles
      tagSets
      tokenisationStyles
      vidStyles
  . meta/style/
  );
wrkflws=
;
zippedresults=
;
