{annotei.bra

Create TEI P5 output with w pc elements that have attributes holding PoS tag and lemma.
Retain elements that occur in the TEI P5 input in the output.}

program-annotei=
  ( doit
  =   Id
    .   !arg:(?tei.?tok.?pos.?mrf.?lem.?seg.?stx.?ner.?output)
      & get$(!tei,X ML):?XmL
      & nestML$!XmL:?Nest
      &   nestML$(get$(!tei,X ML))
        : (   ?teiA (TEI.?TEIatt,?head (text.?textatt,?tei) ?tail) ?teiZ
            &   (     !head
                    :   ?
                        ( teiHeader
                        .   ?
                          ,   ?
                              ( encodingDesc
                              .   
                                ,   ?
                                    ( projectDesc
                                    .   ?
                                      ,   ?
                                          ( p
                                          .   ?
                                            ,   ?
                                                ( ref
                                                .   ( target
                                                    . "https://www.clarin.eu/content/parlamint"
                                                    )
                                                  , ParlaMint
                                                )
                                                ?
                                          )
                                          ?
                                    )
                                    ?
                              )
                              ?
                        )
                        ?
                  & (msd.n.seg)
                | (pos.y.text)
                )
              : (?POS.?PCLEMMA.?ANNOTATE)
            &   (   !TEIatt:?A ("xml:id".?B) ?C
                  & !A ("xml:id".str$(!B ".ana")) !C
                |   ( findID
                    =   A B C id
                      .   !arg:? (?.?A,?B) ?C
                        & (     !A
                              : ? ("xml:id"|id.?id) ?
                            & !id
                          | findID$!B
                          | findID$!C
                          )
                    )
                  & findID$!head:?B
                  & !TEIatt ("xml:id".str$(!B ".ana"))
                | !TEIatt ("xml:id".ana)
                )
              : ?TEIatt
          |   ? (text.?textatt,? (body.,?tei) ?) ?
            & :?TEIatt:?head:?tail
            & (pos.y.text):(?POS.?PCLEMMA.?ANNOTATE)
          )
      & nestML$(get$(!tok,X ML)):? (spanGrp.?,?tok) ?
      & nestML$(get$(!pos,X ML)):? (spanGrp.?,?pos) ?
      & nestML$(get$(!mrf,X ML)):? (spanGrp.?,?mrf) ?
      & nestML$(get$(!lem,X ML)):? (spanGrp.?,?lem) ?
      & ( !stx:"*"&:?stx
        | nestML$(get$(!stx,X ML)):? (spanGrp.?,?stx) ?
        )
      & ( !seg:"*"&:?seg
        | nestML$(get$(!seg,X ML)):? (spanGrp.?,?seg) ?
        )
      & ( !ner:"*"&:?nerH
        |   nestML$(get$(IfacetnerF,X ML)):? (spanGrp.?,?ner) ?
          & new$hash:?nerH
          &   map
            $ ( ( 
                =   id A Z cat to
                  .     !arg:(span.?A (from.?id) ?Z,?cat)
                      & (!A !Z:? (to.?to)|:?to)
                      & (nerH..insert)$(!id.!to,!cat)
                    | 
                )
              . !ner
              )
        )
      &     map
          $ ( ( 
              =   
                .       !arg
                      : ( span
                        .     ? (from.@(?:"#" ?teiid)) ?
                            : ( ? (to.@(?:"#" ?toid)) ?
                              | ?&!teiid:?toid
                              )
                            : ? ("xml:id".?tokid) ?
                          , ?tok
                        )
                    & str$("#" !tokid):?tokid
                    & (     !lem
                          :   ?
                              (span.? (from.!tokid) ?,?LS)
                              ?lem
                        &   whl
                          ' (   !lem
                              :   (span.? (from.!tokid) ?,?L)
                                  ?lem
                            & !LS !L:?LS
                            )
                      | :?LS
                      )
                    & (     !pos
                          :   ?
                              (span.? (from.!tokid) ?,?PS)
                              ?pos
                        &   whl
                          ' (   !pos
                              :   (span.? (from.!tokid) ?,?P)
                                  ?pos
                            & !PS !P:?PS
                            )
                      | :?PS
                      )
                    & (     !mrf
                          :   ?
                              (span.? (from.!tokid) ?,?MS)
                              ?mrf
                        &   whl
                          ' (   !mrf
                              :   (span.? (from.!tokid) ?,?M)
                                  ?mrf
                            & !MS !M:?MS
                            )
                      | :?MS
                      )
                    & "Remove doublets"
                    & (   !PS:? [1
                        &   whl
                          ' ( !LS:?a %@?b ?c !b ?d
                            & !a !b !c !d:?LS
                            )
                      |   !LS:? [1
                        &   whl
                          ' ( !PS:?a %@?b ?c !b ?d
                            & !a !b !c !d:?PS
                            )
                      | 
                      )
                    & "Length of PS and LS must be the same or 1."
                    & (!teiid.!toid.!PS.!MS.!LS.!tokid)
                  | 
              )
            . !tok
            )
        : ?PML
      & "SP is a list of c elements containing white space chars."
      & ( getSP
        =   sp
          .   (!SP.):(?sp.?SP)
            &   map
              $ ((=.!arg:(?.?,?arg)&!arg).!sp)
        )
      & (getMWU=MWU.(!mwu.):(?MWU.?mwu)&!MWU)
      & ( flattenMWU
        =   
          .   map
            $ ( ( 
                =   
                  .       !arg
                        : (w|c|pc.?,?arg)
                      & !arg
                    | !arg
                )
              . !arg
              )
        )
      & 0:?ID
      & ( msd
        =   p m
          .   !arg:(?p.?m)
            &   str
              $ ( "UPosTag="
                  !p
                  ( !m:(|"_")&
                  | "|" !m
                  )
                )
        )
      & ( join
        =   A L M e a w XX E A C jr
          .   :?L
            &   whl
              ' ( !arg:%?A ?arg
                &     (   !A:(?e.?a,?w)
                        &   !e
                          : ( w
                            |   c
                              & !a:? (type.p) ?
                            )
                        &   !arg
                          :   @
                              ( (w.?,?)
                              | (c.? (type.p) ?,?)
                              | (lb.? (break.no) ?,?)
                              )
                              ?
                        & (join.right):?jr
                        & (   !w:?XX (?E.?A,?C)
                            & (!e.!a,!XX (!E.!A !jr,!C))
                          | (!e.!a !jr,!w)
                          )
                      | !A
                      )
                      !L
                  : ?L
                )
            & :?M
            & whl'(!L:%?A ?L&!A !M:?M)
            & !M
        )
      & ( AmbiguousPosOrLemma
        =   lenPS lenLS ID excludes ids len alts A M Z
          .   !arg:(?lenPS.?lenLS.?ID)
            & :?excludes:?ids
            & "'excludes' collects @exclude attributes to be added to <w> elements with ambiguous analysis of @pos and/or @lemma.
               'ids' contains the complements of the 'excludes'"
            & (   !lenPS+!lenLS:>2
                & "Ambiguous pos or lemma."
                & (!lenPS:>1|!lenLS):?len
                & :?alts
                &   whl
                  ' ( !len+-1:~<0:?len
                    & !alts str$("#A" (!ID+1:?ID) " "):?alts
                    )
                & (   !alts
                    :   ?A
                        @(?:"#" ?M " ")
                        ( ?Z
                        &     !excludes
                              ( exclude
                              . @(str$(!A !Z):?A " ")&!A
                              )
                          : ?excludes
                        & !ids ("xml:id".!M):?ids
                        & ~
                        )
                  | 
                  )
              | 
              )
            & (!ids.!excludes.!ID)
        )
      & ( rid
        =   aa zz tokid
          .   !arg:(?tokid.?arg)
            &   ( !arg:?aa ("xml:id".?) ?zz&!aa !zz
                | !arg
                )
                ("xml:id".!tokid)
        )
      & ( anno
        =   A e a s lenPS lenLS lenMS id to PS MS LS tokid
          .   map
            $ ( ( 
                =   a b c
                  .   !arg:(w.?a,@ (w.?b,?c))&(w.!b,!c)
                    | !arg
                )
              .   map
                $ ( ( 
                    =     M Z aa alts excludes ids len theMWU tokid zz
                        , e a s id to P M L save
                      .   !arg:?save&!arg:@
                        |   !arg:(?e.?a,?s)
                          & (     !e
                                : ( w
                                  |   c
                                    & ( !a:? (type.s) ?
                                      | pc:?e
                                      )
                                  )
                              & (     !s
                                    : ? (w|c.?,?) ?
                                  & getSP$() (!e.!a,anno$(join$!s))
                                |   "Element is w or c or pc and has no child elements."
                                  & (   !a:? ("xml:id".?id) ?
                                      & (   !MWUend:
                                          & "Element is not part of MWU or it is the first element in MWU."
                                          & (     !PML
                                                :   ( !id
                                                    . ?to
                                                    . ?PS [?lenPS
                                                    . ?MS [?lenMS
                                                    . ?LS [?lenLS
                                                    . ?tokid
                                                    )
                                                    ?PML
                                              & "The 'c' elements that are spaces don't get here.
                                                       Current TEI element is w or pc"
                                              &   AmbiguousPosOrLemma$(!lenPS.!lenLS.!ID)
                                                : (?ids.?excludes.?ID)
                                              & (   !to:!id
                                                  & "Element is not a MWU."
                                                  &   getSP$()
                                                      (   !excludes:
                                                        & (     !PS
                                                              : !LS
                                                              : 
                                                            & (!e.!a,!s)
                                                          |   
                                                            & ( !e
                                                              .     (   (   !e
                                                                          : ~pc
                                                                        |   !PCLEMMA
                                                                          : y
                                                                        )
                                                                      & (lemma.!LS)
                                                                    | 
                                                                    )
                                                                    ( !POS
                                                                    .   msd
                                                                      $ (!PS.!MS)
                                                                    )
                                                                      rid
                                                                    $ (!tokid.!a)
                                                                , !s
                                                              )
                                                          )
                                                      |   "not tested"
                                                        & ( !e
                                                          .     (   (   !e
                                                                      : ~pc
                                                                    |   !PCLEMMA
                                                                      : y
                                                                    )
                                                                  &   !LS
                                                                    : @
                                                                  & (lemmax.!LS)
                                                                | 
                                                                )
                                                                (     !MS
                                                                    : @
                                                                  &   !PS
                                                                    : @
                                                                  & ( !POS
                                                                    .   msd
                                                                      $ (!PS.!MS)
                                                                    )
                                                                | 
                                                                )
                                                                !a
                                                            ,   map
                                                              $ ( ( 
                                                                  =   id
                                                                    .     !ids
                                                                        :   %?id
                                                                            ?ids
                                                                      & (   !PS
                                                                          :   %?P
                                                                              ?PS
                                                                        | 
                                                                        )
                                                                      & (   !MS
                                                                          :   %?M
                                                                              ?MS
                                                                        | 
                                                                        )
                                                                      & (   !LS
                                                                          :   %?L
                                                                              ?LS
                                                                        | 
                                                                        )
                                                                      & ( !e
                                                                        .     (   (   !e
                                                                                    : ~pc
                                                                                  |   !PCLEMMA
                                                                                    : y
                                                                                  )
                                                                                & ( lemmab
                                                                                  . !L
                                                                                  )
                                                                              | 
                                                                              )
                                                                              ( !POS
                                                                              .   msd
                                                                                $ ( !P
                                                                                  . !M
                                                                                  )
                                                                              )
                                                                                rid
                                                                              $ ( !tokid
                                                                                . !a
                                                                                )
                                                                              !id
                                                                              !arg
                                                                          , !s
                                                                        )
                                                                  )
                                                                . !excludes
                                                                )
                                                          )
                                                      )
                                                |   "'from' and 'to' are different. Remember the 'to' value in 'MWUend'.
                                                 also start collecting MWU units in 'mwu'. Note that MWUend currently is empty."
                                                  & !to:?MWUend
                                                  &   (!e.rid$(!tokid.!a),!s)
                                                    : ?mwu
                                                  & 
                                                )
                                            |   !SP (!e.!a,!s):?SP
                                              & 
                                            )
                                        |   "'MWUend' is not empty."
                                          & !id:!MWUend
                                          & "Reached the last element in a MWU like 'e' '.' 'g' '.'"
                                          & :?MWUend
                                          &   !mwu (!e.!a,!s)
                                            : ?mwu
                                            :   ( ?
                                                .   ? ("xml:id".?iD) ?
                                                  , ?
                                                )
                                                ?
                                          &   (     !mwu
                                                  :   ?
                                                      ( ?
                                                      .     ?
                                                            (join.right)
                                                            ?
                                                        , ?
                                                      )
                                                      @
                                                & (join.right)
                                              | 
                                              )
                                            : ?jr
                                          & flattenMWU$(getMWU$):?theMWU
                                          &   getSP$()
                                              (     !excludes
                                                  : (|0)
                                                & ( w
                                                  .     (lemma.!LS)
                                                        (!POS.msd$(!PS.!MS))
                                                        ("xml:id".!iD)
                                                        !jr
                                                    , !theMWU
                                                  )
                                              |   "not tested"
                                                & ( w
                                                  .     (   !LS:@
                                                          & (lemmad.!LS)
                                                        | 
                                                        )
                                                        (   !MS:@
                                                          & !PS:@
                                                          & (!POS.msd$(!PS.!MS))
                                                        | 
                                                        )
                                                        !a
                                                        !jr
                                                    ,   map
                                                      $ ( ( 
                                                          =   
                                                            .     !ids
                                                                : %?id ?ids
                                                              & (   !PS
                                                                  : %?P ?PS
                                                                | 
                                                                )
                                                              & (   !MS
                                                                  : %?M ?MS
                                                                | 
                                                                )
                                                              & (   !LS
                                                                  : %?L ?LS
                                                                | 
                                                                )
                                                              & ( w
                                                                .     (lemmae.!L)
                                                                      ( !POS
                                                                      .   msd
                                                                        $ (!P.!M)
                                                                      )
                                                                      !id
                                                                      !arg
                                                                  , !theMWU
                                                                )
                                                          )
                                                        . !excludes
                                                        )
                                                  )
                                              )
                                        |   "'mwu' is not empty."
                                          & !mwu (!e.!a,!s):?mwu
                                          & 
                                        )
                                    |   "Element has no xml:id"
                                      & getSP$() (!e.!a,!s)
                                    )
                                )
                            |   "(Not w or c) AND/OR child elements present"
                              & (   !s:? (w.?,?) ?
                                  & join$!s:?s
                                | 
                                )
                              & getSP$() (!e.!a,anno$!s):?temp
                              & ( !mwu:&!temp
                                | !mwu !temp:?mwu&
                                )
                            )
                        | getSP$() !arg
                    )
                  . !arg
                  )
              )
        )
      & :?MWUend:?mwu:?to:?SP
      & anno$!tei:?tei
      & ( cleanup
        =   A e a s aa zz pat
          .   !arg:(?arg.(=?pat))
            &   map
              $ ( ( 
                  =   
                    .     !arg:(?e.?a,?s)
                        & (     !e
                              : (w|pc|c)
                            & (   !a:? (type.s) ?
                                & (!s:~|)
                              |     whl
                                  ' ( !a:!pat
                                    & !aa !zz:?a
                                    )
                                & ( !a:&!s
                                  | (!e.!a,cleanup$(!s.'$pat))
                                  )
                              )
                          | (!e.!a,cleanup$(!s.'$pat))
                          )
                      | !arg
                  )
                . !arg
                )
        )
      & ( filter
        =   tei elm
          .   !arg:(?tei.?elm)
            &   map
              $ ( ( 
                  =   e a s
                    .     !arg:(?e.?a,?s)
                        & ( !e:!elm&!arg
                          | !e:s&filter$(!s.!elm)
                          | !e:(w|pc)&!s
                          | !e:linkGrp&
                          | (!e.!a,filter$(!s.!elm))
                          )
                      | !arg
                  )
                . !tei
                )
        )
      & ( getListOfLinkGrp
        =   tei seg stx from to S A B C,syn target ana skipped
          .   !arg:(?tei.?seg.?stx)
            & :?skipped
            &   map
              $ ( ( 
                  =   
                    .     !arg
                        : ( span
                          .     ? (from.?from) ?
                              : ( ? (to.?to) ?
                                | ?&!from:?to
                                )
                              : ? ("xml:id".?S) ?
                            , 
                          )
                      &   !stx
                        :   ?A
                            ( (span.? (from.!from) ?,?)
                            : ?syn
                            )
                            ?stx
                      & ( !from:!to
                        |     !stx
                            :   ?B
                                ( (span.? (from.!to) ?,?)
                                : ?C
                                )
                                ?stx
                          & !syn !B !C:?syn
                        )
                      & !skipped !A:?skipped
                      & ( !from
                        , !to
                        , ( linkGrp
                          .   (targFunc."head argument") (type.UD-SYN)
                            ,   map
                              $ ( ( 
                                  =   
                                    .     !arg
                                        : ( span
                                          .   (from.?from)
                                            ,   (   ?
                                                    ( link
                                                    . (target.?target),
                                                    )
                                                    ?
                                                |   ?
                                                  & root:?target
                                                )
                                              : ? (term.,?ana) ?
                                          )
                                      & ( link
                                        .     (ana.!ana)
                                              (target.str$(!target " " !from))
                                          , 
                                        )
                                  )
                                . !syn
                                )
                          )
                        )
                  )
                . !seg
                )
        )
      & ( reverseList
        =   L a
          .   :?L
            & whl'(!arg:%?a ?arg&!a !L:?L)
            & !L
        )
      & ( reverseString
        = .str$(reverseList$(vap$((=.!arg).str$!arg)))
        )
      & ( insertStxEasyWay
        =   A B M E P Q id to linkGrp x parentID tsil
          .     
              : ?A
              : ?B
              : ?M
              : ?E
              : ?P
              : ?Q
              : ?to
              : ?id
              : ?tsil
            & !arg:(?arg.?parentID)
            &   whl
              ' (   !arg
                  :   ?A
                      ( ( ?
                        .     ?
                              ( "xml:id"
                              .   ?id
                                &   !ListOfLinkGrp
                                  : ?Q (!id,?to,?linkGrp) ?P
                              )
                              ?
                          , ?
                        )
                      : ?B
                      )
                      ?M
                & (   !id:!to
                    & !M:?arg
                    & !listOfMissedLinkGrp !Q:?listOfMissedLinkGrp
                    & !P:?ListOfLinkGrp
                    &     ( s
                          .   ( "xml:id"
                              .   str
                                $ ( !parentID
                                    ( !parentID:&div-
                                    | "."
                                    )
                                    (1+!Id:?Id)
                                  )
                              )
                            , !B !linkGrp
                          )
                          reverseList$!A
                          !tsil
                      : ?tsil
                  |     !M
                      :   ?M
                          ((?.? ("xml:id".!to) ?,?):?E)
                          ?arg
                    & !listOfMissedLinkGrp !Q:?listOfMissedLinkGrp
                    & !P:?ListOfLinkGrp
                    &     ( s
                          .   ( "xml:id"
                              .   str
                                $ ( !parentID
                                    ( !parentID:&div-
                                    | "."
                                    )
                                    (1+!Id:?Id)
                                  )
                              )
                            , !B !M !E !linkGrp
                          )
                          reverseList$!A
                          !tsil
                      : ?tsil
                  )
                )
            & reverseList$!tsil !arg
        )
      & ( spotAndInsertSTXEasy
        =   parentID
          .   !arg:(?arg.?parentID)
            &   map
              $ ( ( 
                  =   e a c d
                    .   !arg:(@|("!--".?))
                      |   !arg:(?e.?a,?c)
                        & (     !a
                              : ? ("xml:id"|id.?parentID) ?
                            & 
                          | 
                          )
                        & insertStxEasyWay$(!c.!parentID):?d
                        & (   !c:!d
                            & (!e.!a,spotAndInsertSTXEasy$(!c.!parentID))
                          | !e:s&!d
                          | (!e.!a,!d)
                          )
                      | PROBLEM !arg
                  )
                . !arg
                )
        )
      & ( trace
        =   tei id a b c d
          .   !arg:(?tei.?id)
            & (     !tei
                  : ? (?a.?b ("xml:id".!id) ?c,?d) ?
                & (!a.!b ("xml:id".!id) !c,!d)
              |     !tei
                  :   ?
                      (?a.?b,?c&trace$(!c.!id):?d)
                      ?
                & (!a.!b,!c) !d
              )
        )
      & ( digDown1
        =   tei startTrace linkGrp a b c d e f startStep
          .   !arg:(?tei.?parentID.%?startStep ?startTrace.?linkGrp)
            & (   !startTrace:
                & !tei:?a !startStep ?c
                &   !a
                    ( s
                    .   ( "xml:id"
                        .   str
                          $ ( !parentID
                              ( !parentID:&div-
                              | "."
                              )
                              (1+!Id:?Id)
                            )
                        )
                      , !startStep !linkGrp
                    )
                    !c
              |   !startStep:(?b.?c,?d)
                & (     !c
                      : ? ("xml:id"|id.?parentID) ?
                    & 
                  | 
                  )
                & !tei:?a !startStep ?f
                & !a (!b.!c,digDown1$(!d.!parentID.!startTrace.!linkGrp)) !f
              )
        )
      & ( digDown
        =     tei startTrace endTrace linkGrp
            , a b c d e f startStep endStep
          .     !arg
              : ( ?tei
                . ?parentID
                . %?startStep ?startTrace
                . %?endStep ?endTrace
                . ?linkGrp
                )
            & (   !startStep:!endStep:(?b.?c,?d)
                & (     !c
                      : ? ("xml:id"|id.?parentID) ?
                    & 
                  | 
                  )
                & !tei:?a !startStep ?f
                & !a (!b.!c,digDown$(!d.!parentID.!startTrace.!endTrace.!linkGrp)) !f
              |   !tei:?a !startStep ?b !endStep ?c
                &   !a
                    ( div
                    .   ( "xml:id"
                        .   str
                          $ ( !parentID
                              ( !parentID:&div-
                              | "."
                              )
                              (1+!Id:?Id)
                            )
                        )
                      , !startStep !b !endStep !linkGrp
                    )
                    !c
              )
        )
      & ( spotAndInsertSTXhard
        =   TEIatt listOfMissedLinkGrp parentID tei textatt
          .   !arg:(?tei.?listOfMissedLinkGrp.?parentID)
            &   map
              $ ( ( 
                  =   start end linkGrp
                    .   !arg:(?start,?end,?linkGrp)
                      & trace$(!tei.!start):?startTrace
                      &   (   !start:!end
                            & digDown1$(!tei.!parentID.!startTrace.!linkGrp)
                          |   trace$(!tei.!end):?endTrace
                            & digDown$(!tei.!parentID.!startTrace.!endTrace.!linkGrp)
                          )
                        : ?tei
                  )
                . !listOfMissedLinkGrp
                )
            & !tei
        )
      & ( !stx:
        |   getListOfLinkGrp$(!tei.!seg.!stx):?ListOfLinkGrp
          & :?listOfMissedLinkGrp
          & ( !textatt:? ("xml:id"|id.?parentID) ?
            | !TEIatt:? ("xml:id"|id.?parentID) ?
            | :?parentID
            )
          & 0:?Id
          & spotAndInsertSTXEasy$(!tei.!parentID):?tei
          & ( !listOfMissedLinkGrp:
            |     spotAndInsertSTXhard$(!tei.!listOfMissedLinkGrp !ListOfLinkGrp.!parentID)
                : ?tei
              & ( getIDsRight
                =   
                  .   map
                    $ ( ( 
                        =   e a c b d v S I F A Z id
                          .     !arg:(?e.?a,?c)
                              & ( !e
                                .         !a
                                        :   ?b
                                            (   ("xml:id"|id)
                                              : ?id
                                            . ?v
                                            )
                                            ?d
                                      & @(!v:?S "." ~/#%?I)
                                      &   (   !prefi:?A (!S.?F) ?Z
                                            & (!S.!F+1:?F) !A !Z
                                          | (!S.1:?F) !prefi
                                          )
                                        : ?prefi
                                      & !b (!id.str$(!S "." !F)) !d
                                    | !a
                                  , getIDsRight$!c
                                )
                            | !arg
                        )
                      . !arg
                      )
                )
              & :?prefi
              & getIDsRight$!tei:?tei
            )
        )
      & ( Camel
        =   
          .   map
            $ ( ( 
                =   e a c A L Z x com C
                  .     !arg:(?e.?a,?c)
                      & (   !e:(w|pc)
                          & (     !a
                                : ?A (@(?:lemma ?xyd).?L) ?Z
                              & reverseString$!L:?L
                              & reverseString$!c:?C
                              & @( !C
                                 : ? (?com&@(!L:?x ~<>!com))
                                 )
                              &     !A
                                    (str$(lemma !xyd).reverseString$(!x !com))
                                    !Z
                                : ?a
                            | 
                            )
                          & (!e.!a,!c)
                        | (!e.!a,Camel$!c)
                        )
                    | !arg
                )
              . !arg
              )
        )
      & ( insertNER
        =   tei to To cat from,A E Z F M stuw to
          .   !arg:(?tei.?to)
            & :?stuw:?cat
            & (   map
                $ ( ( 
                    =   e a c id
                      .       !arg
                            : ( ?e
                              .     ? ("xml:id".@(?id:"#" ?)) ?
                                  : ?a
                                , ?c
                              )
                          & (   !to:
                              & (     (nerH..find)$!id
                                    : (?.?To,?cat) ?
                                  & (     (organization.ORG)
                                          (person.PER)
                                          (misc.MISC)
                                          (place street country city.LOC)
                                      : ? (? ~<>!cat ?.?cat) ?
                                    | 
                                    )
                                  & (   !To:~:?to
                                      & !stuw !arg:?stuw
                                      & 
                                    |   :?to
                                      &   (name.(type.!cat),Camel$!arg)
                                        : ?arg
                                      & :?cat
                                      & !arg
                                    )
                                | !arg
                                )
                            |   !id:!to
                              & :?to
                              &   (name.(type.!cat),Camel$(!stuw !arg))
                                : ?arg
                              & :?cat:?stuw
                              & !arg
                            | !stuw !arg:?stuw&
                            )
                        | !arg:(head|note.?,?)
                        |     !arg
                            : (?e.?a,? (?.?,?) ?:?c)
                          & insertNER$(!c.!to):(?tei.?carry)
                          & (   !carry:(,)
                              & ( !to:&(!e.!a,!tei)
                                |     (name.(type.!cat),Camel$(!stuw !arg))
                                    : ?arg
                                  & :?stuw:?cat:?to
                                  & !arg
                                )
                            |   !stuw !arg:?stuw
                              & !carry:(?to,|?cat)
                              & 
                            )
                        | !arg
                    )
                  . !tei
                  )
              . !to,!cat
              )
        )
      & (!nerH:|insertNER$(!tei.):(?tei.?))
      & ( rm#
        =   
          .   map
            $ ( ( 
                =   e a c A Z id v
                  .   !arg:@
                    |   !arg:(?e.?a,?c)
                      & (     !a
                            :   ?A
                                ( ("xml:id"|id):?id
                                . @(?:"#" ?v)
                                )
                                ?Z
                          & !A (!id.!v) !Z:?a
                        | 
                        )
                      & (!e.!a,rm#$!c)
                    | !arg
                )
              . !arg
              )
        )
      & rm#$!tei:?tei
      & ( adaptid
        =   parentID tei subid id
          .   !arg:(?id.?subid.?parentID.?tei)
            & (   map
                $ ( ( 
                    =   e a c A M Z ID v nc x id
                      .   !arg:@
                        |   !arg:(?e.?a,?c)
                          & (     !a
                                :   ?A
                                    ("xml:id"|id.?ID)
                                    ?M
                                    (("xml:id"|id):?id.?v)
                                    ?Z
                              & ( (IDS..find)$!ID:(?.?ID)
                                | (IDS..insert)$(!ID.str$!parentID)
                                )
                              &   !A !M !Z
                                : (   ?A (exclude.?x) ?Z
                                    &   ( exclude
                                        .       vap
                                              $ ( ( 
                                                  =   id
                                                    .   @(!arg:"#" ?id)
                                                      & " " "#" !parentID "." !id
                                                  )
                                                . !x
                                                . " "
                                                )
                                            : " " ?M
                                          & str$!M
                                        )
                                      : ?M
                                  | ?A ?M ?Z
                                  )
                              & ( !e
                                .   !A (!id.str$(!parentID "." !v)) !M !Z
                                  , !c
                                )
                            |     (     !a
                                      :   ?A
                                          (   ("xml:id"|id)
                                            : ?ID
                                          . ?v
                                          )
                                          ?Z
                                    & ( (IDS..find)$!v:(?.?v)
                                      |   (IDS..insert)
                                        $ ( !v
                                          .     str
                                              $ ( !parentID
                                                  "."
                                                  (1+!subid:?subid)
                                                )
                                            : ?v
                                          )
                                      )
                                    & adaptid$(!id.!subid.!v.!c):(?nc.?subid)
                                    & !A (!ID.!v) !Z
                                  |   !e:~s
                                    & !parentID:?v
                                    & adaptid$(!id.!subid.!v.!c):(?nc.?subid)
                                    & !a
                                  |   adaptid$(!id.0.!v.!c):(?nc.?)
                                    &   ( !id
                                        .     str
                                            $ (!parentID "." (1+!subid:?subid))
                                          : ?v
                                        )
                                        !a
                                  )
                                : ?a
                              & (!e.!a,!nc)
                            )
                        | !arg
                    )
                  . !tei
                  )
              . !subid
              )
        )
      & ( reidentify
        =   
          .   map
            $ ( ( 
                =   e a c A Z id v nc
                  .   !arg:@
                    |   !arg:(?e.?a,?c)
                      & (     !a
                            :   ?A
                                (("xml:id"|id):?id.?v)
                                ?Z
                          & (     !c
                                :   ?
                                    ( ?
                                    .     ?
                                          ( "xml:id"|id
                                          . @(?:!v ?)
                                          )
                                          ?
                                      , ?
                                    )
                                    ?
                              & (!e.!a,reidentify$!c)
                            |   adaptid$(!id.0.!v.!c):(?nc.?)
                              & (!e.!a,!nc)
                            )
                        | (!e.!a,reidentify$!c)
                        )
                    | !arg
                )
              . !arg
              )
        )
      & ( relink
        =   parentID tei
          .   !arg:(?parentID.?tei)
            &   map
              $ ( ( 
                  =   e attr content A Z id v newParentID
                    .   !arg:@
                      |   !arg:(?e.?attr,?content)
                        & :?newParentID
                        & ( !e
                          .     map
                              $ ( ( 
                                  =   val
                                    .       !arg
                                          : (   (from|to)
                                              : ?ID
                                            . @(?:"#" ?val)
                                            )
                                        & (IDS..find)$!val:(?.?val)
                                        & (!ID.str$("#" !val))
                                      |   !arg:(target.?val)
                                        &     vap
                                            $ ( ( 
                                                =   t
                                                  .   " "
                                                      (   @(!arg:"#" ?t)
                                                        &   (IDS..find)$!t
                                                          : (?.?t)
                                                        & str$("#" !t)
                                                      |   !arg:root
                                                        & str$("#" !parentID)
                                                      | !arg
                                                      )
                                                )
                                              . !val
                                              . " "
                                              )
                                          : " " ?val
                                        & (target.str$!val)
                                      |   !arg
                                        : ("xml:id"|id.?newParentID)
                                      | !arg
                                  )
                                . !attr
                                )
                            ,   relink
                              $ ( !newParentID:~|!parentID
                                . !content
                                )
                          )
                      | !arg
                  )
                . !tei
                )
        )
      & new$hash:?IDS
      & reidentify$!tei:?tei
      & :?ides
      & (IDS..forall)$(=.!arg !ides:?ides)
      & relink$(.!tei):?tei
      & :?IDS
      & ( TagUsage
        =   
          .   map
            $ ( ( 
                =   e c a
                  .     !arg:(?e.?a,?c)
                      & !e+!occurs:?occurs
                      & (     !a
                            : ? ("xml:id"|id.?) ?
                          & !e+!withId:?withId
                        | 
                        )
                      & TagUsage$!c
                    | 
                )
              . !arg
              )
        )
      & ( replList
        =   headstuff el nw
          .   !arg:(?headstuff.?el.?nw)
            &   map
              $ ( ( 
                  =   e a c
                    .     !arg:(?e.?a,?c)
                        & (   !c:? (!el.?,?) ?
                            & (!e.!a,!nw)
                          | (!e.!a,replList$(!c.!el.!nw))
                          )
                      | !arg
                  )
                . !headstuff
                )
        )
      & ( computeTagUsage
        =   occurs withId tagUsage n name m atts
          .   0:?occurs:?withId
            & TagUsage$!arg
            & :?tagUsage
            &   whl
              ' ( !occurs:?n*%@?name+?occurs
                & (gi.!name) (occurs.!n):?atts
                & ( "withId attribute not wanted in Parlamint project."
                  |   !withId:?+?m*!name+?
                    & !atts (withId.!m):?atts
                  | 
                  )
                & !tagUsage (tagUsage.!atts,):?tagUsage
                )
            & !tagUsage
        )
      & ( updateHead
        =   head tei
          .   !arg:(?head.?tei)
            &   map
              $ ( ( 
                  =   e a c A Z
                    .     !arg:(?e.?a,?c)
                        & ( !e
                          .   !a
                            ,     !e:tagsDecl
                                & replList$(!c.tagUsage.computeTagUsage$!tei)
                              |   !e:resp
                                & "Data retrieval, linguistic annotation, and conversion to TEI"
                              |   !e:title
                                & (   !a:? (type.main) ?
                                    & @(!c:?A "[" ?M "]" ?Z)
                                    & str$(!A "[" !M ".ana]" !Z)
                                  | !c
                                  )
                              | updateHead$(!c.!tei)
                          )
                      | !arg
                  )
                . !head
                )
        )
      & ( ~
        |       cleanup
              $ ( !tei
                .     !stx:
                    & ( 
                      =   ?aa
                          (   "xml:id"
                            | T
                            | S
                            | type
                          . ?
                          )
                          ?zz
                      )
                  | ( 
                    =   ?aa
                        (T|S|type.?)
                        ?zz
                    )
                )
            : ?tei
          & ( !ANNOTATE:text
            | filter$(!tei.!ANNOTATE):?tei
            )
        )
      & updateHead$(!head.!tei):?head
      & "Modified toML. No space before slash in empty tags."
      & ( toML
        =   O d t g l "&" w \" "'" H G S D E F I U
          .   :?O
            & chr$127:?D
            & ( d
              = a.whl'(!arg:%?a ?arg&!a !O:?O)
              )
            &     
                ' ( a c n
                  .     @(!arg:?a (>%@($D) ?:?arg))
                      & ( @( !arg
                           : (%?c&utf$!c:?n) ?arg
                           )
                        | @( !arg
                           : (%?c&asc$!c:?n) ?arg
                           )
                        )
                      & !a "&#" !n ";" S$!arg
                    | !arg
                  )
              : (=?S)
            &     
                ' ( a c n
                  .     @(!arg:?a (>%@($D) ?:?arg))
                      & (   @( !arg
                             : (%?c&utf$!c:?n) ?arg
                             )
                          & (   !n:>255
                              & !a "&#" !n ";" I$!arg
                            | !a chr$!n I$!arg
                            )
                        | !a !arg
                        )
                    | !arg
                  )
              : (=?I)
            &     
                ' ( a c n
                  .     @(!arg:?a (>%@($D) ?:?arg))
                      & (   @( !arg
                             : (%?c&utf$!c:?n) ?
                             )
                          & !a !arg
                        |   @( !arg
                             : (%?c&asc$!c:?n) ?arg
                             )
                          & !a chu$!n U$!arg
                        )
                    | !arg
                  )
              : (=?U)
            &   MLencoding$!arg
              : ( ~<>utf-8&U:?F
                | ~<>iso-8859-1&I:?F
                | ?&S:?F
                )
            & '($F)$!a:(=?H)
            & '($F)$!arg:(=?G)
            &     
                ' ( a b
                  .     @(!arg:?a "&" ?arg)
                      & $H "&amp;" "&"$!arg
                    | $G
                  )
              : (=?"&")
            &     
                ' ( a b
                  .     @(!arg:?a ()$D ?arg)
                      & "&"$!a (@(!arg:%?b ?arg)&!b) E$!arg
                    | "&"$!arg
                  )
              : (=?E)
            &     
                ' ( a
                  .   @(!arg:?a "<" ?arg)&E$!a "&lt;" l$!arg
                    | E$!arg
                  )
              : (=?l)
            & ( g
              =   a
                .   @(!arg:?a ">" ?arg)&l$!a "&gt;" g$!arg
                  | l$!arg
              )
            & ( \"
              =   a
                .   @(!arg:?a \" ?arg)&g$!a "&quot;" \"$!arg
                  | g$!arg
              )
            & ( "'"
              =   a
                .   @(!arg:?a "'" ?arg)&\"$!a "&apos;" "'"$!arg
                  | \"$!arg
              )
            & ( t
              =   a v
                .     !arg:(?a.?v) ?arg
                    & " " g$!a "=\"" "'"$!v \" t$!arg
                  | 
              )
            & (   !arg:? (html|HTML.?) ?
                & ( Q
                  =   !C:
                    &   low$!A
                      : ( area
                        | base
                        | br
                        | col
                        | command
                        | embed
                        | hr
                        | img
                        | input
                        | keygen
                        | link
                        | meta
                        | param
                        | source
                        | track
                        | wbr
                        )
                  )
              | (Q=!C:)
              )
            &     
                ' ( r A B C T
                  .   whl
                    ' ( !arg:%?r ?arg
                      & (   !r:(?A.?B)
                          & (   !B:(?T,?C)
                              & ( $Q&d$("<" !A t$!T "/>")
                                |   d$("<" !A t$!T ">")
                                  & (   !A:(~<>script|~<>style)
                                      & d$!C
                                    | w$!C
                                    )
                                  & d$("</" !A ">")
                                )
                            |   !A
                              : (   
                                  & !B:(?B.)
                                  & d$("</" g$!B ">")
                                | "!"&d$("<!" !F$!B ">")
                                | "!--"&d$("<!--" !F$!B "-->")
                                | "?"&d$("<?" !F$!B "?>")
                                | "![CDATA["&d$("<![CDATA[" !F$!B "]]>")
                                | "!DOCTYPE"&d$("<!DOCTYPE" !F$!B ">")
                                | ?&d$("<" !A t$!B ">")
                                )
                            )
                        | d$(g$!r)
                        )
                      )
                  )
              : (=?w)
            & w$!arg
            &   str
              $ ( ( 
                  =   a L
                    .   :?L
                      &   whl
                        ' (!arg:%?a ?arg&!a !L:?L)
                      & !L
                  )
                $ !O
                )
        )
      &   (   !head:
            & !tail:
            & !TEIatt:
            & (text.!textatt,(body.,!tei))
          | !teiA (TEI.!TEIatt,!head (text.!textatt,!tei) !tail) !teiZ
          )
        : ?tei
      & put$(toML$!tei,!output,NEW)
  )
  ( new
  =   
    .   ~&"Remove the ~ to merely reformat the code, not run it."
      |   ~
        &   (its.doit)
          $ ( "C:\\gitprojects\\texton\\teianno\\Ifacet_seg_tokF"
            . "C:\\gitprojects\\texton\\teianno\\IfacettokF"
            . "C:\\gitprojects\\texton\\teianno\\IfacetposF"
            . "C:\\gitprojects\\texton\\teianno\\IfacetmrfF"
            . "C:\\gitprojects\\texton\\teianno\\IfacetlemF"
            . "C:\\gitprojects\\texton\\teianno\\IfacetsegF"
            . "C:\\gitprojects\\texton\\teianno\\IfacetstxF"
            . "C:\\gitprojects\\texton\\teianno\\IfacetnerF"
            . "C:\\gitprojects\\texton\\teianno\\plain.out.xml"
            )
      |   ~
        &   (its.doit)
          $ ( "C:\\gitprojects\\texton\\teianno\\Ifacet_seg_tokF"
            . "C:\\gitprojects\\texton\\teianno\\IfacettokF"
            . "C:\\gitprojects\\texton\\teianno\\IfacetposF"
            . "C:\\gitprojects\\texton\\teianno\\IfacetmrfF"
            . "C:\\gitprojects\\texton\\teianno\\IfacetlemF"
            . "*"
            . "*"
            . "*"
            . "C:\\gitprojects\\texton\\teianno\\plain.out.xml"
            )
      |   ~
        &   (its.doit)
          $ ( "C:\\projects\\parlamint\\plain\\IfacetsetoF"
            . "C:\\projects\\parlamint\\plain\\IfacettokF"
            . "C:\\projects\\parlamint\\plain\\IfacetposF"
            . "C:\\projects\\parlamint\\plain\\IfacetmrfF"
            . "C:\\projects\\parlamint\\plain\\IfacetlemF"
            . "C:\\projects\\parlamint\\plain\\IfacetsegF"
            . "C:\\projects\\parlamint\\plain\\IfacetstxF"
            . "*"
            . "C:\\projects\\parlamint\\plain\\plain.out.xml"
            )
      |   ~
        &   (its.doit)
          $ ( "C:\\projects\\parlamint\\small\\IfacetsetoF"
            . "C:\\projects\\parlamint\\small\\IfacettokF"
            . "C:\\projects\\parlamint\\small\\IfacetposF"
            . "C:\\projects\\parlamint\\small\\IfacetmrfF"
            . "C:\\projects\\parlamint\\small\\IfacetlemF"
            . "C:\\projects\\parlamint\\small\\IfacetsegF"
            . "C:\\projects\\parlamint\\small\\IfacetstxF"
            . "*"
            . "C:\\projects\\parlamint\\small\\small.out.xml"
            )
      |   (its.doit)
        $ (arg$.arg$.arg$.arg$.arg$.arg$.arg$.arg$.arg$)
  );

r=
  get'("annotei.bra",TXT)
& rmv$(str$(annotei ".bak"))
& ren$("annotei.bra".str$(annotei ".bak"))
&   put
  $ ( "{annotei.bra

Create TEI P5 output with w pc elements that have attributes holding PoS tag and lemma.
Retain elements that occur in the TEI P5 input in the output.}

"
    , "annotei.bra"
    , NEW
    , WYD
    , BIN
    )
& lst'(program-annotei,"annotei.bra",APP,WYD,BIN)
& put'(\n,"annotei.bra",APP,WYD,BIN)
& lst'(r,"annotei.bra",APP,WYD,BIN)
& put$(str$("\nnew'" program-annotei ";\n"),"annotei.bra",APP,WYD,BIN)
& ;

new'program-annotei;
