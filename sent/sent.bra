{sent.bra
Create token annotation from Clarin Base Format file that already has token info indicated by T attributes.}

X=
  ( doit
  =   
    .   nestML$(get$(!arg,X ML)):?xml
      &   !xml
        : (   ?
              (TEI.?,? (text.?,?xml) ?)
              ?
          | ? (text.?,?xml) ?
          )
      & 0:?id
      & (ID="xml:id".str$(Z (1+!id:?id)))
      & ( content
        =   
          .   map
            $ ( ( 
                =   c
                  .       !arg
                        : ( (del|fw.?,?)
                          | ("!--".?)
                          )
                      & 
                    |     !arg
                        : ( (c.? (type.s) ?,?)
                          | (lb|pb.?,?)
                          )
                      & " "
                    |     !arg
                        : (c.? (type.p) ?,?c)
                      & !c
                    |   !arg:(w.?,?c)
                      & (!c:@|content$!c)
                    |   !arg:(?.?,?c)
                      & content$!c
                    | 
                )
              . !arg
              )
        )
      & ( From
        =   c
          .     !arg:@ (?.?,?c) ?
              & From$!c
            |     !arg
                :   @
                    (?.? ("xml:id".?arg) ?,?)
                    ?
              & !arg
        )
      & ( To
        =   c
          .     !arg:? (?.?,?c) @
              & To$!c
            |     !arg
                :   ?
                    (?.? ("xml:id".?arg) ?,?)
                    @
              & !arg
        )
      & ( par
        =   from to
          .     !arg
              : (   @
                    ((?.?,?):?F)
                    ?
                    ((?.?,?):?T)
                    @
                | ?F:?T
                )
            & (   From$!F:?from
                & (   To$!T:?to
                    & ( span
                      .     (from.str$("#" !from))
                            ( !to:!from&
                            | (to.str$("#" !to))
                            )
                            (type.Ssent)
                            !ID
                        , content$!arg
                      )
                  | out$(T !T)
                  )
              | out$(F !F)
              )
        )
      & ( snt
        =   e a c
          .     !arg:(?e.?,?c)
              & (   ( !e:s
                    |   !c
                      : ? (w|c.?,?) ?
                    )
                  & par$!c
                | map$(snt.!c)
                )
            | 
        )
      & (spanGrp.(ana.sent),map$(snt.!xml))
  )
  ( new
  =   
    .   ~
      |   ~
        &   put
          $ (   toML
              $ ( (its.doit)
                $ "C:\\gitprojects\\texton\\teitok\\test\\JEB-098.out.xml"
                )
            , "JEB-098.sent.xml"
            , NEW
            )
      |   ~
        &   put
          $ (   toML
              $ ((its.doit)$"C:\\gitprojects\\texton\\plainD2cbf\\maak.xml")
            , "maak.out2.xml"
            , NEW
            )
      |   ~
        &   put
          $ (   toML
              $ ( (its.doit)
                $ "C:\\projects\\csttools\\teitok\\adl_brandes.out.xml"
                )
            , "adl_brandes.out2.xml"
            , NEW
            )
      |   ~
        &   put
          $ (   toML
              $ ( (its.doit)
                $ "C:\\projects\\csttools\\teitok\\original-deposited-file-37.out.xml"
                )
            , "original-deposited-file-37.out2.xml"
            , NEW
            )
      |   ~
        &   put
          $ (   toML
              $ ( (its.doit)
                $ "C:\\downloads\\adl_brandes\\adl_brandes-18.xml-3887-step1.xml"
                )
            , "adl_brandes.out3.xml"
            , NEW
            )
      |   put
        $ (toML$((its.doit)$(arg$)),arg$,NEW)
  );

r=
  get'("sent.bra",TXT)
& rmv$(str$(sent ".bak"))
& ren$("sent.bra".str$(sent ".bak"))
&   put
  $ ( "{sent.bra
Create token annotation from Clarin Base Format file that already has token info indicated by T attributes.}

"
    , "sent.bra"
    , NEW
    , BIN
    )
& lst'(X,"sent.bra",APP)
& put'(\n,"sent.bra",APP,BIN)
& lst'(r,"sent.bra",APP)
& put$(str$("\nnew'" X ";\n"),"sent.bra",APP,BIN)
& ;

new'X;
